{"map":"{\"version\":3,\"sources\":[\"/Users/alex/Programming/web_development/map_dev_server/client/src/App.js\",\"/Users/alex/Programming/web_development/map_dev_server/client/src/reportWebVitals.js\",\"/Users/alex/Programming/web_development/map_dev_server/client/src/index.js\"],\"names\":[\"blocks\",\"blockid\",\"blockname\",\"imagesrc\",\"plotLineLow\",\"x0\",\"y0\",\"x1\",\"y1\",\"drawFunc\",\"dx\",\"dy\",\"yi\",\"D\",\"y\",\"x\",\"plotLineHigh\",\"xi\",\"Vector2D\",\"_classCallCheck\",\"this\",\"_createClass\",\"key\",\"value\",\"othervector\",\"number\",\"Map\",\"w\",\"h\",\"canvasdimensions\",\"data\",\"dataview\",\"numchunks\",\"offset\",\"scale\",\"chunkpixels\",\"startpoint\",\"Math\",\"floor\",\"ceil\",\"dimn\",\"start\",\"lines\",\"coords\",\"map_grid\",\"i\",\"j\",\"coordsobj\",\"push\",\"Promise\",\"resolve\",\"reject\",\"fetch\",\"method\",\"headers\",\"Accept\",\"Content-Type\",\"body\",\"JSON\",\"stringify\",\"then\",\"arrayBuffer\",\"chunkbuffer\",\"Uint32Array\",\"currentcell\",\"cell_i\",\"cell_k\",\"cell_j\",\"cell_l\",\"index\",\"colorhex\",\"AppWrapper\",\"_React$Component\",\"props\",\"_this\",\"_possibleConstructorReturn\",\"_getPrototypeOf\",\"call\",\"state\",\"tool_mode\",\"debug_mode\",\"show_stats\",\"color_selected\",\"update\",\"time\",\"tot_time\",\"num_updates\",\"draw\",\"cursorx\",\"cursory\",\"offsetx\",\"offsety\",\"chunkx\",\"chunky\",\"getColorSelected\",\"getDebugMode\",\"getToolMode\",\"changeColor\",\"out_num\",\"parseInt\",\"substring\",\"console\",\"log\",\"setState\",\"isSelected\",\"changeUpdateTime\",\"new_time\",\"changeDrawTime\",\"changeCursorLoc\",\"vector\",\"changeOffsetLoc\",\"changeChunkLoc\",\"_inherits\",\"document\",\"style\",\"overflow\",\"_this2\",\"React\",\"createElement\",\"className\",\"MapCanvas\",\"Palette\",\"position\",\"right\",\"round\",\"color\",\"type\",\"onChange\",\"checked\",\"Component\",\"_React$Component2\",\"_this3\",\"drawLines\",\"tempscale\",\"canvasRef\",\"createRef\",\"mapoffset\",\"celloffset\",\"cursorcurrent\",\"lmousedown\",\"rmousedown\",\"canvas\",\"current\",\"_this$canvas$getBound\",\"getBoundingClientRect\",\"width\",\"height\",\"setTimeout\",\"updateCanvas\",\"event\",\"rect\",\"clientX\",\"left\",\"clientY\",\"top\",\"end\",\"transform\",\"setTo\",\"_this4\",\"Date\",\"now\",\"resizeCanvas\",\"ctx\",\"getContext\",\"clearRect\",\"fillStyle\",\"fillRect\",\"_this$map_grid$getChu\",\"getChunkPosOffset\",\"mapoffset_x\",\"mapoffset_y\",\"doFill\",\"k\",\"l\",\"chunkbufferoffset\",\"beginPath\",\"lineWidth\",\"moveTo\",\"lineTo\",\"c\",\"CHUNKSIZE\",\"toString\",\"padStart\",\"stroke\",\"_this5\",\"_this$map_grid$getVal\",\"getValues\",\"multipliedby\",\"linestosend\",\"setMatrix\",\"drawMap\",\"_canvas$getBoundingCl\",\"_window$devicePixelRa\",\"window\",\"devicePixelRatio\",\"ratio\",\"context\",\"currentpos\",\"_this$map_grid$getChu2\",\"dataindex\",\"byteLength\",\"addCell\",\"newcursorcurrent\",\"getCursorPosition\",\"moveMap\",\"newcurrentcell\",\"getCurrentCell\",\"isEqualTo\",\"drawLine\",\"_this$map_grid$getChu3\",\"p1\",\"p2\",\"_this6\",\"abs\",\"plotLine\",\"drawCellAtMouse\",\"_this7\",\"ref\",\"onContextMenu\",\"e\",\"preventDefault\",\"onMouseDown\",\"button\",\"onMouseUp\",\"onMouseMove\",\"moveCursor\",\"onMouseLeave\",\"onWheel\",\"newscale\",\"deltaY\",\"_React$Component3\",\"_this8\",\"handleChange\",\"target\",\"_this9\",\"map\",\"backgroundColor\",\"concat\",\"onClick\",\"App\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"bind\",\"_ref\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"createRoot\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import './App.css';\\nimport React, { createRef } from 'react';\\n\\n\\nconst CHUNKSIZE = 16;\\n\\nconst blocksold = [\\n    {\\n        blockid: 0,\\n        blockname: '1',\\n        imagesrc: '#ffffff'\\n    },\\n    {\\n        blockid: 1,\\n        blockname: '2',\\n        imagesrc: '#d1e7dc'\\n    },\\n    {\\n        blockid: 2,\\n        blockname: '3',\\n        imagesrc: '#c4d4e1'\\n    },\\n    {\\n        blockid: 3,\\n        blockname: '4',\\n        imagesrc: '#bcb5d3'\\n    },\\n    {\\n        blockid: 4,\\n        blockname: '5',\\n        imagesrc: '#f5dbe2'\\n    },\\n    {\\n        blockid: 5,\\n        blockname: '6',\\n        imagesrc: '#eeb6c9'\\n    },\\n    {\\n        blockid: 6,\\n        blockname: '7',\\n        imagesrc: '#c49abf'\\n    },\\n    {\\n        blockid: 7,\\n        blockname: '8',\\n        imagesrc: '#bada55'\\n    },\\n    {\\n        blockid: 8,\\n        blockname: '9',\\n        imagesrc: '#ffd700'\\n    },\\n    {\\n        blockid: 9,\\n        blockname: '10',\\n        imagesrc: '#f47b79'\\n    }\\n];\\n  \\nconst blocks = [\\n    {\\n        blockid: '0',\\n        blockname: '1',\\n        imagesrc: '#ffffff'\\n    },\\n    {\\n        blockid: '1',\\n        blockname: '2',\\n        imagesrc: '#d1e7dc'\\n    },\\n    {\\n        blockid: '2',\\n        blockname: '3',\\n        imagesrc: '#c4d4e1'\\n    },\\n    {\\n        blockid: '3',\\n        blockname: '4',\\n        imagesrc: '#bcb5d3'\\n    },\\n    {\\n        blockid: '4',\\n        blockname: '5',\\n        imagesrc: '#f5dbe2'\\n    },\\n    {\\n        blockid: '5',\\n        blockname: '6',\\n        imagesrc: '#eeb6c9'\\n    },\\n    {\\n        blockid: '6',\\n        blockname: '7',\\n        imagesrc: '#c49abf'\\n    },\\n    {\\n        blockid: '7',\\n        blockname: '8',\\n        imagesrc: '#bada55'\\n    },\\n    {\\n        blockid: '8',\\n        blockname: '9',\\n        imagesrc: '#ffd700'\\n    },\\n    {\\n        blockid: '9',\\n        blockname: '10',\\n        imagesrc: '#f47b79'\\n    },\\n    {\\n        blockid: 'a',\\n        blockname: '11',\\n        imagesrc: '#c6e2d4'\\n    },\\n    {\\n        blockid: 'b',\\n        blockname: '12',\\n        imagesrc: '#b6d3c2'\\n    },\\n    {\\n        blockid: 'c',\\n        blockname: '13',\\n        imagesrc: '#e0b1cb'\\n    },\\n    {\\n        blockid: 'd',\\n        blockname: '14',\\n        imagesrc: '#d0a7b7'\\n    },\\n    {\\n        blockid: 'e',\\n        blockname: '15',\\n        imagesrc: '#f3d1d3'\\n    },\\n    {\\n        blockid: 'f',\\n        blockname: '16',\\n        imagesrc: '#e9b8c8'\\n    }\\n];\\n\\n  \\n\\nfunction plotLineLow(x0, y0, x1, y1, drawFunc) {\\n    let dx = x1 - x0;\\n    let dy = y1 - y0;\\n    let yi = 1;\\n    if (dy < 0) {\\n        yi = -1;\\n        dy = -dy;\\n    }\\n    let D = (2 * dy) - dx;\\n    let y = y0;\\n\\n    for (let x = x0;x<x1+1;x++) {\\n        drawFunc(x, y);\\n        if (D > 0) {\\n            y = y + yi;\\n            D = D + (2 * (dy - dx));\\n        } else {\\n            D = D + 2*dy;\\n        }\\n    }\\n}\\nfunction plotLineHigh(x0, y0, x1, y1, drawFunc) {\\n    let dx = x1 - x0;\\n    let dy = y1 - y0;\\n    let xi = 1;\\n    if (dx < 0) {\\n        xi = -1;\\n        dx = -dx;\\n    }\\n    let D = (2 * dx) - dy;\\n    let x = x0;\\n\\n    for (let y = y0;y<y1+1;y++) {\\n        drawFunc(x, y);\\n        if (D > 0) {\\n            x = x + xi;\\n            D = D + (2 * (dx - dy));\\n        } else {\\n            D = D + 2*dx;\\n        }\\n    }\\n}\\n\\nfunction plotLine(p1, p2, offset, drawFunc) {\\n    \\n    let x0 = p1.x+offset.x;\\n    let y0 = p1.y+offset.y;\\n    \\n    let x1 = p2.x+offset.x;\\n    let y1 = p2.y+offset.y;\\n\\n    if (x0===x1 && y0===y1) drawFunc(x0,y0);\\n\\n\\n    if (Math.abs(y1 - y0) < Math.abs(x1 - x0)) {\\n        if (x0 > x1) plotLineLow(x1, y1, x0, y0, drawFunc);\\n        else plotLineLow(x0, y0, x1, y1, drawFunc);\\n    }\\n    else {\\n        if (y0 > y1) plotLineHigh(x1, y1, x0, y0, drawFunc);\\n        else plotLineHigh(x0, y0, x1, y1, drawFunc);\\n    }\\n}\\n\\n\\nclass Vector2D {\\n    constructor(x,y) {\\n        this.x = x;\\n        this.y = y;\\n    }\\n\\n    transform(x,y) {\\n        this.x += x;\\n        this.y += y;\\n    }\\n\\n    setTo(x,y) {\\n        this.x = x;\\n        this.y = y;\\n    }\\n\\n    isEqualTo(othervector) {\\n        return (this.x===othervector.x && this.y===othervector.y);\\n    }\\n    notEqualTo(othervector) {\\n        return (this.x!==othervector.x || this.y!==othervector.y);\\n    }\\n\\n    positive() {\\n        return (this.x >= 0 && this.y >=0);\\n    }\\n\\n    multipliedby(number) {\\n        return new Vector2D(this.x*number,this.y*number);\\n    }\\n    transformedby(x,y) {\\n        return new Vector2D(this.x+x,this.y+y);\\n    }\\n}\\n\\n\\nclass Map {\\n    constructor(w, h) {\\n        this.canvasdimensions = new Vector2D(w,h); // establishing at start means no resizing canvas element\\n        this.data = null;\\n        this.dataview = null;\\n        this.numchunks = null;\\n    }\\n\\n    getValues(offset, scale) {\\n        let chunkpixels = CHUNKSIZE*scale;\\n\\n        let numchunks = new Vector2D(0,0);\\n        let startpoint = new Vector2D(0,0);\\n\\n        startpoint.x = (offset.x === 0) ? 0 : Math.floor((-1*offset.x)/chunkpixels);\\n        startpoint.y = (offset.y === 0) ? 0 : Math.floor((-1*offset.y)/chunkpixels);\\n\\n        numchunks.x = Math.ceil(this.canvasdimensions.x/chunkpixels)+1; // bit cheaty - should probs optimise\\n        numchunks.y = Math.ceil(this.canvasdimensions.y/chunkpixels)+1;\\n\\n        return {startpoint, numchunks};\\n    }\\n\\n    setMatrix(dimn, start, lines) {\\n\\n        let coords = [];\\n        let map_grid = this;\\n\\n        for (let i=0;i<dimn.x;i++) {\\n            for (let j=0;j<dimn.y;j++) {\\n                let coordsobj = { x: start.x+i, y: start.y+j };\\n                coords.push(coordsobj);    \\n            }\\n        }\\n        return new Promise(function(resolve, reject) {\\n            fetch('/getchunks',{\\n                method: 'POST',\\n                headers: {'Accept': 'application/octet-stream', 'Content-Type': 'application/json'},\\n                body: JSON.stringify({coords:coords, lines:lines})\\n            }).then((data)=>{\\n                return data.arrayBuffer();\\n            }).then((chunkbuffer) => {\\n                // console.log([...new Uint8Array(chunkbuffer)].map(x => x.toString(16).padStart(2, '0')));\\n                map_grid.data = chunkbuffer;\\n                map_grid.dataview = new Uint32Array(map_grid.data);\\n                map_grid.numchunks = dimn;\\n                resolve();\\n            });\\n        });\\n    }\\n\\n    getChunkPosOffset(currentcell, startpoint) {\\n        const cell_i = Math.floor((currentcell.x/CHUNKSIZE))-startpoint.x;\\n        const cell_k = currentcell.x - (cell_i+startpoint.x)*CHUNKSIZE;\\n\\n        const cell_j = Math.floor((currentcell.y/CHUNKSIZE))-startpoint.y;\\n        const cell_l = currentcell.y - (cell_j+startpoint.y)*CHUNKSIZE;\\n\\n\\n        return {cell_i, cell_j, cell_k, cell_l};\\n    }\\n\\n    addCell(index,colorhex) {\\n        this.dataview[index] = colorhex;\\n        // console.log(data[index], colorhex);\\n    }\\n}\\n\\n\\nclass AppWrapper extends React.Component {\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            tool_mode: 0,\\n            debug_mode: false,\\n            show_stats: true,\\n            color_selected: 255*255, \\n            update: {\\n                time: 0,\\n                tot_time: 0,\\n                num_updates: 1\\n            },\\n            draw: {\\n                time: 0,\\n                tot_time: 0,\\n                num_updates: 1\\n            },\\n            cursorx: 0,\\n            cursory: 0,\\n            offsetx: 0,\\n            offsety: 0,\\n            chunkx: 0,\\n            chunky: 0,\\n        };\\n\\n        this.getColorSelected = () => {return this.state.color_selected};\\n        this.getDebugMode = () => {return this.state.debug_mode};\\n        this.getToolMode = () => {return this.state.tool_mode};\\n\\n        this.changeColor = (blockid) => {\\n            if (typeof blockid === 'string') {\\n                let out_num = parseInt(blockid.substring(1), 16);\\n                console.log(blockid.substring(1));\\n                console.log(out_num);\\n                this.setState({color_selected: out_num});\\n            }\\n            else if (typeof blockid === 'number') {\\n                this.setState({color_selected: blockid});\\n            }\\n        };\\n        this.isSelected = (blockid) => {\\n            if (typeof blockid === 'string') {\\n                let out_num = parseInt(blockid.substring(1), 16);\\n                return (out_num===this.state.color_selected);\\n            }\\n            else if (typeof blockid === 'number') {\\n                return (blockid===this.state.color_selected)\\n            }\\n        };\\n\\n        this.changeUpdateTime = (new_time) => {\\n            this.setState({update:{\\n                time: new_time, \\n                tot_time: this.state.update.tot_time+new_time, \\n                num_updates: this.state.update.num_updates+1\\n            }});\\n        }\\n        this.changeDrawTime = (new_time) => {\\n            this.setState({draw:{\\n                time: new_time, \\n                tot_time: this.state.draw.tot_time+new_time, \\n                num_updates: this.state.draw.num_updates+1\\n            }});\\n        }\\n        this.changeCursorLoc = (vector) => {\\n            this.setState({cursorx: vector.x,cursory: vector.y});\\n        }\\n        this.changeOffsetLoc = (vector) => {\\n            this.setState({offsetx: vector.x,offsety: vector.y});\\n        }\\n        this.changeChunkLoc = (x,y) => {\\n            this.setState({chunkx: x,chunky: y});\\n        }\\n    }\\n\\n    componentDidMount() {\\n        document.body.style.overflow = \\\"hidden\\\"; // stops user from scrolling the page\\n    }\\n\\n    render() {\\n        return (\\n            <div className='App-wrapper'>\\n                <MapCanvas \\n                    getToolMode={this.getToolMode}\\n                    getDebugMode={this.getDebugMode}\\n                    changeUpdateTime={this.changeUpdateTime}\\n                    changeDrawTime={this.changeDrawTime}\\n                    getColorSelected={this.getColorSelected}\\n                    changeCursorLoc={this.changeCursorLoc}\\n                    changeOffsetLoc={this.changeOffsetLoc}\\n                    changeChunkLoc={this.changeChunkLoc}\\n                />\\n                <Palette isSelected={this.isSelected} changeColor={this.changeColor}/>\\n                <div className='drawer primary'>\\n                {(this.state.show_stats)?(<div style={{position: `absolute`,right:`0.8vw`}}>\\n                    ({this.state.update.time}ms, avg: {Math.round(this.state.update.tot_time/this.state.update.num_updates)}ms, {this.state.update.num_updates} updates)\\n                    <br/>({this.state.draw.time}ms, avg: {Math.round(this.state.draw.tot_time/this.state.draw.num_updates)}ms, {this.state.draw.num_updates} draws)\\n                    <br/>Cursor: ({this.state.cursorx},{this.state.cursory})\\n                    <br/>Offset: ({this.state.offsetx},{this.state.offsety})\\n                    <br/>Chunk: ({this.state.chunkx},{this.state.chunky})\\n                </div>):null}\\n                <b>Instructions:</b><br/>This is a pixel art canvas with infinite area. Scroll to zoom in and out, right click to pan around, and use left click to draw on the canvas.\\n                <br/>Use the palette on the right to select your colour.\\n                <div style={{color: `#909090`}}>(!!!!) Be aware that there is no saving yet lol, also this is just a prototype so limited colours, no drawing tools etc.</div>\\n                <input type={\\\"checkbox\\\"} onChange={()=>{this.setState({debug_mode:!this.state.debug_mode})}}></input> Debug Mode&ensp;\\n                <input checked={this.state.show_stats} type={\\\"checkbox\\\"} onChange={()=>{this.setState({show_stats:!this.state.show_stats})}}></input> Stats\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n\\nclass MapCanvas extends React.Component {\\n    constructor(props) {\\n        super(props);\\n\\n        this.getDebugMode = props.getDebugMode;\\n        this.getColorSelected = props.getColorSelected;\\n        this.changeUpdateTime = props.changeUpdateTime;\\n        this.changeDrawTime = props.changeDrawTime;\\n\\n        this.changeCursorLoc = props.changeCursorLoc;\\n        this.changeOffsetLoc = props.changeOffsetLoc;\\n        this.changeChunkLoc = props.changeChunkLoc;\\n\\n        this.drawLines = [];\\n\\n        this.scale = 16;\\n        this.tempscale = this.scale;\\n\\n        this.map_grid = null;\\n        this.canvasRef = createRef();\\n    \\n        this.mapoffset = new Vector2D(0,0);\\n        this.celloffset = new Vector2D(0,0);\\n        this.currentcell = new Vector2D(0,0);\\n        this.startpoint = new Vector2D(0,0);\\n\\n        this.cursorcurrent = new Vector2D(0,0);\\n        this.lmousedown = false;\\n        this.rmousedown = false;\\n\\n        this.canvas = null;\\n    }\\n\\n    //Called after element's initialisation\\n    componentDidMount() { \\n        this.canvas = this.canvasRef.current;\\n\\n        // this.resizeCanvas(this.canvas);\\n        const { width, height } = this.canvas.getBoundingClientRect();\\n        this.map_grid = new Map(width, height);\\n\\n        setTimeout(this.updateCanvas(), 1000);\\n    }\\n\\n    getCursorPosition(event, canvas) {\\n        const rect = canvas.getBoundingClientRect();\\n        const x = event.clientX - rect.left;\\n        const y = event.clientY - rect.top;\\n        const pos = new Vector2D(x,y);\\n        // console.log(`cursor at (${x.toFixed(1)},${y.toFixed(1)})`);\\n        return pos;\\n    }\\n\\n    getCurrentCell() {\\n        let x = Math.floor((this.cursorcurrent.x-this.mapoffset.x*this.scale)/(this.scale));\\n        let y = Math.floor((this.cursorcurrent.y-this.mapoffset.y*this.scale)/(this.scale));\\n        const pos = new Vector2D(x,y);\\n        return pos;\\n    }\\n\\n    moveMap(start, end) {\\n        let x = (end.x-start.x)/this.scale;\\n        let y = (end.y-start.y)/this.scale;\\n        this.mapoffset.transform(x,y);\\n        this.celloffset.setTo(Math.floor(this.mapoffset.x),Math.floor(this.mapoffset.y));\\n        this.changeOffsetLoc(this.celloffset);\\n    }\\n\\n    drawMap (canvas, startpoint) {\\n        let start =  Date.now();\\n\\n        this.resizeCanvas(canvas);\\n        const ctx = canvas.getContext('2d');\\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\\n        ctx.fillStyle = \\\"#ffffff\\\";\\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\\n\\n        // finding location in terms of iterators of current cell\\n        let {cell_i, cell_j, cell_k, cell_l} = this.map_grid.getChunkPosOffset(this.currentcell, startpoint);\\n\\n        let blockid;\\n        let x;\\n        let y;\\n\\n        let mapoffset_x = Math.round(this.mapoffset.x);\\n        let mapoffset_y = Math.round(this.mapoffset.y);\\n        // let mapoffset_x = this.mapoffset.x;\\n        // let mapoffset_y = this.mapoffset.y;\\n\\n        let doFill = (i,j,k,l) => {\\n\\n            x = (((i+startpoint.x)*CHUNKSIZE+k)+mapoffset_x)*(this.scale);\\n            y = (((j+startpoint.y)*CHUNKSIZE+l)+mapoffset_y)*(this.scale);\\n            if (x%1!==0||y%1!==0||this.scale%1!==0) console.log(\\\"ALERT:\\\", x, y, this.scale);\\n            ctx.fillRect(x, y, this.scale, this.scale);\\n            // console.log(x,y,cellapparentsize);\\n        }\\n        if (this.map_grid.data === null) return;\\n        // for map\\n\\n\\n        let chunkbufferoffset = 0;\\n        let data = new Uint32Array(this.map_grid.data);\\n\\n        if (this.getDebugMode()) ctx.beginPath();\\n        for (let i=0;i<this.map_grid.numchunks.x;i++) {\\n            for (let j=0;j<this.map_grid.numchunks.y;j++) {\\n                // for each chunk\\n                if (this.getDebugMode()) {\\n                    x = (((i+startpoint.x)*CHUNKSIZE)+mapoffset_x)*(this.scale);\\n                    y = (((j+startpoint.y)*CHUNKSIZE)+mapoffset_y)*(this.scale);\\n\\n                    ctx.fillStyle = \\\"#000000\\\";\\n                    ctx.lineWidth = 0.01*Math.floor(this.scale);\\n                    ctx.moveTo(x, 0);\\n                    ctx.lineTo(x, this.canvas.height/2);\\n                    // ctx.stroke();\\n                    ctx.moveTo(0, y);\\n                    ctx.lineTo(this.canvas.width/2, y);\\n                }\\n                for (let c=0;c<(CHUNKSIZE*CHUNKSIZE);c++) {\\n                    let k = Math.floor(c/CHUNKSIZE);\\n                    let l = c-(k*CHUNKSIZE);\\n\\n                    // if (typeof this.map_grid.matrix[i][j] === 'undefined') continue;\\n\\n                    blockid = data[chunkbufferoffset+c];\\n                    // if (c%100===0) console.log(blockid);\\n\\n                    if (blockid!==16777215){\\n                        // ctx.fillStyle = blockid.toString(16);\\n                        ctx.fillStyle = \\\"#\\\" + (blockid & 0x00FFFFFF).toString(16).padStart(6, '0');\\n                        // if (c===0) console.log((blockid & 0x00FFFFFF).toString(16).padStart(6, '0'))\\n                        doFill(i,j,k,l,blockid);\\n                    }\\n                }\\n                chunkbufferoffset += (CHUNKSIZE*CHUNKSIZE);\\n            }\\n        }\\n        if (this.getDebugMode()) ctx.stroke();\\n        // ctx.fillStyle = \\\"#\\\" + this.getColorSelected() + \\\"8f\\\"; // placeholder until get images\\n        // console.log(this.getColorSelected());\\n        // console.log((this.getColorSelected() & 0x00FFFFFF).toString(16).padStart(6, '0'));\\n        ctx.fillStyle = \\\"#\\\"+(this.getColorSelected() & 0x00FFFFFF).toString(16).padStart(6, '0')+\\\"ff\\\";\\n        doFill(cell_i,cell_j,cell_k,cell_l);\\n\\n        this.changeDrawTime(Date.now()-start);\\n    }\\n\\n    updateCanvas() {\\n        let start = Date.now(); // time testing\\n\\n        let {startpoint, numchunks} = this.map_grid.getValues(this.mapoffset.multipliedby(this.scale), this.scale);\\n        let linestosend = this.drawLines;\\n        this.drawLines = [];\\n        this.map_grid.setMatrix(numchunks, startpoint, linestosend)\\n        .then(()=>{\\n            this.drawMap(this.canvas, startpoint);\\n            this.startpoint = startpoint;\\n            this.changeUpdateTime(Date.now()-start);\\n        });\\n\\n        setTimeout(()=>{this.updateCanvas()}, 1000);\\n    }\\n\\n    // stolen code lmao\\n    resizeCanvas(canvas) {\\n        const { width, height } = canvas.getBoundingClientRect();\\n        \\n        if (canvas.width !== width || canvas.height !== height) {\\n          const { devicePixelRatio:ratio=1 } = window;\\n          const context = canvas.getContext('2d');\\n          canvas.width = Math.floor((1*width*ratio)/this.scale)*this.scale;\\n          canvas.height = Math.floor((1*height*ratio)/this.scale)*this.scale;\\n        //   console.log(canvas.width, canvas.height);\\n          context.scale(ratio, ratio);\\n          return true;\\n        }\\n    \\n        return false\\n    }\\n\\n    drawCellAtMouse(x,y) {\\n        const currentpos = new Vector2D(x-this.celloffset.x,y-this.celloffset.y);\\n\\n        let {cell_i, cell_j, cell_k, cell_l} = this.map_grid.getChunkPosOffset(currentpos, this.startpoint);\\n        let dataindex = cell_i*(this.map_grid.numchunks.y)*(CHUNKSIZE*CHUNKSIZE)+cell_j*(CHUNKSIZE*CHUNKSIZE)+cell_k*CHUNKSIZE+cell_l;\\n        if (dataindex < this.map_grid.data.byteLength/4) this.map_grid.addCell(dataindex, this.getColorSelected());\\n    }\\n\\n    moveCursor(event) {\\n        let update = false;\\n        let newcursorcurrent = this.getCursorPosition(event, this.canvas);\\n        if (this.rmousedown) {\\n            this.moveMap(this.cursorcurrent, newcursorcurrent);\\n            update = true;\\n        }\\n        this.cursorcurrent = newcursorcurrent;\\n        let newcurrentcell = this.getCurrentCell();\\n        // Drawing line and updating stats\\n        if (!this.currentcell.isEqualTo(newcurrentcell)) {\\n            if (this.lmousedown) this.drawLine(this.currentcell,newcurrentcell);\\n            this.currentcell = newcurrentcell;\\n            let {cell_i, cell_j, cell_k, cell_l} = this.map_grid.getChunkPosOffset(this.currentcell, this.startpoint);\\n            this.changeCursorLoc(this.currentcell);\\n            this.changeChunkLoc(cell_i+this.startpoint.x,cell_j+this.startpoint.y);\\n            update = true;\\n        }\\n        return update;\\n    }\\n\\n    drawLine(p1,p2) {\\n        plotLine(p1, p2, this.celloffset, (x,y)=>this.drawCellAtMouse(x,y));\\n        this.drawLines.push({p1:p1,p2:p2,offset:this.celloffset,blockid:this.getColorSelected()});\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n            <canvas \\n                ref={this.canvasRef} \\n                className='map-canvas primary'\\n                onContextMenu={(e) => {\\n                    e.preventDefault();\\n                }}\\n                onMouseDown={(e) => {\\n                    e.preventDefault();\\n                    if (e.button === 0) {\\n                        this.lmousedown=true;\\n                        this.drawLine(this.currentcell,this.currentcell);\\n                        this.drawMap(this.canvas, this.startpoint);\\n                    }\\n                    else if (e.button === 2) {\\n                        this.rmousedown=true;\\n                    }\\n                }}\\n                onMouseUp={(e) => {\\n                    this.lmousedown=false;\\n                    this.rmousedown=false;\\n                    this.drawMap(this.canvas, this.startpoint);\\n                }}\\n                onMouseMove={(e) => {\\n                    if (this.moveCursor(e)) this.drawMap(this.canvas, this.startpoint);\\n                }}\\n                onMouseLeave={(e) => {\\n                    this.moveCursor(e);\\n                    this.lmousedown=false;\\n                    this.rmousedown=false;\\n                    this.drawMap(this.canvas, this.startpoint);\\n                }}\\n                onWheel={(e) => {\\n                    e.preventDefault();\\n                    let newscale = this.tempscale - Math.round(e.deltaY)/1000;\\n                    console.log(this.scale, this.tempscale);\\n                    if (newscale>5) this.tempscale = newscale;\\n                    else this.tempscale = 5;\\n                    this.scale = Math.round(this.tempscale);\\n                    \\n                    this.drawMap(this.canvas, this.startpoint);\\n                }}\\n            ></canvas>\\n            </div>\\n        )\\n    }\\n}\\n\\n// needs to be fixed up - maybe add useEffect()\\nclass Palette extends React.Component {\\n    constructor(props) {\\n        super(props);\\n\\n        this.changeColor = props.changeColor;\\n\\n        this.handleChange = (e) => {\\n            this.changeColor(e.target.value);\\n        }\\n    }\\n\\n    render() {\\n        return (\\n            <div className='palette primary'>\\n                {\\n                    blocks.map(button => (\\n                        <div \\n                            key={button.blockid} \\n                            style={{backgroundColor: `${button.imagesrc}`}} \\n                            className={`blockbutton` + (this.props.isSelected(button.imagesrc) ? \\\"selected\\\" : \\\"\\\")}\\n                            onClick={() => {this.changeColor(button.imagesrc)}}\\n                            //onClick={() => {console.log(button.blockid)}}\\n                            ></div>\\n                    ))\\n                }\\n                <input type={\\\"color\\\"} onChange={this.handleChange}></input>\\n                {/* <input type={\\\"submit\\\"} value={\\\"Apply\\\"}></input> */}\\n        </div>\\n        )\\n    }\\n\\n}\\n\\n\\n\\n\\nfunction App() {\\n  return (\\n    <AppWrapper/>\\n  );\\n}\\n\\nexport default App;\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport './index.css';\\nimport App from './App';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{17:function(e,t,a){},18:function(e,t,a){},19:function(e,t,a){\"use strict\";a.r(t);var n=a(0),s=a.n(n),o=a(7),i=a.n(o),c=(a(17),a(4)),r=a(3),l=a(5),u=a(1),h=a(2),d=(a(18),[{blockid:\"0\",blockname:\"1\",imagesrc:\"#ffffff\"},{blockid:\"1\",blockname:\"2\",imagesrc:\"#d1e7dc\"},{blockid:\"2\",blockname:\"3\",imagesrc:\"#c4d4e1\"},{blockid:\"3\",blockname:\"4\",imagesrc:\"#bcb5d3\"},{blockid:\"4\",blockname:\"5\",imagesrc:\"#f5dbe2\"},{blockid:\"5\",blockname:\"6\",imagesrc:\"#eeb6c9\"},{blockid:\"6\",blockname:\"7\",imagesrc:\"#c49abf\"},{blockid:\"7\",blockname:\"8\",imagesrc:\"#bada55\"},{blockid:\"8\",blockname:\"9\",imagesrc:\"#ffd700\"},{blockid:\"9\",blockname:\"10\",imagesrc:\"#f47b79\"},{blockid:\"a\",blockname:\"11\",imagesrc:\"#c6e2d4\"},{blockid:\"b\",blockname:\"12\",imagesrc:\"#b6d3c2\"},{blockid:\"c\",blockname:\"13\",imagesrc:\"#e0b1cb\"},{blockid:\"d\",blockname:\"14\",imagesrc:\"#d0a7b7\"},{blockid:\"e\",blockname:\"15\",imagesrc:\"#f3d1d3\"},{blockid:\"f\",blockname:\"16\",imagesrc:\"#e9b8c8\"}]);function f(e,t,a,n,s){var o=a-e,i=n-t,c=1;i<0&&(c=-1,i=-i);for(var r=2*i-o,l=t,u=e;u<a+1;u++)s(u,l),r>0?(l+=c,r+=2*(i-o)):r+=2*i}function m(e,t,a,n,s){var o=a-e,i=n-t,c=1;o<0&&(c=-1,o=-o);for(var r=2*o-i,l=e,u=t;u<n+1;u++)s(l,u),r>0?(l+=c,r+=2*(o-i)):r+=2*o}var g=function(){function e(t,a){Object(u.a)(this,e),this.x=t,this.y=a}return Object(h.a)(e,[{key:\"transform\",value:function(e,t){this.x+=e,this.y+=t}},{key:\"setTo\",value:function(e,t){this.x=e,this.y=t}},{key:\"isEqualTo\",value:function(e){return this.x===e.x&&this.y===e.y}},{key:\"notEqualTo\",value:function(e){return this.x!==e.x||this.y!==e.y}},{key:\"positive\",value:function(){return this.x>=0&&this.y>=0}},{key:\"multipliedby\",value:function(t){return new e(this.x*t,this.y*t)}},{key:\"transformedby\",value:function(t,a){return new e(this.x+t,this.y+a)}}]),e}(),p=function(){function e(t,a){Object(u.a)(this,e),this.canvasdimensions=new g(t,a),this.data=null,this.dataview=null,this.numchunks=null}return Object(h.a)(e,[{key:\"getValues\",value:function(e,t){var a=16*t,n=new g(0,0),s=new g(0,0);return s.x=0===e.x?0:Math.floor(-1*e.x/a),s.y=0===e.y?0:Math.floor(-1*e.y/a),n.x=Math.ceil(this.canvasdimensions.x/a)+1,n.y=Math.ceil(this.canvasdimensions.y/a)+1,{startpoint:s,numchunks:n}}},{key:\"setMatrix\",value:function(e,t,a){for(var n=[],s=this,o=0;o<e.x;o++)for(var i=0;i<e.y;i++){var c={x:t.x+o,y:t.y+i};n.push(c)}return new Promise(function(t,o){fetch(\"/getchunks\",{method:\"POST\",headers:{Accept:\"application/octet-stream\",\"Content-Type\":\"application/json\"},body:JSON.stringify({coords:n,lines:a})}).then(function(e){return e.arrayBuffer()}).then(function(a){s.data=a,s.dataview=new Uint32Array(s.data),s.numchunks=e,t()})})}},{key:\"getChunkPosOffset\",value:function(e,t){var a=Math.floor(e.x/16)-t.x,n=e.x-16*(a+t.x),s=Math.floor(e.y/16)-t.y;return{cell_i:a,cell_j:s,cell_k:n,cell_l:e.y-16*(s+t.y)}}},{key:\"addCell\",value:function(e,t){this.dataview[e]=t}}]),e}(),v=function(e){function t(e){var a;return Object(u.a)(this,t),(a=Object(c.a)(this,Object(r.a)(t).call(this,e))).state={tool_mode:0,debug_mode:!1,show_stats:!0,color_selected:65025,update:{time:0,tot_time:0,num_updates:1},draw:{time:0,tot_time:0,num_updates:1},cursorx:0,cursory:0,offsetx:0,offsety:0,chunkx:0,chunky:0},a.getColorSelected=function(){return a.state.color_selected},a.getDebugMode=function(){return a.state.debug_mode},a.getToolMode=function(){return a.state.tool_mode},a.changeColor=function(e){if(\"string\"===typeof e){var t=parseInt(e.substring(1),16);console.log(e.substring(1)),console.log(t),a.setState({color_selected:t})}else\"number\"===typeof e&&a.setState({color_selected:e})},a.isSelected=function(e){return\"string\"===typeof e?parseInt(e.substring(1),16)===a.state.color_selected:\"number\"===typeof e?e===a.state.color_selected:void 0},a.changeUpdateTime=function(e){a.setState({update:{time:e,tot_time:a.state.update.tot_time+e,num_updates:a.state.update.num_updates+1}})},a.changeDrawTime=function(e){a.setState({draw:{time:e,tot_time:a.state.draw.tot_time+e,num_updates:a.state.draw.num_updates+1}})},a.changeCursorLoc=function(e){a.setState({cursorx:e.x,cursory:e.y})},a.changeOffsetLoc=function(e){a.setState({offsetx:e.x,offsety:e.y})},a.changeChunkLoc=function(e,t){a.setState({chunkx:e,chunky:t})},a}return Object(l.a)(t,e),Object(h.a)(t,[{key:\"componentDidMount\",value:function(){document.body.style.overflow=\"hidden\"}},{key:\"render\",value:function(){var e=this;return s.a.createElement(\"div\",{className:\"App-wrapper\"},s.a.createElement(b,{getToolMode:this.getToolMode,getDebugMode:this.getDebugMode,changeUpdateTime:this.changeUpdateTime,changeDrawTime:this.changeDrawTime,getColorSelected:this.getColorSelected,changeCursorLoc:this.changeCursorLoc,changeOffsetLoc:this.changeOffsetLoc,changeChunkLoc:this.changeChunkLoc}),s.a.createElement(y,{isSelected:this.isSelected,changeColor:this.changeColor}),s.a.createElement(\"div\",{className:\"drawer primary\"},this.state.show_stats?s.a.createElement(\"div\",{style:{position:\"absolute\",right:\"0.8vw\"}},\"(\",this.state.update.time,\"ms, avg: \",Math.round(this.state.update.tot_time/this.state.update.num_updates),\"ms, \",this.state.update.num_updates,\" updates)\",s.a.createElement(\"br\",null),\"(\",this.state.draw.time,\"ms, avg: \",Math.round(this.state.draw.tot_time/this.state.draw.num_updates),\"ms, \",this.state.draw.num_updates,\" draws)\",s.a.createElement(\"br\",null),\"Cursor: (\",this.state.cursorx,\",\",this.state.cursory,\")\",s.a.createElement(\"br\",null),\"Offset: (\",this.state.offsetx,\",\",this.state.offsety,\")\",s.a.createElement(\"br\",null),\"Chunk: (\",this.state.chunkx,\",\",this.state.chunky,\")\"):null,s.a.createElement(\"b\",null,\"Instructions:\"),s.a.createElement(\"br\",null),\"This is a pixel art canvas with infinite area. Scroll to zoom in and out, right click to pan around, and use left click to draw on the canvas.\",s.a.createElement(\"br\",null),\"Use the palette on the right to select your colour.\",s.a.createElement(\"div\",{style:{color:\"#909090\"}},\"(!!!!) Be aware that there is no saving yet lol, also this is just a prototype so limited colours, no drawing tools etc.\"),s.a.createElement(\"input\",{type:\"checkbox\",onChange:function(){e.setState({debug_mode:!e.state.debug_mode})}}),\" Debug Mode\\u2002\",s.a.createElement(\"input\",{checked:this.state.show_stats,type:\"checkbox\",onChange:function(){e.setState({show_stats:!e.state.show_stats})}}),\" Stats\"))}}]),t}(s.a.Component),b=function(e){function t(e){var a;return Object(u.a)(this,t),(a=Object(c.a)(this,Object(r.a)(t).call(this,e))).getDebugMode=e.getDebugMode,a.getColorSelected=e.getColorSelected,a.changeUpdateTime=e.changeUpdateTime,a.changeDrawTime=e.changeDrawTime,a.changeCursorLoc=e.changeCursorLoc,a.changeOffsetLoc=e.changeOffsetLoc,a.changeChunkLoc=e.changeChunkLoc,a.drawLines=[],a.scale=16,a.tempscale=a.scale,a.map_grid=null,a.canvasRef=Object(n.createRef)(),a.mapoffset=new g(0,0),a.celloffset=new g(0,0),a.currentcell=new g(0,0),a.startpoint=new g(0,0),a.cursorcurrent=new g(0,0),a.lmousedown=!1,a.rmousedown=!1,a.canvas=null,a}return Object(l.a)(t,e),Object(h.a)(t,[{key:\"componentDidMount\",value:function(){this.canvas=this.canvasRef.current;var e=this.canvas.getBoundingClientRect(),t=e.width,a=e.height;this.map_grid=new p(t,a),setTimeout(this.updateCanvas(),1e3)}},{key:\"getCursorPosition\",value:function(e,t){var a=t.getBoundingClientRect(),n=e.clientX-a.left,s=e.clientY-a.top;return new g(n,s)}},{key:\"getCurrentCell\",value:function(){var e=Math.floor((this.cursorcurrent.x-this.mapoffset.x*this.scale)/this.scale),t=Math.floor((this.cursorcurrent.y-this.mapoffset.y*this.scale)/this.scale);return new g(e,t)}},{key:\"moveMap\",value:function(e,t){var a=(t.x-e.x)/this.scale,n=(t.y-e.y)/this.scale;this.mapoffset.transform(a,n),this.celloffset.setTo(Math.floor(this.mapoffset.x),Math.floor(this.mapoffset.y)),this.changeOffsetLoc(this.celloffset)}},{key:\"drawMap\",value:function(e,t){var a=this,n=Date.now();this.resizeCanvas(e);var s=e.getContext(\"2d\");s.clearRect(0,0,e.width,e.height),s.fillStyle=\"#ffffff\",s.fillRect(0,0,e.width,e.height);var o,i,c,r=this.map_grid.getChunkPosOffset(this.currentcell,t),l=r.cell_i,u=r.cell_j,h=r.cell_k,d=r.cell_l,f=Math.round(this.mapoffset.x),m=Math.round(this.mapoffset.y),g=function(e,n,o,r){i=(16*(e+t.x)+o+f)*a.scale,c=(16*(n+t.y)+r+m)*a.scale,i%1===0&&c%1===0&&a.scale%1===0||console.log(\"ALERT:\",i,c,a.scale),s.fillRect(i,c,a.scale,a.scale)};if(null!==this.map_grid.data){var p=0,v=new Uint32Array(this.map_grid.data);this.getDebugMode()&&s.beginPath();for(var b=0;b<this.map_grid.numchunks.x;b++)for(var y=0;y<this.map_grid.numchunks.y;y++){this.getDebugMode()&&(i=(16*(b+t.x)+f)*this.scale,c=(16*(y+t.y)+m)*this.scale,s.fillStyle=\"#000000\",s.lineWidth=.01*Math.floor(this.scale),s.moveTo(i,0),s.lineTo(i,this.canvas.height/2),s.moveTo(0,c),s.lineTo(this.canvas.width/2,c));for(var k=0;k<256;k++){var w=Math.floor(k/16),C=k-16*w;16777215!==(o=v[p+k])&&(s.fillStyle=\"#\"+(16777215&o).toString(16).padStart(6,\"0\"),g(b,y,w,C))}p+=256}this.getDebugMode()&&s.stroke(),s.fillStyle=\"#\"+(16777215&this.getColorSelected()).toString(16).padStart(6,\"0\")+\"ff\",g(l,u,h,d),this.changeDrawTime(Date.now()-n)}}},{key:\"updateCanvas\",value:function(){var e=this,t=Date.now(),a=this.map_grid.getValues(this.mapoffset.multipliedby(this.scale),this.scale),n=a.startpoint,s=a.numchunks,o=this.drawLines;this.drawLines=[],this.map_grid.setMatrix(s,n,o).then(function(){e.drawMap(e.canvas,n),e.startpoint=n,e.changeUpdateTime(Date.now()-t)}),setTimeout(function(){e.updateCanvas()},1e3)}},{key:\"resizeCanvas\",value:function(e){var t=e.getBoundingClientRect(),a=t.width,n=t.height;if(e.width!==a||e.height!==n){var s=window.devicePixelRatio,o=void 0===s?1:s,i=e.getContext(\"2d\");return e.width=Math.floor(1*a*o/this.scale)*this.scale,e.height=Math.floor(1*n*o/this.scale)*this.scale,i.scale(o,o),!0}return!1}},{key:\"drawCellAtMouse\",value:function(e,t){var a=new g(e-this.celloffset.x,t-this.celloffset.y),n=this.map_grid.getChunkPosOffset(a,this.startpoint),s=n.cell_i,o=n.cell_j,i=n.cell_k,c=n.cell_l,r=s*this.map_grid.numchunks.y*256+256*o+16*i+c;r<this.map_grid.data.byteLength/4&&this.map_grid.addCell(r,this.getColorSelected())}},{key:\"moveCursor\",value:function(e){var t=!1,a=this.getCursorPosition(e,this.canvas);this.rmousedown&&(this.moveMap(this.cursorcurrent,a),t=!0),this.cursorcurrent=a;var n=this.getCurrentCell();if(!this.currentcell.isEqualTo(n)){this.lmousedown&&this.drawLine(this.currentcell,n),this.currentcell=n;var s=this.map_grid.getChunkPosOffset(this.currentcell,this.startpoint),o=s.cell_i,i=s.cell_j;s.cell_k,s.cell_l;this.changeCursorLoc(this.currentcell),this.changeChunkLoc(o+this.startpoint.x,i+this.startpoint.y),t=!0}return t}},{key:\"drawLine\",value:function(e,t){var a=this;!function(e,t,a,n){var s=e.x+a.x,o=e.y+a.y,i=t.x+a.x,c=t.y+a.y;s===i&&o===c&&n(s,o),Math.abs(c-o)<Math.abs(i-s)?s>i?f(i,c,s,o,n):f(s,o,i,c,n):o>c?m(i,c,s,o,n):m(s,o,i,c,n)}(e,t,this.celloffset,function(e,t){return a.drawCellAtMouse(e,t)}),this.drawLines.push({p1:e,p2:t,offset:this.celloffset,blockid:this.getColorSelected()})}},{key:\"render\",value:function(){var e=this;return s.a.createElement(\"div\",null,s.a.createElement(\"canvas\",{ref:this.canvasRef,className:\"map-canvas primary\",onContextMenu:function(e){e.preventDefault()},onMouseDown:function(t){t.preventDefault(),0===t.button?(e.lmousedown=!0,e.drawLine(e.currentcell,e.currentcell),e.drawMap(e.canvas,e.startpoint)):2===t.button&&(e.rmousedown=!0)},onMouseUp:function(t){e.lmousedown=!1,e.rmousedown=!1,e.drawMap(e.canvas,e.startpoint)},onMouseMove:function(t){e.moveCursor(t)&&e.drawMap(e.canvas,e.startpoint)},onMouseLeave:function(t){e.moveCursor(t),e.lmousedown=!1,e.rmousedown=!1,e.drawMap(e.canvas,e.startpoint)},onWheel:function(t){t.preventDefault();var a=e.tempscale-Math.round(t.deltaY)/1e3;console.log(e.scale,e.tempscale),e.tempscale=a>5?a:5,e.scale=Math.round(e.tempscale),e.drawMap(e.canvas,e.startpoint)}}))}}]),t}(s.a.Component),y=function(e){function t(e){var a;return Object(u.a)(this,t),(a=Object(c.a)(this,Object(r.a)(t).call(this,e))).changeColor=e.changeColor,a.handleChange=function(e){a.changeColor(e.target.value)},a}return Object(l.a)(t,e),Object(h.a)(t,[{key:\"render\",value:function(){var e=this;return s.a.createElement(\"div\",{className:\"palette primary\"},d.map(function(t){return s.a.createElement(\"div\",{key:t.blockid,style:{backgroundColor:\"\".concat(t.imagesrc)},className:\"blockbutton\"+(e.props.isSelected(t.imagesrc)?\"selected\":\"\"),onClick:function(){e.changeColor(t.imagesrc)}})}),s.a.createElement(\"input\",{type:\"color\",onChange:this.handleChange}))}}]),t}(s.a.Component);var k=function(){return s.a.createElement(v,null)},w=function(e){e&&e instanceof Function&&a.e(3).then(a.bind(null,20)).then(function(t){var a=t.getCLS,n=t.getFID,s=t.getFCP,o=t.getLCP,i=t.getTTFB;a(e),n(e),s(e),o(e),i(e)})};i.a.createRoot(document.getElementById(\"root\")).render(s.a.createElement(s.a.StrictMode,null,s.a.createElement(k,null))),w()},8:function(e,t,a){e.exports=a(19)}},[[8,1,2]]]);","extractedComments":[]}