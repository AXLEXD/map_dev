{"map":"{\"version\":3,\"sources\":[\"/Users/alex/Programming/web_development/map_dev_server/client/src/App.js\",\"/Users/alex/Programming/web_development/map_dev_server/client/src/reportWebVitals.js\",\"/Users/alex/Programming/web_development/map_dev_server/client/src/index.js\"],\"names\":[\"CHUNKSIZE\",\"blocks\",\"blockid\",\"blockname\",\"imagesrc\",\"plotLineLow\",\"x0\",\"y0\",\"x1\",\"y1\",\"drawFunc\",\"dx\",\"dy\",\"yi\",\"D\",\"y\",\"x\",\"plotLineHigh\",\"xi\",\"Vector2D\",\"_classCallCheck\",\"this\",\"_createClass\",\"key\",\"value\",\"othervector\",\"number\",\"Map\",\"w\",\"h\",\"canvasdimensions\",\"matrix\",\"data\",\"lastchunkrequesttime\",\"numchunks\",\"offset\",\"scale\",\"chunkpixels\",\"startpoint\",\"Math\",\"floor\",\"ceil\",\"dimn\",\"start\",\"lines\",\"coords\",\"grid\",\"Array\",\"i\",\"j\",\"coordsobj\",\"push\",\"map_grid\",\"Promise\",\"resolve\",\"reject\",\"fetch\",\"method\",\"headers\",\"Accept\",\"Content-Type\",\"body\",\"JSON\",\"stringify\",\"then\",\"arrayBuffer\",\"chunkbuffer\",\"currentcell\",\"cell_i\",\"cell_k\",\"cell_j\",\"cell_l\",\"AppWrapper\",\"_React$Component\",\"props\",\"_this\",\"_possibleConstructorReturn\",\"_getPrototypeOf\",\"call\",\"state\",\"debug_mode\",\"show_stats\",\"block_selected\",\"update\",\"time\",\"tot_time\",\"num_updates\",\"draw\",\"cursorx\",\"cursory\",\"offsetx\",\"offsety\",\"chunkx\",\"chunky\",\"changeBlock\",\"setState\",\"getBlockSelected\",\"getDebugMode\",\"isSelected\",\"changeUpdateTime\",\"new_time\",\"changeDrawTime\",\"changeCursorLoc\",\"vector\",\"changeOffsetLoc\",\"changeChunkLoc\",\"_inherits\",\"document\",\"style\",\"overflow\",\"buffer\",\"ArrayBuffer\",\"int32View\",\"Int32Array\",\"length\",\"res\",\"json\",\"message\",\"_this2\",\"React\",\"createElement\",\"className\",\"MapCanvas\",\"Palette\",\"position\",\"right\",\"round\",\"color\",\"type\",\"onChange\",\"checked\",\"Component\",\"_React$Component2\",\"_this3\",\"drawLines\",\"canvasRef\",\"createRef\",\"mapoffset\",\"celloffset\",\"cursorcurrent\",\"lmousedown\",\"rmousedown\",\"canvas\",\"current\",\"_this$canvas$getBound\",\"getBoundingClientRect\",\"width\",\"height\",\"setTimeout\",\"updateCanvas\",\"event\",\"rect\",\"clientX\",\"left\",\"clientY\",\"top\",\"end\",\"transform\",\"setTo\",\"_this4\",\"Date\",\"now\",\"resizeCanvas\",\"ctx\",\"getContext\",\"clearRect\",\"fillStyle\",\"fillRect\",\"_this$map_grid$getChu\",\"getChunkPosOffset\",\"doFill\",\"k\",\"l\",\"chunkbufferoffset\",\"Uint32Array\",\"beginPath\",\"lineWidth\",\"moveTo\",\"lineTo\",\"c\",\"toString\",\"padStart\",\"stroke\",\"_this5\",\"_this$map_grid$getVal\",\"getValues\",\"multipliedby\",\"linestosend\",\"setMatrix\",\"drawMap\",\"_canvas$getBoundingCl\",\"_window$devicePixelRa\",\"window\",\"devicePixelRatio\",\"ratio\",\"context\",\"currentpos\",\"_this$map_grid$getChu2\",\"undefined\",\"addCell\",\"parseInt\",\"newcursorcurrent\",\"getCursorPosition\",\"moveMap\",\"newcurrentcell\",\"getCurrentCell\",\"isEqualTo\",\"drawLine\",\"_this$map_grid$getChu3\",\"p1\",\"p2\",\"_this6\",\"abs\",\"plotLine\",\"drawCellAtMouse\",\"_this7\",\"ref\",\"onContextMenu\",\"e\",\"preventDefault\",\"onMouseDown\",\"button\",\"onMouseUp\",\"onMouseMove\",\"moveCursor\",\"onMouseLeave\",\"onWheel\",\"newscale\",\"deltaY\",\"_React$Component3\",\"_this8\",\"_this9\",\"map\",\"backgroundColor\",\"concat\",\"onClick\",\"App\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"bind\",\"_ref\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"createRoot\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import './App.css';\\nimport React, { createRef } from 'react';\\n\\n\\nconst CHUNKSIZE = 16;\\n\\nconst blocksold = [\\n    {\\n        blockid: 0,\\n        blockname: '1',\\n        imagesrc: '#ffffff'\\n    },\\n    {\\n        blockid: 1,\\n        blockname: '2',\\n        imagesrc: '#d1e7dc'\\n    },\\n    {\\n        blockid: 2,\\n        blockname: '3',\\n        imagesrc: '#c4d4e1'\\n    },\\n    {\\n        blockid: 3,\\n        blockname: '4',\\n        imagesrc: '#bcb5d3'\\n    },\\n    {\\n        blockid: 4,\\n        blockname: '5',\\n        imagesrc: '#f5dbe2'\\n    },\\n    {\\n        blockid: 5,\\n        blockname: '6',\\n        imagesrc: '#eeb6c9'\\n    },\\n    {\\n        blockid: 6,\\n        blockname: '7',\\n        imagesrc: '#c49abf'\\n    },\\n    {\\n        blockid: 7,\\n        blockname: '8',\\n        imagesrc: '#bada55'\\n    },\\n    {\\n        blockid: 8,\\n        blockname: '9',\\n        imagesrc: '#ffd700'\\n    },\\n    {\\n        blockid: 9,\\n        blockname: '10',\\n        imagesrc: '#f47b79'\\n    }\\n];\\n  \\nconst blocks = [\\n    {\\n        blockid: '0',\\n        blockname: '1',\\n        imagesrc: '#ffffff'\\n    },\\n    {\\n        blockid: '1',\\n        blockname: '2',\\n        imagesrc: '#d1e7dc'\\n    },\\n    {\\n        blockid: '2',\\n        blockname: '3',\\n        imagesrc: '#c4d4e1'\\n    },\\n    {\\n        blockid: '3',\\n        blockname: '4',\\n        imagesrc: '#bcb5d3'\\n    },\\n    {\\n        blockid: '4',\\n        blockname: '5',\\n        imagesrc: '#f5dbe2'\\n    },\\n    {\\n        blockid: '5',\\n        blockname: '6',\\n        imagesrc: '#eeb6c9'\\n    },\\n    {\\n        blockid: '6',\\n        blockname: '7',\\n        imagesrc: '#c49abf'\\n    },\\n    {\\n        blockid: '7',\\n        blockname: '8',\\n        imagesrc: '#bada55'\\n    },\\n    {\\n        blockid: '8',\\n        blockname: '9',\\n        imagesrc: '#ffd700'\\n    },\\n    {\\n        blockid: '9',\\n        blockname: '10',\\n        imagesrc: '#f47b79'\\n    },\\n    {\\n        blockid: 'a',\\n        blockname: '11',\\n        imagesrc: '#c6e2d4'\\n    },\\n    {\\n        blockid: 'b',\\n        blockname: '12',\\n        imagesrc: '#b6d3c2'\\n    },\\n    {\\n        blockid: 'c',\\n        blockname: '13',\\n        imagesrc: '#e0b1cb'\\n    },\\n    {\\n        blockid: 'd',\\n        blockname: '14',\\n        imagesrc: '#d0a7b7'\\n    },\\n    {\\n        blockid: 'e',\\n        blockname: '15',\\n        imagesrc: '#f3d1d3'\\n    },\\n    {\\n        blockid: 'f',\\n        blockname: '16',\\n        imagesrc: '#e9b8c8'\\n    }\\n];\\n\\n  \\n\\nfunction plotLineLow(x0, y0, x1, y1, drawFunc) {\\n    let dx = x1 - x0;\\n    let dy = y1 - y0;\\n    let yi = 1;\\n    if (dy < 0) {\\n        yi = -1;\\n        dy = -dy;\\n    }\\n    let D = (2 * dy) - dx;\\n    let y = y0;\\n\\n    for (let x = x0;x<x1+1;x++) {\\n        drawFunc(x, y);\\n        if (D > 0) {\\n            y = y + yi;\\n            D = D + (2 * (dy - dx));\\n        } else {\\n            D = D + 2*dy;\\n        }\\n    }\\n}\\nfunction plotLineHigh(x0, y0, x1, y1, drawFunc) {\\n    let dx = x1 - x0;\\n    let dy = y1 - y0;\\n    let xi = 1;\\n    if (dx < 0) {\\n        xi = -1;\\n        dx = -dx;\\n    }\\n    let D = (2 * dx) - dy;\\n    let x = x0;\\n\\n    for (let y = y0;y<y1+1;y++) {\\n        drawFunc(x, y);\\n        if (D > 0) {\\n            x = x + xi;\\n            D = D + (2 * (dx - dy));\\n        } else {\\n            D = D + 2*dx;\\n        }\\n    }\\n}\\n\\nfunction plotLine(p1, p2, offset, drawFunc) {\\n    \\n    let x0 = p1.x+offset.x;\\n    let y0 = p1.y+offset.y;\\n    \\n    let x1 = p2.x+offset.x;\\n    let y1 = p2.y+offset.y;\\n\\n    if (x0===x1 && y0===y1) drawFunc(x0,y0);\\n\\n\\n    if (Math.abs(y1 - y0) < Math.abs(x1 - x0)) {\\n        if (x0 > x1) plotLineLow(x1, y1, x0, y0, drawFunc);\\n        else plotLineLow(x0, y0, x1, y1, drawFunc);\\n    }\\n    else {\\n        if (y0 > y1) plotLineHigh(x1, y1, x0, y0, drawFunc);\\n        else plotLineHigh(x0, y0, x1, y1, drawFunc);\\n    }\\n}\\n\\n\\nclass Vector2D {\\n    constructor(x,y) {\\n        this.x = x;\\n        this.y = y;\\n    }\\n\\n    transform(x,y) {\\n        this.x += x;\\n        this.y += y;\\n    }\\n\\n    setTo(x,y) {\\n        this.x = x;\\n        this.y = y;\\n    }\\n\\n    isEqualTo(othervector) {\\n        return (this.x===othervector.x && this.y===othervector.y);\\n    }\\n    notEqualTo(othervector) {\\n        return (this.x!==othervector.x || this.y!==othervector.y);\\n    }\\n\\n    positive() {\\n        return (this.x >= 0 && this.y >=0);\\n    }\\n\\n    multipliedby(number) {\\n        return new Vector2D(this.x*number,this.y*number);\\n    }\\n    transformedby(x,y) {\\n        return new Vector2D(this.x+x,this.y+y);\\n    }\\n}\\n\\n\\nclass Map {\\n    constructor(w, h) {\\n\\n        this.canvasdimensions = new Vector2D(w,h); // establishing at start means no resizing canvas element\\n        this.matrix = null;\\n\\n        this.data = null;\\n\\n        this.lastchunkrequesttime = null;\\n\\n        this.numchunks = null;\\n        \\n\\n    }\\n\\n    getValues(offset, scale) {\\n        let chunkpixels = CHUNKSIZE*scale;\\n\\n        let numchunks = new Vector2D(0,0);\\n        let startpoint = new Vector2D(0,0);\\n\\n        startpoint.x = (offset.x === 0) ? 0 : Math.floor((-1*offset.x)/chunkpixels);\\n        startpoint.y = (offset.y === 0) ? 0 : Math.floor((-1*offset.y)/chunkpixels);\\n\\n        numchunks.x = Math.ceil(this.canvasdimensions.x/chunkpixels)+1; // bit cheaty - should probs optimise\\n        numchunks.y = Math.ceil(this.canvasdimensions.y/chunkpixels)+1;\\n\\n        return {startpoint, numchunks};\\n    }\\n\\n    setMatrix(dimn, start, lines) {\\n\\n        let coords = [];\\n\\n        let grid = Array(dimn.x);\\n        for (let i=0;i<dimn.x;i++) {\\n            grid[i] = Array(dimn.y);\\n            for (let j=0;j<dimn.y;j++) {\\n                let coordsobj = { x: start.x+i, y: start.y+j };\\n                coords.push(coordsobj);    \\n            }\\n        }\\n\\n        let map_grid = this;\\n        // console.log(coords);\\n        return new Promise(function(resolve, reject) {\\n            fetch('/getchunks',{\\n                method: 'POST',\\n                headers: {'Accept': 'application/octet-stream', 'Content-Type': 'application/json'},\\n                body: JSON.stringify({coords:coords, lines:lines})\\n            }).then((data)=>{\\n                return data.arrayBuffer();\\n            }).then((chunkbuffer) => {\\n                map_grid.data = chunkbuffer;\\n                map_grid.numchunks = dimn;\\n\\n                // let bufferread = new Uint32Array(chunkbuffer);\\n\\n                // // console.log(bufferread);\\n\\n                // // let chunkbufferlength = dimn.x*dimn.y;\\n\\n                // let bufferoffset = 0;\\n\\n                // for (let i=0;i<dimn.x;i++) {\\n                //     for (let j=0;j<dimn.y;j++) {\\n                        \\n                //         grid[i][j] = new Chunk(i+start.x, j+start.y, bufferread.slice(bufferoffset,bufferoffset+(CHUNKSIZE*CHUNKSIZE)-1)); // trying to get buffer from chunkdata - buffer not implemented yet\\n                //         bufferoffset+=(CHUNKSIZE*CHUNKSIZE);\\n                //     }\\n                // }\\n                // map_grid.matrix = grid;\\n                // console.log(map_grid.matrix);\\n                resolve();\\n            });\\n        });\\n    }\\n\\n    getChunkPosOffset(currentcell, startpoint) {\\n        const cell_i = Math.floor((currentcell.x/CHUNKSIZE))-startpoint.x;\\n        const cell_k = currentcell.x - (cell_i+startpoint.x)*CHUNKSIZE;\\n\\n        const cell_j = Math.floor((currentcell.y/CHUNKSIZE))-startpoint.y;\\n        const cell_l = currentcell.y - (cell_j+startpoint.y)*CHUNKSIZE;\\n\\n\\n        return {cell_i, cell_j, cell_k, cell_l};\\n    }\\n}\\n\\nclass Chunk {\\n    constructor (x, y, chunkcells=[]) {\\n        this.x = x;\\n        this.y = y;\\n        \\n        this.data = new ArrayBuffer(4*(CHUNKSIZE*CHUNKSIZE));\\n\\n        if (chunkcells.length) {\\n            let data = new Uint32Array(this.data);\\n            for (let i=0;i<chunkcells.length;i++) {\\n                data[i] = chunkcells[i];\\n            }\\n        }\\n        \\n    }\\n    // id needs to be 32 bit (4 byte) uint\\n    addCell(x,y,id) {\\n        let data = new Uint32Array(this.data);\\n        data[(x*CHUNKSIZE+y)] = id;\\n    }\\n    \\n}\\n\\n\\nclass AppWrapper extends React.Component {\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            debug_mode: false,\\n            show_stats: true,\\n            block_selected: 'ff0fff', \\n            update: {\\n                time: 0,\\n                tot_time: 0,\\n                num_updates: 1\\n            },\\n            draw: {\\n                time: 0,\\n                tot_time: 0,\\n                num_updates: 1\\n            },\\n            cursorx: 0,\\n            cursory: 0,\\n            offsetx: 0,\\n            offsety: 0,\\n            chunkx: 0,\\n            chunky: 0\\n        };\\n\\n        this.changeBlock = (blockid) => {this.setState({block_selected: blockid})};\\n        this.getBlockSelected = () => {\\n            //eg. ff00ff\\n            // return parseInt(this.state.block_selected, 16);\\n            return this.state.block_selected;\\n        };\\n        this.getDebugMode = () => {return this.state.debug_mode};\\n\\n        this.isSelected = (blockid) => {return (blockid===this.state.block_selected)};\\n\\n        this.changeUpdateTime = (new_time) => {\\n            this.setState({update:{\\n                time: new_time, \\n                tot_time: this.state.update.tot_time+new_time, \\n                num_updates: this.state.update.num_updates+1\\n            }});\\n        }\\n        this.changeDrawTime = (new_time) => {\\n            this.setState({draw:{\\n                time: new_time, \\n                tot_time: this.state.draw.tot_time+new_time, \\n                num_updates: this.state.draw.num_updates+1\\n            }});\\n        }\\n        this.changeCursorLoc = (vector) => {\\n            this.setState({cursorx: vector.x,cursory: vector.y});\\n        }\\n        this.changeOffsetLoc = (vector) => {\\n            this.setState({offsetx: vector.x,offsety: vector.y});\\n        }\\n        this.changeChunkLoc = (x,y) => {\\n            this.setState({chunkx: x,chunky: y});\\n        }\\n    }\\n\\n    componentDidMount() {\\n        document.body.style.overflow = \\\"hidden\\\"; // stops user from scrolling the page\\n        // this.getData();\\n    }\\n\\n    getData() {\\n\\n        const buffer = new ArrayBuffer(4*256);\\n        const int32View = new Int32Array(buffer);\\n\\n        for (let i = 0; i < int32View.length; i++) {\\n            int32View[i] = i * 2;\\n          };\\n        fetch('/test',{\\n            method: 'POST',\\n            headers: {'Accept': 'application/octet-stream', 'Content-Type': 'application/octet-stream'},\\n            body: buffer\\n        })\\n        .then((res) => res.json())\\n        .then((message) => {});\\n    }\\n\\n    render() {\\n        return (\\n            <div className='App-wrapper'>\\n                <MapCanvas getDebugMode={this.getDebugMode} changeUpdateTime={this.changeUpdateTime} changeDrawTime={this.changeDrawTime} getBlockSelected={this.getBlockSelected} changeCursorLoc={this.changeCursorLoc} changeOffsetLoc={this.changeOffsetLoc} changeChunkLoc={this.changeChunkLoc}/>\\n                <Palette isSelected={this.isSelected} changeBlock={this.changeBlock}/>\\n                <div className='drawer primary'>\\n                {(this.state.show_stats)?(<div style={{position: `absolute`,right:`0.8vw`}}>\\n                    ({this.state.update.time}ms, avg: {Math.round(this.state.update.tot_time/this.state.update.num_updates)}ms, {this.state.update.num_updates} updates)\\n                    <br/>({this.state.draw.time}ms, avg: {Math.round(this.state.draw.tot_time/this.state.draw.num_updates)}ms, {this.state.draw.num_updates} draws)\\n                    <br/>Cursor: ({this.state.cursorx},{this.state.cursory})\\n                    <br/>Offset: ({this.state.offsetx},{this.state.offsety})\\n                    <br/>Chunk: ({this.state.chunkx},{this.state.chunky})\\n                </div>):null}\\n                <b>Instructions:</b><br/>This is a pixel art canvas with infinite area. Scroll to zoom in and out, right click to pan around, and use left click to draw on the canvas.\\n                <br/>Use the palette on the right to select your colour.\\n                <div style={{color: `#909090`}}>(!!!!) Be aware that there is no saving yet lol, also this is just a prototype so limited colours, no drawing tools etc.</div>\\n                <input type={\\\"checkbox\\\"} onChange={()=>{this.setState({debug_mode:!this.state.debug_mode})}}></input> Debug Mode&ensp;\\n                <input checked={this.state.show_stats} type={\\\"checkbox\\\"} onChange={()=>{this.setState({show_stats:!this.state.show_stats})}}></input> Stats\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n\\nclass MapCanvas extends React.Component {\\n    constructor(props) {\\n        super(props);\\n\\n        this.getDebugMode = props.getDebugMode;\\n        this.getBlockSelected = props.getBlockSelected;\\n        this.changeUpdateTime = props.changeUpdateTime;\\n        this.changeDrawTime = props.changeDrawTime;\\n\\n        this.changeCursorLoc = props.changeCursorLoc;\\n        this.changeOffsetLoc = props.changeOffsetLoc;\\n        this.changeChunkLoc = props.changeChunkLoc;\\n\\n        this.drawLines = [];\\n\\n        this.scale = 16;\\n\\n        this.map_grid = null;\\n        this.canvasRef = createRef();\\n    \\n        this.mapoffset = new Vector2D(0,0);\\n        this.celloffset = new Vector2D(0,0);\\n        this.currentcell = new Vector2D(0,0);\\n        this.startpoint = new Vector2D(0,0);\\n\\n        this.cursorcurrent = new Vector2D(0,0);\\n        this.lmousedown = false;\\n        this.rmousedown = false;\\n\\n        this.canvas = null;\\n    }\\n\\n    //Called after element's initialisation\\n    componentDidMount() { \\n        this.canvas = this.canvasRef.current;\\n\\n        // this.resizeCanvas(this.canvas);\\n        const { width, height } = this.canvas.getBoundingClientRect();\\n        this.map_grid = new Map(width, height);\\n\\n        setTimeout(this.updateCanvas(), 1000);\\n    }\\n\\n    getCursorPosition(event, canvas) {\\n        const rect = canvas.getBoundingClientRect();\\n        const x = event.clientX - rect.left;\\n        const y = event.clientY - rect.top;\\n        const pos = new Vector2D(x,y);\\n        // console.log(`cursor at (${x.toFixed(1)},${y.toFixed(1)})`);\\n        return pos;\\n    }\\n\\n    getCurrentCell() {\\n        let x = Math.floor((this.cursorcurrent.x-this.mapoffset.x*this.scale)/(this.scale));\\n        let y = Math.floor((this.cursorcurrent.y-this.mapoffset.y*this.scale)/(this.scale));\\n        const pos = new Vector2D(x,y);\\n        return pos;\\n    }\\n\\n    moveMap(start, end) {\\n        let x = (end.x-start.x)/this.scale;\\n        let y = (end.y-start.y)/this.scale;\\n        this.mapoffset.transform(x,y);\\n        this.celloffset.setTo(Math.floor(this.mapoffset.x),Math.floor(this.mapoffset.y));\\n        this.changeOffsetLoc(this.celloffset);\\n    }\\n\\n    drawMap (canvas, startpoint) {\\n        let start =  Date.now();\\n\\n        this.resizeCanvas(canvas);\\n        const ctx = canvas.getContext('2d');\\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\\n        ctx.fillStyle = \\\"#ffffff\\\";\\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\\n\\n        // finding location in terms of iterators of current cell\\n        let {cell_i, cell_j, cell_k, cell_l} = this.map_grid.getChunkPosOffset(this.currentcell, startpoint);\\n\\n        let blockid;\\n        let x;\\n        let y;\\n\\n        let doFill = (i,j,k,l) => {\\n\\n            x = (((i+startpoint.x)*CHUNKSIZE+k)+this.mapoffset.x)*(this.scale);\\n            y = (((j+startpoint.y)*CHUNKSIZE+l)+this.mapoffset.y)*(this.scale);\\n\\n            ctx.fillRect(x, y, this.scale, this.scale);\\n            // console.log(x,y,cellapparentsize);\\n        }\\n        if (this.map_grid.data === null) return;\\n        // for map\\n\\n\\n        let chunkbufferoffset = 0;\\n        let data = new Uint32Array(this.map_grid.data);\\n\\n        if (this.getDebugMode()) ctx.beginPath();\\n        for (let i=0;i<this.map_grid.numchunks.x;i++) {\\n            for (let j=0;j<this.map_grid.numchunks.y;j++) {\\n                // for each chunk\\n                if (this.getDebugMode()) {\\n                    x = (((i+startpoint.x)*CHUNKSIZE)+this.mapoffset.x)*(this.scale);\\n                    y = (((j+startpoint.y)*CHUNKSIZE)+this.mapoffset.y)*(this.scale);\\n\\n                    ctx.fillStyle = \\\"#000000\\\";\\n                    ctx.lineWidth = 0.01*Math.floor(this.scale);\\n                    ctx.moveTo(x, 0);\\n                    ctx.lineTo(x, this.canvas.height/2);\\n                    // ctx.stroke();\\n                    ctx.moveTo(0, y);\\n                    ctx.lineTo(this.canvas.width/2, y);\\n                }\\n                for (let c=0;c<(CHUNKSIZE*CHUNKSIZE);c++) {\\n                    let k = Math.floor(c/CHUNKSIZE);\\n                    let l = c-(k*CHUNKSIZE);\\n\\n                    // if (typeof this.map_grid.matrix[i][j] === 'undefined') continue;\\n\\n                    blockid = data[chunkbufferoffset+c];\\n                    // if (c%100===0) console.log(blockid);\\n\\n                    if (blockid!==0){\\n                        // ctx.fillStyle = blockid.toString(16);\\n                        ctx.fillStyle = \\\"#\\\" + (blockid & 0x00FFFFFF).toString(16).padStart(6, '0');\\n                        doFill(i,j,k,l,blockid);\\n                    }\\n                }\\n                chunkbufferoffset += (CHUNKSIZE*CHUNKSIZE);\\n            }\\n        }\\n        if (this.getDebugMode()) ctx.stroke();\\n        ctx.fillStyle = \\\"#\\\" + this.getBlockSelected() + \\\"8f\\\"; // placeholder until get images\\n        doFill(cell_i,cell_j,cell_k,cell_l);\\n\\n        this.changeDrawTime(Date.now()-start);\\n    }\\n\\n    updateCanvas() {\\n        let start = Date.now(); // time testing\\n\\n        let {startpoint, numchunks} = this.map_grid.getValues(this.mapoffset.multipliedby(this.scale), this.scale);\\n        let linestosend = this.drawLines;\\n        this.drawLines = [];\\n        this.map_grid.setMatrix(numchunks, startpoint, linestosend)\\n        .then(()=>{\\n            this.drawMap(this.canvas, startpoint);\\n            this.startpoint = startpoint;\\n            this.changeUpdateTime(Date.now()-start);\\n        });\\n\\n        setTimeout(()=>{this.updateCanvas()}, 1000);\\n    }\\n\\n    // stolen code lmao\\n    resizeCanvas(canvas) {\\n        const { width, height } = canvas.getBoundingClientRect();\\n        \\n        if (canvas.width !== width || canvas.height !== height) {\\n          const { devicePixelRatio:ratio=1 } = window;\\n          const context = canvas.getContext('2d');\\n          canvas.width = width*ratio;\\n          canvas.height = height*ratio;\\n          context.scale(ratio, ratio);\\n          return true;\\n        }\\n    \\n        return false\\n    }\\n\\n    drawCellAtMouse(x,y) {\\n        const currentpos = new Vector2D(x-this.celloffset.x,y-this.celloffset.y);\\n\\n        let {cell_i, cell_j, cell_k, cell_l} = this.map_grid.getChunkPosOffset(currentpos, this.startpoint);\\n        // console.log(`Insertion coords: x:${cell_i} y:${cell_j}`);\\n        if (this.map_grid.matrix[cell_i][cell_j] !== undefined) this.map_grid.matrix[cell_i][cell_j].addCell(cell_k, cell_l, parseInt(this.getBlockSelected(),16));\\n        // console.log(`cell drawn at chunk ${cell_i},${cell_j}`);\\n    }\\n\\n    moveCursor(event) {\\n        let update = false;\\n        let newcursorcurrent = this.getCursorPosition(event, this.canvas);\\n        if (this.rmousedown) {\\n            this.moveMap(this.cursorcurrent, newcursorcurrent);\\n            update = true;\\n        }\\n        this.cursorcurrent = newcursorcurrent;\\n        let newcurrentcell = this.getCurrentCell();\\n        if (!this.currentcell.isEqualTo(newcurrentcell)) {\\n            if (this.lmousedown) {\\n\\n                // plotLine(this.currentcell, newcurrentcell, this.celloffset, (x,y)=>this.drawCellAtMouse(x,y));\\n                this.drawLine(this.currentcell,newcurrentcell);\\n            }\\n            this.currentcell = newcurrentcell;\\n            update = true;\\n            this.changeCursorLoc(this.currentcell);\\n            let {cell_i, cell_j, cell_k, cell_l} = this.map_grid.getChunkPosOffset(this.currentcell, this.startpoint);\\n            this.changeChunkLoc(cell_i+this.startpoint.x,cell_j+this.startpoint.y);\\n\\n        }\\n        \\n        return update;\\n    }\\n\\n    drawLine(p1,p2) {\\n\\n        plotLine(p1, p2, this.celloffset, (x,y)=>this.drawCellAtMouse(x,y));\\n\\n        this.drawLines.push({p1:p1,p2:p2,offset:this.celloffset,blockid:parseInt(this.getBlockSelected(),16)});\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n            <canvas \\n                ref={this.canvasRef} \\n                className='map-canvas primary'\\n                onContextMenu={(e) => {\\n                    e.preventDefault();\\n                }}\\n                onMouseDown={(e) => {\\n                    e.preventDefault();\\n                    if (e.button === 0) {\\n                        this.lmousedown=true;\\n                        this.drawLine(this.currentcell,this.currentcell);\\n                        this.drawMap(this.canvas, this.startpoint);\\n                    }\\n                    else if (e.button === 2) {\\n                        this.rmousedown=true;\\n                    }\\n                }}\\n                onMouseUp={(e) => {\\n                    this.lmousedown=false;\\n                    this.rmousedown=false;\\n                    this.drawMap(this.canvas, this.startpoint);\\n                }}\\n                onMouseMove={(e) => {\\n                    let update = false;\\n\\n                    update = this.moveCursor(e);\\n\\n                    if (update) this.drawMap(this.canvas, this.startpoint);\\n                }}\\n                onMouseLeave={(e) => {\\n                    this.moveCursor(e);\\n                    this.lmousedown=false;\\n                    this.rmousedown=false;\\n                    this.drawMap(this.canvas, this.startpoint);\\n                }}\\n                onWheel={(e) => {\\n                    e.preventDefault();\\n                    let newscale = this.scale - Math.round(e.deltaY)/1000;\\n                    if (newscale>0.5) this.scale = newscale;\\n                    else this.scale = 0.5;\\n                    \\n                    this.drawMap(this.canvas, this.startpoint);\\n                }}\\n            ></canvas>\\n            </div>\\n        )\\n    }\\n}\\n\\n// needs to be fixed up - maybe add useEffect()\\nclass Palette extends React.Component {\\n    constructor(props) {\\n        super(props);\\n\\n        this.changeBlock = props.changeBlock;\\n    }\\n\\n    render() {\\n        return (\\n            <div className='palette primary'>\\n                {\\n                    blocks.map(button => (\\n                        <div \\n                            key={button.blockid} \\n                            style={{backgroundColor: `${button.imagesrc}`}} \\n                            className={`blockbutton` + (this.props.isSelected(button.blockid) ? \\\"selected\\\" : \\\"\\\")}\\n                            onClick={() => {this.changeBlock(button.blockid)}}\\n                            //onClick={() => {console.log(button.blockid)}}\\n                            ></div>\\n                    ))\\n                }\\n        </div>\\n        )\\n    }\\n\\n}\\n\\n\\n\\n\\nfunction App() {\\n  return (\\n    <AppWrapper/>\\n  );\\n}\\n\\nexport default App;\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport './index.css';\\nimport App from './App';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{17:function(e,t,a){},18:function(e,t,a){},19:function(e,t,a){\"use strict\";a.r(t);var n=a(0),s=a.n(n),i=a(7),c=a.n(i),o=(a(17),a(4)),r=a(3),l=a(5),u=a(1),h=a(2),f=(a(18),16),d=[{blockid:\"0\",blockname:\"1\",imagesrc:\"#ffffff\"},{blockid:\"1\",blockname:\"2\",imagesrc:\"#d1e7dc\"},{blockid:\"2\",blockname:\"3\",imagesrc:\"#c4d4e1\"},{blockid:\"3\",blockname:\"4\",imagesrc:\"#bcb5d3\"},{blockid:\"4\",blockname:\"5\",imagesrc:\"#f5dbe2\"},{blockid:\"5\",blockname:\"6\",imagesrc:\"#eeb6c9\"},{blockid:\"6\",blockname:\"7\",imagesrc:\"#c49abf\"},{blockid:\"7\",blockname:\"8\",imagesrc:\"#bada55\"},{blockid:\"8\",blockname:\"9\",imagesrc:\"#ffd700\"},{blockid:\"9\",blockname:\"10\",imagesrc:\"#f47b79\"},{blockid:\"a\",blockname:\"11\",imagesrc:\"#c6e2d4\"},{blockid:\"b\",blockname:\"12\",imagesrc:\"#b6d3c2\"},{blockid:\"c\",blockname:\"13\",imagesrc:\"#e0b1cb\"},{blockid:\"d\",blockname:\"14\",imagesrc:\"#d0a7b7\"},{blockid:\"e\",blockname:\"15\",imagesrc:\"#f3d1d3\"},{blockid:\"f\",blockname:\"16\",imagesrc:\"#e9b8c8\"}];function m(e,t,a,n,s){var i=a-e,c=n-t,o=1;c<0&&(o=-1,c=-c);for(var r=2*c-i,l=t,u=e;u<a+1;u++)s(u,l),r>0?(l+=o,r+=2*(c-i)):r+=2*c}function g(e,t,a,n,s){var i=a-e,c=n-t,o=1;i<0&&(o=-1,i=-i);for(var r=2*i-c,l=e,u=t;u<n+1;u++)s(l,u),r>0?(l+=o,r+=2*(i-c)):r+=2*i}var p=function(){function e(t,a){Object(u.a)(this,e),this.x=t,this.y=a}return Object(h.a)(e,[{key:\"transform\",value:function(e,t){this.x+=e,this.y+=t}},{key:\"setTo\",value:function(e,t){this.x=e,this.y=t}},{key:\"isEqualTo\",value:function(e){return this.x===e.x&&this.y===e.y}},{key:\"notEqualTo\",value:function(e){return this.x!==e.x||this.y!==e.y}},{key:\"positive\",value:function(){return this.x>=0&&this.y>=0}},{key:\"multipliedby\",value:function(t){return new e(this.x*t,this.y*t)}},{key:\"transformedby\",value:function(t,a){return new e(this.x+t,this.y+a)}}]),e}(),v=function(){function e(t,a){Object(u.a)(this,e),this.canvasdimensions=new p(t,a),this.matrix=null,this.data=null,this.lastchunkrequesttime=null,this.numchunks=null}return Object(h.a)(e,[{key:\"getValues\",value:function(e,t){var a=f*t,n=new p(0,0),s=new p(0,0);return s.x=0===e.x?0:Math.floor(-1*e.x/a),s.y=0===e.y?0:Math.floor(-1*e.y/a),n.x=Math.ceil(this.canvasdimensions.x/a)+1,n.y=Math.ceil(this.canvasdimensions.y/a)+1,{startpoint:s,numchunks:n}}},{key:\"setMatrix\",value:function(e,t,a){for(var n=[],s=Array(e.x),i=0;i<e.x;i++){s[i]=Array(e.y);for(var c=0;c<e.y;c++){var o={x:t.x+i,y:t.y+c};n.push(o)}}var r=this;return new Promise(function(t,s){fetch(\"/getchunks\",{method:\"POST\",headers:{Accept:\"application/octet-stream\",\"Content-Type\":\"application/json\"},body:JSON.stringify({coords:n,lines:a})}).then(function(e){return e.arrayBuffer()}).then(function(a){r.data=a,r.numchunks=e,t()})})}},{key:\"getChunkPosOffset\",value:function(e,t){var a=Math.floor(e.x/f)-t.x,n=e.x-(a+t.x)*f,s=Math.floor(e.y/f)-t.y;return{cell_i:a,cell_j:s,cell_k:n,cell_l:e.y-(s+t.y)*f}}}]),e}(),k=function(e){function t(e){var a;return Object(u.a)(this,t),(a=Object(o.a)(this,Object(r.a)(t).call(this,e))).state={debug_mode:!1,show_stats:!0,block_selected:\"ff0fff\",update:{time:0,tot_time:0,num_updates:1},draw:{time:0,tot_time:0,num_updates:1},cursorx:0,cursory:0,offsetx:0,offsety:0,chunkx:0,chunky:0},a.changeBlock=function(e){a.setState({block_selected:e})},a.getBlockSelected=function(){return a.state.block_selected},a.getDebugMode=function(){return a.state.debug_mode},a.isSelected=function(e){return e===a.state.block_selected},a.changeUpdateTime=function(e){a.setState({update:{time:e,tot_time:a.state.update.tot_time+e,num_updates:a.state.update.num_updates+1}})},a.changeDrawTime=function(e){a.setState({draw:{time:e,tot_time:a.state.draw.tot_time+e,num_updates:a.state.draw.num_updates+1}})},a.changeCursorLoc=function(e){a.setState({cursorx:e.x,cursory:e.y})},a.changeOffsetLoc=function(e){a.setState({offsetx:e.x,offsety:e.y})},a.changeChunkLoc=function(e,t){a.setState({chunkx:e,chunky:t})},a}return Object(l.a)(t,e),Object(h.a)(t,[{key:\"componentDidMount\",value:function(){document.body.style.overflow=\"hidden\"}},{key:\"getData\",value:function(){for(var e=new ArrayBuffer(1024),t=new Int32Array(e),a=0;a<t.length;a++)t[a]=2*a;fetch(\"/test\",{method:\"POST\",headers:{Accept:\"application/octet-stream\",\"Content-Type\":\"application/octet-stream\"},body:e}).then(function(e){return e.json()}).then(function(e){})}},{key:\"render\",value:function(){var e=this;return s.a.createElement(\"div\",{className:\"App-wrapper\"},s.a.createElement(b,{getDebugMode:this.getDebugMode,changeUpdateTime:this.changeUpdateTime,changeDrawTime:this.changeDrawTime,getBlockSelected:this.getBlockSelected,changeCursorLoc:this.changeCursorLoc,changeOffsetLoc:this.changeOffsetLoc,changeChunkLoc:this.changeChunkLoc}),s.a.createElement(y,{isSelected:this.isSelected,changeBlock:this.changeBlock}),s.a.createElement(\"div\",{className:\"drawer primary\"},this.state.show_stats?s.a.createElement(\"div\",{style:{position:\"absolute\",right:\"0.8vw\"}},\"(\",this.state.update.time,\"ms, avg: \",Math.round(this.state.update.tot_time/this.state.update.num_updates),\"ms, \",this.state.update.num_updates,\" updates)\",s.a.createElement(\"br\",null),\"(\",this.state.draw.time,\"ms, avg: \",Math.round(this.state.draw.tot_time/this.state.draw.num_updates),\"ms, \",this.state.draw.num_updates,\" draws)\",s.a.createElement(\"br\",null),\"Cursor: (\",this.state.cursorx,\",\",this.state.cursory,\")\",s.a.createElement(\"br\",null),\"Offset: (\",this.state.offsetx,\",\",this.state.offsety,\")\",s.a.createElement(\"br\",null),\"Chunk: (\",this.state.chunkx,\",\",this.state.chunky,\")\"):null,s.a.createElement(\"b\",null,\"Instructions:\"),s.a.createElement(\"br\",null),\"This is a pixel art canvas with infinite area. Scroll to zoom in and out, right click to pan around, and use left click to draw on the canvas.\",s.a.createElement(\"br\",null),\"Use the palette on the right to select your colour.\",s.a.createElement(\"div\",{style:{color:\"#909090\"}},\"(!!!!) Be aware that there is no saving yet lol, also this is just a prototype so limited colours, no drawing tools etc.\"),s.a.createElement(\"input\",{type:\"checkbox\",onChange:function(){e.setState({debug_mode:!e.state.debug_mode})}}),\" Debug Mode\\u2002\",s.a.createElement(\"input\",{checked:this.state.show_stats,type:\"checkbox\",onChange:function(){e.setState({show_stats:!e.state.show_stats})}}),\" Stats\"))}}]),t}(s.a.Component),b=function(e){function t(e){var a;return Object(u.a)(this,t),(a=Object(o.a)(this,Object(r.a)(t).call(this,e))).getDebugMode=e.getDebugMode,a.getBlockSelected=e.getBlockSelected,a.changeUpdateTime=e.changeUpdateTime,a.changeDrawTime=e.changeDrawTime,a.changeCursorLoc=e.changeCursorLoc,a.changeOffsetLoc=e.changeOffsetLoc,a.changeChunkLoc=e.changeChunkLoc,a.drawLines=[],a.scale=16,a.map_grid=null,a.canvasRef=Object(n.createRef)(),a.mapoffset=new p(0,0),a.celloffset=new p(0,0),a.currentcell=new p(0,0),a.startpoint=new p(0,0),a.cursorcurrent=new p(0,0),a.lmousedown=!1,a.rmousedown=!1,a.canvas=null,a}return Object(l.a)(t,e),Object(h.a)(t,[{key:\"componentDidMount\",value:function(){this.canvas=this.canvasRef.current;var e=this.canvas.getBoundingClientRect(),t=e.width,a=e.height;this.map_grid=new v(t,a),setTimeout(this.updateCanvas(),1e3)}},{key:\"getCursorPosition\",value:function(e,t){var a=t.getBoundingClientRect(),n=e.clientX-a.left,s=e.clientY-a.top;return new p(n,s)}},{key:\"getCurrentCell\",value:function(){var e=Math.floor((this.cursorcurrent.x-this.mapoffset.x*this.scale)/this.scale),t=Math.floor((this.cursorcurrent.y-this.mapoffset.y*this.scale)/this.scale);return new p(e,t)}},{key:\"moveMap\",value:function(e,t){var a=(t.x-e.x)/this.scale,n=(t.y-e.y)/this.scale;this.mapoffset.transform(a,n),this.celloffset.setTo(Math.floor(this.mapoffset.x),Math.floor(this.mapoffset.y)),this.changeOffsetLoc(this.celloffset)}},{key:\"drawMap\",value:function(e,t){var a=this,n=Date.now();this.resizeCanvas(e);var s=e.getContext(\"2d\");s.clearRect(0,0,e.width,e.height),s.fillStyle=\"#ffffff\",s.fillRect(0,0,e.width,e.height);var i,c,o,r=this.map_grid.getChunkPosOffset(this.currentcell,t),l=r.cell_i,u=r.cell_j,h=r.cell_k,d=r.cell_l,m=function(e,n,i,r){c=((e+t.x)*f+i+a.mapoffset.x)*a.scale,o=((n+t.y)*f+r+a.mapoffset.y)*a.scale,s.fillRect(c,o,a.scale,a.scale)};if(null!==this.map_grid.data){var g=0,p=new Uint32Array(this.map_grid.data);this.getDebugMode()&&s.beginPath();for(var v=0;v<this.map_grid.numchunks.x;v++)for(var k=0;k<this.map_grid.numchunks.y;k++){this.getDebugMode()&&(c=((v+t.x)*f+this.mapoffset.x)*this.scale,o=((k+t.y)*f+this.mapoffset.y)*this.scale,s.fillStyle=\"#000000\",s.lineWidth=.01*Math.floor(this.scale),s.moveTo(c,0),s.lineTo(c,this.canvas.height/2),s.moveTo(0,o),s.lineTo(this.canvas.width/2,o));for(var b=0;b<f*f;b++){var y=Math.floor(b/f),w=b-y*f;0!==(i=p[g+b])&&(s.fillStyle=\"#\"+(16777215&i).toString(16).padStart(6,\"0\"),m(v,k,y,w))}g+=f*f}this.getDebugMode()&&s.stroke(),s.fillStyle=\"#\"+this.getBlockSelected()+\"8f\",m(l,u,h,d),this.changeDrawTime(Date.now()-n)}}},{key:\"updateCanvas\",value:function(){var e=this,t=Date.now(),a=this.map_grid.getValues(this.mapoffset.multipliedby(this.scale),this.scale),n=a.startpoint,s=a.numchunks,i=this.drawLines;this.drawLines=[],this.map_grid.setMatrix(s,n,i).then(function(){e.drawMap(e.canvas,n),e.startpoint=n,e.changeUpdateTime(Date.now()-t)}),setTimeout(function(){e.updateCanvas()},1e3)}},{key:\"resizeCanvas\",value:function(e){var t=e.getBoundingClientRect(),a=t.width,n=t.height;if(e.width!==a||e.height!==n){var s=window.devicePixelRatio,i=void 0===s?1:s,c=e.getContext(\"2d\");return e.width=a*i,e.height=n*i,c.scale(i,i),!0}return!1}},{key:\"drawCellAtMouse\",value:function(e,t){var a=new p(e-this.celloffset.x,t-this.celloffset.y),n=this.map_grid.getChunkPosOffset(a,this.startpoint),s=n.cell_i,i=n.cell_j,c=n.cell_k,o=n.cell_l;void 0!==this.map_grid.matrix[s][i]&&this.map_grid.matrix[s][i].addCell(c,o,parseInt(this.getBlockSelected(),16))}},{key:\"moveCursor\",value:function(e){var t=!1,a=this.getCursorPosition(e,this.canvas);this.rmousedown&&(this.moveMap(this.cursorcurrent,a),t=!0),this.cursorcurrent=a;var n=this.getCurrentCell();if(!this.currentcell.isEqualTo(n)){this.lmousedown&&this.drawLine(this.currentcell,n),this.currentcell=n,t=!0,this.changeCursorLoc(this.currentcell);var s=this.map_grid.getChunkPosOffset(this.currentcell,this.startpoint),i=s.cell_i,c=s.cell_j;s.cell_k,s.cell_l;this.changeChunkLoc(i+this.startpoint.x,c+this.startpoint.y)}return t}},{key:\"drawLine\",value:function(e,t){var a=this;!function(e,t,a,n){var s=e.x+a.x,i=e.y+a.y,c=t.x+a.x,o=t.y+a.y;s===c&&i===o&&n(s,i),Math.abs(o-i)<Math.abs(c-s)?s>c?m(c,o,s,i,n):m(s,i,c,o,n):i>o?g(c,o,s,i,n):g(s,i,c,o,n)}(e,t,this.celloffset,function(e,t){return a.drawCellAtMouse(e,t)}),this.drawLines.push({p1:e,p2:t,offset:this.celloffset,blockid:parseInt(this.getBlockSelected(),16)})}},{key:\"render\",value:function(){var e=this;return s.a.createElement(\"div\",null,s.a.createElement(\"canvas\",{ref:this.canvasRef,className:\"map-canvas primary\",onContextMenu:function(e){e.preventDefault()},onMouseDown:function(t){t.preventDefault(),0===t.button?(e.lmousedown=!0,e.drawLine(e.currentcell,e.currentcell),e.drawMap(e.canvas,e.startpoint)):2===t.button&&(e.rmousedown=!0)},onMouseUp:function(t){e.lmousedown=!1,e.rmousedown=!1,e.drawMap(e.canvas,e.startpoint)},onMouseMove:function(t){e.moveCursor(t)&&e.drawMap(e.canvas,e.startpoint)},onMouseLeave:function(t){e.moveCursor(t),e.lmousedown=!1,e.rmousedown=!1,e.drawMap(e.canvas,e.startpoint)},onWheel:function(t){t.preventDefault();var a=e.scale-Math.round(t.deltaY)/1e3;e.scale=a>.5?a:.5,e.drawMap(e.canvas,e.startpoint)}}))}}]),t}(s.a.Component),y=function(e){function t(e){var a;return Object(u.a)(this,t),(a=Object(o.a)(this,Object(r.a)(t).call(this,e))).changeBlock=e.changeBlock,a}return Object(l.a)(t,e),Object(h.a)(t,[{key:\"render\",value:function(){var e=this;return s.a.createElement(\"div\",{className:\"palette primary\"},d.map(function(t){return s.a.createElement(\"div\",{key:t.blockid,style:{backgroundColor:\"\".concat(t.imagesrc)},className:\"blockbutton\"+(e.props.isSelected(t.blockid)?\"selected\":\"\"),onClick:function(){e.changeBlock(t.blockid)}})}))}}]),t}(s.a.Component);var w=function(){return s.a.createElement(k,null)},x=function(e){e&&e instanceof Function&&a.e(3).then(a.bind(null,20)).then(function(t){var a=t.getCLS,n=t.getFID,s=t.getFCP,i=t.getLCP,c=t.getTTFB;a(e),n(e),s(e),i(e),c(e)})};c.a.createRoot(document.getElementById(\"root\")).render(s.a.createElement(s.a.StrictMode,null,s.a.createElement(w,null))),x()},8:function(e,t,a){e.exports=a(19)}},[[8,1,2]]]);","extractedComments":[]}