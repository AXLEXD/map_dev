{"ast":null,"code":"import _possibleConstructorReturn from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar _jsxFileName = \"/Users/alex/Programming/web_development/map_dev_server/client/src/App.js\";\nimport './App.css';\nimport React, { createRef } from 'react';\nvar FILEEXTENSION = \"png\";\nvar CHUNKSIZE = 16;\nvar LOWESTSCALE = 3;\nvar DRAWTOOL = 0;\nvar EYEDROPTOOL = 1;\nvar MOVETOOL = 2;\nvar blocks = [{\n  blockid: '0',\n  blockname: '1',\n  imagesrc: '#ffffff'\n}, {\n  blockid: '1',\n  blockname: '2',\n  imagesrc: '#d1e7dc'\n}, {\n  blockid: '2',\n  blockname: '3',\n  imagesrc: '#c4d4e1'\n}, {\n  blockid: '3',\n  blockname: '4',\n  imagesrc: '#bcb5d3'\n}, {\n  blockid: '4',\n  blockname: '5',\n  imagesrc: '#f5dbe2'\n}, {\n  blockid: '5',\n  blockname: '6',\n  imagesrc: '#eeb6c9'\n}, {\n  blockid: '6',\n  blockname: '7',\n  imagesrc: '#c49abf'\n}, {\n  blockid: '7',\n  blockname: '8',\n  imagesrc: '#bada55'\n}, {\n  blockid: '8',\n  blockname: '9',\n  imagesrc: '#ffd700'\n}, {\n  blockid: '9',\n  blockname: '10',\n  imagesrc: '#f47b79'\n}, {\n  blockid: 'a',\n  blockname: '11',\n  imagesrc: '#c6e2d4'\n}, {\n  blockid: 'b',\n  blockname: '12',\n  imagesrc: '#b6d3c2'\n}, {\n  blockid: 'c',\n  blockname: '13',\n  imagesrc: '#e0b1cb'\n}, {\n  blockid: 'd',\n  blockname: '14',\n  imagesrc: '#d0a7b7'\n}, {\n  blockid: 'e',\n  blockname: '15',\n  imagesrc: '#f3d1d3'\n}, {\n  blockid: 'f',\n  blockname: '16',\n  imagesrc: '#e9b8c8'\n}];\nfunction plotLineLow(x0, y0, x1, y1, drawFunc) {\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  var yi = 1;\n  if (dy < 0) {\n    yi = -1;\n    dy = -dy;\n  }\n  var D = 2 * dy - dx;\n  var y = y0;\n  for (var x = x0; x < x1 + 1; x++) {\n    drawFunc(x, y);\n    if (D > 0) {\n      y = y + yi;\n      D = D + 2 * (dy - dx);\n    } else {\n      D = D + 2 * dy;\n    }\n  }\n}\nfunction plotLineHigh(x0, y0, x1, y1, drawFunc) {\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  var xi = 1;\n  if (dx < 0) {\n    xi = -1;\n    dx = -dx;\n  }\n  var D = 2 * dx - dy;\n  var x = x0;\n  for (var y = y0; y < y1 + 1; y++) {\n    drawFunc(x, y);\n    if (D > 0) {\n      x = x + xi;\n      D = D + 2 * (dx - dy);\n    } else {\n      D = D + 2 * dx;\n    }\n  }\n}\nfunction plotLine(p1, p2, offset, drawFunc) {\n  var x0 = p1.x + offset.x;\n  var y0 = p1.y + offset.y;\n  var x1 = p2.x + offset.x;\n  var y1 = p2.y + offset.y;\n  if (x0 === x1 && y0 === y1) drawFunc(x0, y0);\n  if (Math.abs(y1 - y0) < Math.abs(x1 - x0)) {\n    if (x0 > x1) plotLineLow(x1, y1, x0, y0, drawFunc);else plotLineLow(x0, y0, x1, y1, drawFunc);\n  } else {\n    if (y0 > y1) plotLineHigh(x1, y1, x0, y0, drawFunc);else plotLineHigh(x0, y0, x1, y1, drawFunc);\n  }\n}\nvar Vector2D = /*#__PURE__*/function () {\n  function Vector2D(x, y) {\n    _classCallCheck(this, Vector2D);\n    this.x = x;\n    this.y = y;\n  }\n  _createClass(Vector2D, [{\n    key: \"transform\",\n    value: function transform(x, y) {\n      this.x += x;\n      this.y += y;\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }, {\n    key: \"isEqualTo\",\n    value: function isEqualTo(othervector) {\n      return this.x === othervector.x && this.y === othervector.y;\n    }\n  }, {\n    key: \"notEqualTo\",\n    value: function notEqualTo(othervector) {\n      return this.x !== othervector.x || this.y !== othervector.y;\n    }\n  }, {\n    key: \"positive\",\n    value: function positive() {\n      return this.x >= 0 && this.y >= 0;\n    }\n  }, {\n    key: \"multipliedby\",\n    value: function multipliedby(number) {\n      return new Vector2D(this.x * number, this.y * number);\n    }\n  }, {\n    key: \"transformedby\",\n    value: function transformedby(x, y) {\n      return new Vector2D(this.x + x, this.y + y);\n    }\n  }]);\n  return Vector2D;\n}();\nvar Map = /*#__PURE__*/function () {\n  function Map() {\n    _classCallCheck(this, Map);\n    // this.canvasdimensions = new Vector2D(w,h); // establishing at start means no resizing canvas element\n    this.data = null;\n    this.dataview = null;\n    this.numchunks = null;\n  }\n  _createClass(Map, [{\n    key: \"getValues\",\n    value: function getValues(canvas, offset, scale) {\n      var chunkpixels = CHUNKSIZE * scale;\n      var numchunks = new Vector2D(0, 0);\n      var startpoint = new Vector2D(0, 0);\n      startpoint.x = offset.x === 0 ? 0 : Math.floor(-1 * offset.x / chunkpixels);\n      startpoint.y = offset.y === 0 ? 0 : Math.floor(-1 * offset.y / chunkpixels);\n      var _canvas$getBoundingCl = canvas.getBoundingClientRect(),\n        width = _canvas$getBoundingCl.width,\n        height = _canvas$getBoundingCl.height;\n      numchunks.x = Math.ceil(width / chunkpixels) + 1; // bit cheaty - should probs optimise\n      numchunks.y = Math.ceil(height / chunkpixels) + 1;\n      return {\n        startpoint: startpoint,\n        numchunks: numchunks\n      };\n    }\n  }, {\n    key: \"setMatrix\",\n    value: function setMatrix(dimn, start, lines) {\n      var coords = [];\n      var map_grid = this;\n      for (var i = 0; i < dimn.x; i++) {\n        for (var j = 0; j < dimn.y; j++) {\n          var coordsobj = {\n            x: start.x + i,\n            y: start.y + j\n          };\n          coords.push(coordsobj);\n        }\n      }\n      return new Promise(function (resolve, reject) {\n        fetch('/getchunks', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/octet-stream',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            coords: coords,\n            lines: lines\n          })\n        }).then(function (data) {\n          return data.arrayBuffer();\n        }).then(function (chunkbuffer) {\n          // console.log([...new Uint8Array(chunkbuffer)].map(x => x.toString(16).padStart(2, '0')));\n          map_grid.data = chunkbuffer;\n          map_grid.dataview = new Uint32Array(map_grid.data);\n          map_grid.numchunks = dimn;\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"getChunkPosOffset\",\n    value: function getChunkPosOffset(currentcell, startpoint) {\n      var i = Math.floor(currentcell.x / CHUNKSIZE) - startpoint.x;\n      var k = currentcell.x - (i + startpoint.x) * CHUNKSIZE;\n      var j = Math.floor(currentcell.y / CHUNKSIZE) - startpoint.y;\n      var l = currentcell.y - (j + startpoint.y) * CHUNKSIZE;\n      return {\n        i: i,\n        j: j,\n        k: k,\n        l: l\n      };\n    }\n  }, {\n    key: \"addCell\",\n    value: function addCell(index, colorhex) {\n      this.dataview[index] = colorhex;\n      // console.log(data[index], colorhex);\n    }\n  }, {\n    key: \"getDataIndex\",\n    value: function getDataIndex(i, j, k, l) {\n      return i * this.numchunks.y * (CHUNKSIZE * CHUNKSIZE) + j * (CHUNKSIZE * CHUNKSIZE) + k * CHUNKSIZE + l;\n    }\n  }]);\n  return Map;\n}();\nvar AppWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(AppWrapper, _React$Component);\n  function AppWrapper(props) {\n    var _this;\n    _classCallCheck(this, AppWrapper);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppWrapper).call(this, props));\n    _this.state = {\n      tool_mode: MOVETOOL,\n      debug_mode: false,\n      show_stats: true,\n      color_selected: 1672153,\n      update: {\n        time: 0,\n        tot_time: 0,\n        num_updates: 1\n      },\n      draw: {\n        time: 0,\n        tot_time: 0,\n        num_updates: 1\n      },\n      cursorx: 0,\n      cursory: 0,\n      offsetx: 0,\n      offsety: 0,\n      chunkx: 0,\n      chunky: 0\n    };\n    _this.getColorSelected = function () {\n      return _this.state.color_selected;\n    };\n    _this.getDebugMode = function () {\n      return _this.state.debug_mode;\n    };\n    _this.getToolMode = function () {\n      return _this.state.tool_mode;\n    };\n    _this.changeToolMode = function (change_to) {\n      _this.setState({\n        tool_mode: change_to\n      });\n    };\n    _this.changeColor = function (blockid) {\n      if (typeof blockid === 'string') {\n        var out_num = parseInt(blockid.substring(1), 16);\n        console.log(blockid.substring(1));\n        console.log(out_num);\n        _this.setState({\n          color_selected: out_num\n        });\n      } else if (typeof blockid === 'number') {\n        _this.setState({\n          color_selected: blockid\n        });\n      }\n      _this.changeToolMode(DRAWTOOL);\n    };\n    _this.isSelected = function (blockid) {\n      if (typeof blockid === 'string') {\n        var out_num = parseInt(blockid.substring(1), 16);\n        return out_num === _this.state.color_selected;\n      } else if (typeof blockid === 'number') {\n        return blockid === _this.state.color_selected;\n      }\n    };\n    _this.changeUpdateTime = function (new_time) {\n      _this.setState({\n        update: {\n          time: new_time,\n          tot_time: _this.state.update.tot_time + new_time,\n          num_updates: _this.state.update.num_updates + 1\n        }\n      });\n    };\n    _this.changeDrawTime = function (new_time) {\n      _this.setState({\n        draw: {\n          time: new_time,\n          tot_time: _this.state.draw.tot_time + new_time,\n          num_updates: _this.state.draw.num_updates + 1\n        }\n      });\n    };\n    _this.changeCursorLoc = function (vector) {\n      _this.setState({\n        cursorx: vector.x,\n        cursory: vector.y\n      });\n    };\n    _this.changeOffsetLoc = function (vector) {\n      _this.setState({\n        offsetx: vector.x,\n        offsety: vector.y\n      });\n    };\n    _this.changeChunkLoc = function (x, y) {\n      _this.setState({\n        chunkx: x,\n        chunky: y\n      });\n    };\n    return _this;\n  }\n  _createClass(AppWrapper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.body.style.overflow = \"hidden\"; // stops user from scrolling the page\n    }\n  }, {\n    key: \"fileDownload\",\n    value: function fileDownload() {\n      var filename;\n      fetch('/getimage', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/octet-stream',\n          'Content-Type': 'image/png'\n        },\n        body: JSON.stringify(\"heilpo\")\n      }).then(function (response) {\n        filename = response.headers.get('Content-Disposition').split('filename=')[1];\n        return response.blob();\n      }).then(function (pngblob) {\n        var url = window.URL.createObjectURL(pngblob);\n        var link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', filename);\n        document.body.appendChild(link);\n        link.click();\n        link.parentNode.removeChild(link);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MapCanvas, {\n        toolmode: this.state.tool_mode,\n        getToolMode: this.getToolMode,\n        changeToolMode: this.changeToolMode,\n        getDebugMode: this.getDebugMode,\n        changeUpdateTime: this.changeUpdateTime,\n        changeDrawTime: this.changeDrawTime,\n        getColorSelected: this.getColorSelected,\n        changeCursorLoc: this.changeCursorLoc,\n        changeOffsetLoc: this.changeOffsetLoc,\n        changeChunkLoc: this.changeChunkLoc,\n        changeColor: this.changeColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Palette, {\n        isSelected: this.isSelected,\n        changeColor: this.changeColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drawer primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 17\n        }\n      }, this.state.show_stats ? /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: \"absolute\",\n          right: \"0.8vw\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 47\n        }\n      }, \"(\", this.state.update.time, \"ms, avg: \", Math.round(this.state.update.tot_time / this.state.update.num_updates), \"ms, \", this.state.update.num_updates, \" updates)\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 25\n        }\n      }), \"(\", this.state.draw.time, \"ms, avg: \", Math.round(this.state.draw.tot_time / this.state.draw.num_updates), \"ms, \", this.state.draw.num_updates, \" draws)\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 25\n        }\n      }), \"Cursor: (\", this.state.cursorx, \",\", this.state.cursory, \")\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 25\n        }\n      }), \"Offset: (\", this.state.offsetx, \",\", this.state.offsety, \")\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 25\n        }\n      }), \"Chunk: (\", this.state.chunkx, \",\", this.state.chunky, \")\") : null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbutton\" + (this.getToolMode() === DRAWTOOL ? \"selected\" : \"\") + \" blockbutton\" + (this.getToolMode() === DRAWTOOL ? \"selected\" : \"\"),\n        onClick: function onClick() {\n          _this2.changeToolMode(DRAWTOOL);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }\n      }, \"draw\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbutton\" + (this.getToolMode() === EYEDROPTOOL ? \"selected\" : \"\") + \" blockbutton\" + (this.getToolMode() === EYEDROPTOOL ? \"selected\" : \"\"),\n        onClick: function onClick() {\n          _this2.changeToolMode(EYEDROPTOOL);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 21\n        }\n      }, \"eyedrop\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbutton\" + (this.getToolMode() === MOVETOOL ? \"selected\" : \"\") + \" blockbutton\" + (this.getToolMode() === MOVETOOL ? \"selected\" : \"\"),\n        onClick: function onClick() {\n          _this2.changeToolMode(MOVETOOL);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 21\n        }\n      }, \"move\"), /*#__PURE__*/React.createElement(\"input\", {\n        checked: this.state.debug_mode,\n        type: \"checkbox\",\n        onChange: function onChange() {\n          _this2.setState({\n            debug_mode: !_this2.state.debug_mode\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 21\n        }\n      }), \" Debug Mode\\u2002\", /*#__PURE__*/React.createElement(\"input\", {\n        checked: this.state.show_stats,\n        type: \"checkbox\",\n        onChange: function onChange() {\n          _this2.setState({\n            show_stats: !_this2.state.show_stats\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 21\n        }\n      }), \" Stats\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"download-wrapper\"\n        // onClick={() => this.fileDownload()}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        style: {\n          width: \"35px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        value: \"5\",\n        type: \"number\",\n        style: {\n          width: \"35px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 25\n        }\n      }), \"hello\")));\n    }\n  }]);\n  return AppWrapper;\n}(React.Component);\nvar MapCanvas = /*#__PURE__*/function (_React$Component2) {\n  _inherits(MapCanvas, _React$Component2);\n  function MapCanvas(props) {\n    var _this3;\n    _classCallCheck(this, MapCanvas);\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(MapCanvas).call(this, props));\n    _this3.drawLines = [];\n    _this3.lastdraw = 0;\n    _this3.scale = 16;\n    _this3.tempscale = _this3.scale;\n    _this3.cellpos = {\n      i: 0,\n      j: 0,\n      k: 0,\n      l: 0\n    };\n    _this3.map_grid = null;\n    _this3.canvasRef = createRef();\n    _this3.mapoffset = new Vector2D(0, 0);\n    _this3.celloffset = new Vector2D(0, 0);\n    _this3.currentcell = new Vector2D(0, 0);\n    _this3.startpoint = new Vector2D(0, 0);\n    _this3.cursorcurrent = new Vector2D(0, 0);\n    _this3.lmousedown = false;\n    _this3.rmousedown = false;\n    _this3.canvas = null;\n    return _this3;\n  }\n\n  //Called after element's initialisation\n  _createClass(MapCanvas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.canvas = this.canvasRef.current;\n      this.map_grid = new Map();\n      setTimeout(this.updateCanvas(), 1000);\n    }\n  }, {\n    key: \"getCursorPosition\",\n    value: function getCursorPosition(event, canvas) {\n      var rect = canvas.getBoundingClientRect();\n      var x = event.clientX - rect.left;\n      var y = event.clientY - rect.top;\n      var pos = new Vector2D(x, y);\n      return pos;\n    }\n  }, {\n    key: \"getCurrentCell\",\n    value: function getCurrentCell() {\n      var x = Math.floor((this.cursorcurrent.x - this.mapoffset.x * this.scale) / this.scale);\n      var y = Math.floor((this.cursorcurrent.y - this.mapoffset.y * this.scale) / this.scale);\n      var pos = new Vector2D(x, y);\n      return pos;\n    }\n  }, {\n    key: \"moveMap\",\n    value: function moveMap(start, end) {\n      var x = (end.x - start.x) / this.scale;\n      var y = (end.y - start.y) / this.scale;\n      this.mapoffset.transform(x, y);\n      this.celloffset.setTo(Math.floor(this.mapoffset.x), Math.floor(this.mapoffset.y));\n      this.props.changeOffsetLoc(this.celloffset);\n    }\n  }, {\n    key: \"drawMap\",\n    value: function drawMap(canvas, startpoint) {\n      var _this4 = this;\n      var start = Date.now();\n\n      // if (start < (this.lastdraw + 1000/60)) return; // Only drawing every 1/60th of a second\n      this.lastdraw = start;\n      this.resizeCanvas(canvas);\n      var _canvas$getBoundingCl2 = canvas.getBoundingClientRect(),\n        width = _canvas$getBoundingCl2.width,\n        height = _canvas$getBoundingCl2.height;\n      var ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, width, height);\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fillRect(0, 0, width, height);\n\n      // finding location in terms of iterators of current cell\n      // let {cell_i, cell_j, cell_k, cell_l} = this.map_grid.getChunkPosOffset(this.currentcell, startpoint);\n\n      var blockid;\n      var x;\n      var y;\n      var mapoffset_x = Math.floor(this.mapoffset.x * this.scale);\n      var mapoffset_y = Math.floor(this.mapoffset.y * this.scale);\n      // let mapoffset_x = this.mapoffset.x;\n      // let mapoffset_y = this.mapoffset.y;\n\n      var doFill = function doFill(i, j, k, l) {\n        x = ((i + startpoint.x) * CHUNKSIZE + k) * _this4.scale + mapoffset_x;\n        y = ((j + startpoint.y) * CHUNKSIZE + l) * _this4.scale + mapoffset_y;\n        if (x % 1 !== 0 || y % 1 !== 0 || _this4.scale % 1 !== 0) console.log(\"ALERT:\", x, y, _this4.scale);\n        ctx.fillRect(x, y, _this4.scale, _this4.scale);\n        // console.log(x,y,cellapparentsize);\n      };\n\n      if (this.map_grid.data === null) return;\n      // for map\n\n      var chunkbufferoffset = 0;\n      if (this.props.getDebugMode()) ctx.beginPath();\n      for (var i = 0; i < this.map_grid.numchunks.x; i++) {\n        for (var j = 0; j < this.map_grid.numchunks.y; j++) {\n          // for each chunk\n          if (this.props.getDebugMode()) {\n            x = (i + startpoint.x) * CHUNKSIZE * this.scale + mapoffset_x;\n            y = (j + startpoint.y) * CHUNKSIZE * this.scale + mapoffset_y;\n            ctx.fillStyle = \"#000000\";\n            ctx.lineWidth = 0.01 * Math.floor(this.scale);\n            ctx.moveTo(x, 0);\n            ctx.lineTo(x, height);\n            // ctx.stroke();\n            ctx.moveTo(0, y);\n            ctx.lineTo(width, y);\n          }\n          for (var c = 0; c < CHUNKSIZE * CHUNKSIZE; c++) {\n            var k = Math.floor(c / CHUNKSIZE);\n            var l = c - k * CHUNKSIZE;\n            blockid = this.map_grid.dataview[chunkbufferoffset + c];\n            if (blockid !== 16777215) {\n              // ctx.fillStyle = blockid.toString(16);\n              ctx.fillStyle = \"#\" + (blockid & 0x00FFFFFF).toString(16).padStart(6, '0');\n              // if (c===0) console.log((blockid & 0x00FFFFFF).toString(16).padStart(6, '0'))\n              doFill(i, j, k, l, blockid);\n            }\n          }\n          chunkbufferoffset += CHUNKSIZE * CHUNKSIZE;\n        }\n      }\n      if (this.props.getDebugMode()) ctx.stroke();\n      if (this.props.toolmode === DRAWTOOL) {\n        ctx.fillStyle = \"#\" + (this.props.getColorSelected() & 0x00FFFFFF).toString(16).padStart(6, '0') + \"ff\";\n        doFill(this.cellpos.i, this.cellpos.j, this.cellpos.k, this.cellpos.l);\n      }\n      this.props.changeDrawTime(Date.now() - start);\n    }\n  }, {\n    key: \"updateCanvas\",\n    value: function updateCanvas() {\n      var _this5 = this;\n      var start = Date.now(); // time testing\n      var _this$map_grid$getVal = this.map_grid.getValues(this.canvas, this.mapoffset.multipliedby(this.scale), this.scale),\n        startpoint = _this$map_grid$getVal.startpoint,\n        numchunks = _this$map_grid$getVal.numchunks;\n      var linestosend = this.drawLines;\n      this.drawLines = [];\n      this.map_grid.setMatrix(numchunks, startpoint, linestosend).then(function () {\n        _this5.drawMap(_this5.canvas, startpoint);\n        _this5.startpoint = startpoint;\n        _this5.props.changeUpdateTime(Date.now() - start);\n      });\n      setTimeout(function () {\n        _this5.updateCanvas();\n      }, 1000);\n    } // stolen code lmao\n  }, {\n    key: \"resizeCanvas\",\n    value: function resizeCanvas(canvas) {\n      var _canvas$getBoundingCl3 = canvas.getBoundingClientRect(),\n        width = _canvas$getBoundingCl3.width,\n        height = _canvas$getBoundingCl3.height;\n      if (canvas.width !== width || canvas.height !== height) {\n        var _window = window,\n          _window$devicePixelRa = _window.devicePixelRatio,\n          ratio = _window$devicePixelRa === void 0 ? 1 : _window$devicePixelRa;\n        var context = canvas.getContext('2d');\n        canvas.width = 1 * width * ratio;\n        canvas.height = 1 * height * ratio;\n        context.scale(ratio, ratio);\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"drawCellAtMouse\",\n    value: function drawCellAtMouse(x, y) {\n      var currentpos = new Vector2D(x - this.celloffset.x, y - this.celloffset.y);\n      var _this$map_grid$getChu = this.map_grid.getChunkPosOffset(currentpos, this.startpoint),\n        i = _this$map_grid$getChu.i,\n        j = _this$map_grid$getChu.j,\n        k = _this$map_grid$getChu.k,\n        l = _this$map_grid$getChu.l;\n      var dataindex = this.map_grid.getDataIndex(i, j, k, l);\n      if (dataindex < this.map_grid.data.byteLength / 4) this.map_grid.addCell(dataindex, this.props.getColorSelected());\n    }\n  }, {\n    key: \"moveCursor\",\n    value: function moveCursor(event) {\n      var update = false;\n      var newcursorcurrent = this.getCursorPosition(event, this.canvas);\n      if (this.rmousedown) {\n        this.moveMap(this.cursorcurrent, newcursorcurrent);\n        update = true;\n      }\n      this.cursorcurrent = newcursorcurrent;\n      var newcurrentcell = this.getCurrentCell();\n      // Drawing line and updating stats\n      if (!this.currentcell.isEqualTo(newcurrentcell)) {\n        if (this.lmousedown) this.drawLine(this.currentcell, newcurrentcell);\n        this.currentcell = newcurrentcell;\n        this.cellpos = this.map_grid.getChunkPosOffset(this.currentcell, this.startpoint);\n        this.props.changeCursorLoc(this.currentcell);\n        this.props.changeChunkLoc(this.cellpos.i + this.startpoint.x, this.cellpos.j + this.startpoint.y);\n        update = true;\n      }\n      return update;\n    }\n  }, {\n    key: \"drawLine\",\n    value: function drawLine(p1, p2) {\n      var _this6 = this;\n      plotLine(p1, p2, this.celloffset, function (x, y) {\n        return _this6.drawCellAtMouse(x, y);\n      });\n      this.drawLines.push({\n        p1: p1,\n        p2: p2,\n        offset: this.celloffset,\n        blockid: this.props.getColorSelected()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n      var getCursor = function getCursor() {\n        switch (_this7.props.toolmode) {\n          case EYEDROPTOOL:\n            return \"crosshair\";\n          case MOVETOOL:\n            return \"move\";\n          default:\n            return \"default\";\n        }\n      };\n      return /*#__PURE__*/React.createElement(\"canvas\", {\n        ref: this.canvasRef,\n        className: \"map-canvas primary\",\n        style: {\n          cursor: getCursor()\n        },\n        onContextMenu: function onContextMenu(e) {\n          e.preventDefault();\n        },\n        onMouseDown: function onMouseDown(e) {\n          e.preventDefault();\n          if (e.button === 0) {\n            switch (_this7.props.toolmode) {\n              case EYEDROPTOOL:\n                console.log(\"eyedroptool used\");\n                var _this7$map_grid$getCh = _this7.map_grid.getChunkPosOffset(_this7.currentcell, _this7.startpoint),\n                  i = _this7$map_grid$getCh.i,\n                  j = _this7$map_grid$getCh.j,\n                  k = _this7$map_grid$getCh.k,\n                  l = _this7$map_grid$getCh.l;\n                var dataindex = _this7.map_grid.getDataIndex(i, j, k, l);\n                _this7.props.changeColor(_this7.map_grid.dataview[dataindex]);\n                // this.props.changeToolMode(DRAWTOOL);\n                break;\n              case MOVETOOL:\n                _this7.rmousedown = true;\n                break;\n              default:\n                _this7.lmousedown = true;\n                _this7.drawLine(_this7.currentcell, _this7.currentcell);\n                _this7.drawMap(_this7.canvas, _this7.startpoint);\n                break;\n            }\n          } else if (e.button === 2) {\n            _this7.rmousedown = true;\n          }\n        },\n        onMouseUp: function onMouseUp(e) {\n          _this7.lmousedown = false;\n          _this7.rmousedown = false;\n          _this7.drawMap(_this7.canvas, _this7.startpoint);\n        },\n        onMouseMove: function onMouseMove(e) {\n          if (_this7.moveCursor(e)) _this7.drawMap(_this7.canvas, _this7.startpoint);\n        },\n        onMouseLeave: function onMouseLeave(e) {\n          _this7.moveCursor(e);\n          _this7.lmousedown = false;\n          _this7.rmousedown = false;\n          _this7.drawMap(_this7.canvas, _this7.startpoint);\n        },\n        onWheel: function onWheel(e) {\n          var newscale = _this7.tempscale - Math.floor(e.deltaY) / 1000;\n          // console.log(this.scale, this.tempscale);\n          if (newscale > LOWESTSCALE) _this7.tempscale = newscale;else _this7.tempscale = LOWESTSCALE;\n          var oldscale = _this7.scale;\n          _this7.scale = Math.floor(_this7.tempscale);\n          if (oldscale !== _this7.scale) _this7.drawMap(_this7.canvas, _this7.startpoint);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n  return MapCanvas;\n}(React.Component); // needs to be fixed up - maybe add useEffect()\nvar Palette = /*#__PURE__*/function (_React$Component3) {\n  _inherits(Palette, _React$Component3);\n  function Palette(props) {\n    var _this8;\n    _classCallCheck(this, Palette);\n    _this8 = _possibleConstructorReturn(this, _getPrototypeOf(Palette).call(this, props));\n    _this8.handleChange = function (e) {\n      _this8.props.changeColor(e.target.value);\n    };\n    return _this8;\n  }\n  _createClass(Palette, [{\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"palette primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 13\n        }\n      }, blocks.map(function (button) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: button.blockid,\n          style: {\n            backgroundColor: \"\".concat(button.imagesrc)\n          },\n          className: \"blockbutton\" + (_this9.props.isSelected(button.imagesrc) ? \"selected\" : \"\"),\n          onClick: function onClick() {\n            _this9.props.changeColor(button.imagesrc);\n          }\n          //onClick={() => {console.log(button.blockid)}}\n          ,\n          __self: _this9,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 25\n          }\n        });\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"color\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n  return Palette;\n}(React.Component);\nfunction App() {\n  return /*#__PURE__*/React.createElement(AppWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 5\n    }\n  });\n}\nexport default App;","map":{"version":3,"names":["React","createRef","FILEEXTENSION","CHUNKSIZE","LOWESTSCALE","DRAWTOOL","EYEDROPTOOL","MOVETOOL","blocks","blockid","blockname","imagesrc","plotLineLow","x0","y0","x1","y1","drawFunc","dx","dy","yi","D","y","x","plotLineHigh","xi","plotLine","p1","p2","offset","Math","abs","Vector2D","_classCallCheck","_createClass","key","value","transform","setTo","isEqualTo","othervector","notEqualTo","positive","multipliedby","number","transformedby","Map","data","dataview","numchunks","getValues","canvas","scale","chunkpixels","startpoint","floor","_canvas$getBoundingCl","getBoundingClientRect","width","height","ceil","setMatrix","dimn","start","lines","coords","map_grid","i","j","coordsobj","push","Promise","resolve","reject","fetch","method","headers","body","JSON","stringify","then","arrayBuffer","chunkbuffer","Uint32Array","getChunkPosOffset","currentcell","k","l","addCell","index","colorhex","getDataIndex","AppWrapper","_React$Component","_inherits","props","_this","_possibleConstructorReturn","_getPrototypeOf","call","state","tool_mode","debug_mode","show_stats","color_selected","update","time","tot_time","num_updates","draw","cursorx","cursory","offsetx","offsety","chunkx","chunky","getColorSelected","getDebugMode","getToolMode","changeToolMode","change_to","setState","changeColor","out_num","parseInt","substring","console","log","isSelected","changeUpdateTime","new_time","changeDrawTime","changeCursorLoc","vector","changeOffsetLoc","changeChunkLoc","componentDidMount","document","style","overflow","fileDownload","filename","response","get","split","blob","pngblob","url","window","URL","createObjectURL","link","createElement","href","setAttribute","appendChild","click","parentNode","removeChild","render","_this2","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","MapCanvas","toolmode","Palette","position","right","round","onClick","checked","type","onChange","Component","_React$Component2","_this3","drawLines","lastdraw","tempscale","cellpos","canvasRef","mapoffset","celloffset","cursorcurrent","lmousedown","rmousedown","current","setTimeout","updateCanvas","getCursorPosition","event","rect","clientX","left","clientY","top","pos","getCurrentCell","moveMap","end","drawMap","_this4","Date","now","resizeCanvas","_canvas$getBoundingCl2","ctx","getContext","clearRect","fillStyle","fillRect","mapoffset_x","mapoffset_y","doFill","chunkbufferoffset","beginPath","lineWidth","moveTo","lineTo","c","toString","padStart","stroke","_this5","_this$map_grid$getVal","linestosend","_canvas$getBoundingCl3","_window","_window$devicePixelRa","devicePixelRatio","ratio","context","drawCellAtMouse","currentpos","_this$map_grid$getChu","dataindex","byteLength","moveCursor","newcursorcurrent","newcurrentcell","drawLine","_this6","_this7","getCursor","ref","cursor","onContextMenu","e","preventDefault","onMouseDown","button","_this7$map_grid$getCh","onMouseUp","onMouseMove","onMouseLeave","onWheel","newscale","deltaY","oldscale","_React$Component3","_this8","handleChange","target","_this9","map","backgroundColor","concat","App"],"sources":["/Users/alex/Programming/web_development/map_dev_server/client/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { createRef } from 'react';\n\n\nconst FILEEXTENSION = \"png\";\n\nconst CHUNKSIZE = 16;\n\nconst LOWESTSCALE = 3;\n\nconst DRAWTOOL = 0;\nconst EYEDROPTOOL = 1;\nconst MOVETOOL = 2;\n  \nconst blocks = [\n    {\n        blockid: '0',\n        blockname: '1',\n        imagesrc: '#ffffff'\n    },\n    {\n        blockid: '1',\n        blockname: '2',\n        imagesrc: '#d1e7dc'\n    },\n    {\n        blockid: '2',\n        blockname: '3',\n        imagesrc: '#c4d4e1'\n    },\n    {\n        blockid: '3',\n        blockname: '4',\n        imagesrc: '#bcb5d3'\n    },\n    {\n        blockid: '4',\n        blockname: '5',\n        imagesrc: '#f5dbe2'\n    },\n    {\n        blockid: '5',\n        blockname: '6',\n        imagesrc: '#eeb6c9'\n    },\n    {\n        blockid: '6',\n        blockname: '7',\n        imagesrc: '#c49abf'\n    },\n    {\n        blockid: '7',\n        blockname: '8',\n        imagesrc: '#bada55'\n    },\n    {\n        blockid: '8',\n        blockname: '9',\n        imagesrc: '#ffd700'\n    },\n    {\n        blockid: '9',\n        blockname: '10',\n        imagesrc: '#f47b79'\n    },\n    {\n        blockid: 'a',\n        blockname: '11',\n        imagesrc: '#c6e2d4'\n    },\n    {\n        blockid: 'b',\n        blockname: '12',\n        imagesrc: '#b6d3c2'\n    },\n    {\n        blockid: 'c',\n        blockname: '13',\n        imagesrc: '#e0b1cb'\n    },\n    {\n        blockid: 'd',\n        blockname: '14',\n        imagesrc: '#d0a7b7'\n    },\n    {\n        blockid: 'e',\n        blockname: '15',\n        imagesrc: '#f3d1d3'\n    },\n    {\n        blockid: 'f',\n        blockname: '16',\n        imagesrc: '#e9b8c8'\n    }\n];\n\n  \n\nfunction plotLineLow(x0, y0, x1, y1, drawFunc) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    let yi = 1;\n    if (dy < 0) {\n        yi = -1;\n        dy = -dy;\n    }\n    let D = (2 * dy) - dx;\n    let y = y0;\n\n    for (let x = x0;x<x1+1;x++) {\n        drawFunc(x, y);\n        if (D > 0) {\n            y = y + yi;\n            D = D + (2 * (dy - dx));\n        } else {\n            D = D + 2*dy;\n        }\n    }\n}\nfunction plotLineHigh(x0, y0, x1, y1, drawFunc) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    let xi = 1;\n    if (dx < 0) {\n        xi = -1;\n        dx = -dx;\n    }\n    let D = (2 * dx) - dy;\n    let x = x0;\n\n    for (let y = y0;y<y1+1;y++) {\n        drawFunc(x, y);\n        if (D > 0) {\n            x = x + xi;\n            D = D + (2 * (dx - dy));\n        } else {\n            D = D + 2*dx;\n        }\n    }\n}\n\nfunction plotLine(p1, p2, offset, drawFunc) {\n    \n    let x0 = p1.x+offset.x;\n    let y0 = p1.y+offset.y;\n    \n    let x1 = p2.x+offset.x;\n    let y1 = p2.y+offset.y;\n\n    if (x0===x1 && y0===y1) drawFunc(x0,y0);\n\n\n    if (Math.abs(y1 - y0) < Math.abs(x1 - x0)) {\n        if (x0 > x1) plotLineLow(x1, y1, x0, y0, drawFunc);\n        else plotLineLow(x0, y0, x1, y1, drawFunc);\n    }\n    else {\n        if (y0 > y1) plotLineHigh(x1, y1, x0, y0, drawFunc);\n        else plotLineHigh(x0, y0, x1, y1, drawFunc);\n    }\n}\n\n\nclass Vector2D {\n    constructor(x,y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    transform(x,y) {\n        this.x += x;\n        this.y += y;\n    }\n\n    setTo(x,y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isEqualTo(othervector) {\n        return (this.x===othervector.x && this.y===othervector.y);\n    }\n    notEqualTo(othervector) {\n        return (this.x!==othervector.x || this.y!==othervector.y);\n    }\n\n    positive() {\n        return (this.x >= 0 && this.y >=0);\n    }\n\n    multipliedby(number) {\n        return new Vector2D(this.x*number,this.y*number);\n    }\n    transformedby(x,y) {\n        return new Vector2D(this.x+x,this.y+y);\n    }\n}\n\n\nclass Map {\n    constructor() {\n        // this.canvasdimensions = new Vector2D(w,h); // establishing at start means no resizing canvas element\n        this.data = null;\n        this.dataview = null;\n        this.numchunks = null;\n    }\n\n    getValues(canvas, offset, scale) {\n        let chunkpixels = CHUNKSIZE*scale;\n\n        let numchunks = new Vector2D(0,0);\n        let startpoint = new Vector2D(0,0);\n\n        startpoint.x = (offset.x === 0) ? 0 : Math.floor((-1*offset.x)/chunkpixels);\n        startpoint.y = (offset.y === 0) ? 0 : Math.floor((-1*offset.y)/chunkpixels);\n\n        const { width, height } = canvas.getBoundingClientRect();\n\n        numchunks.x = Math.ceil(width/chunkpixels)+1; // bit cheaty - should probs optimise\n        numchunks.y = Math.ceil(height/chunkpixels)+1;\n\n        return {startpoint, numchunks};\n    }\n\n    setMatrix(dimn, start, lines) {\n\n        let coords = [];\n        let map_grid = this;\n\n        for (let i=0;i<dimn.x;i++) {\n            for (let j=0;j<dimn.y;j++) {\n                let coordsobj = { x: start.x+i, y: start.y+j };\n                coords.push(coordsobj);    \n            }\n        }\n        return new Promise(function(resolve, reject) {\n            fetch('/getchunks',{\n                method: 'POST',\n                headers: {'Accept': 'application/octet-stream', 'Content-Type': 'application/json'},\n                body: JSON.stringify({coords:coords, lines:lines})\n            }).then((data)=>{\n                return data.arrayBuffer();\n            }).then((chunkbuffer) => {\n                // console.log([...new Uint8Array(chunkbuffer)].map(x => x.toString(16).padStart(2, '0')));\n                map_grid.data = chunkbuffer;\n                map_grid.dataview = new Uint32Array(map_grid.data);\n                map_grid.numchunks = dimn;\n                resolve();\n            });\n        });\n    }\n\n    getChunkPosOffset(currentcell, startpoint) {\n        const i = Math.floor((currentcell.x/CHUNKSIZE))-startpoint.x;\n        const k = currentcell.x - (i+startpoint.x)*CHUNKSIZE;\n\n        const j = Math.floor((currentcell.y/CHUNKSIZE))-startpoint.y;\n        const l = currentcell.y - (j+startpoint.y)*CHUNKSIZE;\n\n\n        return {i, j, k, l};\n    }\n\n    addCell(index,colorhex) {\n        this.dataview[index] = colorhex;\n        // console.log(data[index], colorhex);\n    }\n    getDataIndex(i,j,k,l) {\n        return i*(this.numchunks.y)*(CHUNKSIZE*CHUNKSIZE)+j*(CHUNKSIZE*CHUNKSIZE)+k*CHUNKSIZE+l;\n    }\n}\n\n\nclass AppWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tool_mode: MOVETOOL,\n            debug_mode: false,\n            show_stats: true,\n            color_selected: 1672153, \n            update: {\n                time: 0,\n                tot_time: 0,\n                num_updates: 1\n            },\n            draw: {\n                time: 0,\n                tot_time: 0,\n                num_updates: 1\n            },\n            cursorx: 0,\n            cursory: 0,\n            offsetx: 0,\n            offsety: 0,\n            chunkx: 0,\n            chunky: 0,\n        };\n\n        this.getColorSelected = () => {return this.state.color_selected};\n        this.getDebugMode = () => {return this.state.debug_mode};\n        this.getToolMode = () => {return this.state.tool_mode};\n\n        this.changeToolMode = (change_to) => {\n            this.setState({tool_mode: change_to});\n        }\n\n        this.changeColor = (blockid) => {\n            if (typeof blockid === 'string') {\n                let out_num = parseInt(blockid.substring(1), 16);\n                console.log(blockid.substring(1));\n                console.log(out_num);\n                this.setState({color_selected: out_num});\n            }\n            else if (typeof blockid === 'number') {\n                this.setState({color_selected: blockid});\n            }\n            this.changeToolMode(DRAWTOOL);\n        };\n        this.isSelected = (blockid) => {\n            if (typeof blockid === 'string') {\n                let out_num = parseInt(blockid.substring(1), 16);\n                return (out_num===this.state.color_selected);\n            }\n            else if (typeof blockid === 'number') {\n                return (blockid===this.state.color_selected)\n            }\n        };\n\n        this.changeUpdateTime = (new_time) => {\n            this.setState({update:{\n                time: new_time, \n                tot_time: this.state.update.tot_time+new_time, \n                num_updates: this.state.update.num_updates+1\n            }});\n        }\n        this.changeDrawTime = (new_time) => {\n            this.setState({draw:{\n                time: new_time, \n                tot_time: this.state.draw.tot_time+new_time, \n                num_updates: this.state.draw.num_updates+1\n            }});\n        }\n        this.changeCursorLoc = (vector) => {\n            this.setState({cursorx: vector.x,cursory: vector.y});\n        }\n        this.changeOffsetLoc = (vector) => {\n            this.setState({offsetx: vector.x,offsety: vector.y});\n        }\n        this.changeChunkLoc = (x,y) => {\n            this.setState({chunkx: x,chunky: y});\n        }\n    }\n\n    componentDidMount() {\n        document.body.style.overflow = \"hidden\"; // stops user from scrolling the page\n    }\n\n    fileDownload() {\n        let filename;\n        fetch('/getimage',{\n            method: 'POST',\n            headers: {'Accept': 'application/octet-stream', 'Content-Type': 'image/png'},\n            body: JSON.stringify(\"heilpo\")\n        }).then((response) => {\n            filename =  response.headers.get('Content-Disposition').split('filename=')[1];\n            return response.blob()\n        })\n        .then((pngblob) => {\n            const url = window.URL.createObjectURL(pngblob);\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download',filename);\n            document.body.appendChild(link);\n            link.click();\n            link.parentNode.removeChild(link);\n        });\n    }\n\n    render() {\n        return (\n            <div className='App-wrapper'>\n                <MapCanvas \n                    toolmode={this.state.tool_mode}\n                    getToolMode={this.getToolMode}\n                    changeToolMode={this.changeToolMode}\n                    getDebugMode={this.getDebugMode}\n                    changeUpdateTime={this.changeUpdateTime}\n                    changeDrawTime={this.changeDrawTime}\n                    getColorSelected={this.getColorSelected}\n                    changeCursorLoc={this.changeCursorLoc}\n                    changeOffsetLoc={this.changeOffsetLoc}\n                    changeChunkLoc={this.changeChunkLoc}\n                    changeColor={this.changeColor}\n                />\n                <Palette isSelected={this.isSelected} changeColor={this.changeColor}/>\n                <div className='drawer primary'>\n                    {(this.state.show_stats)?(<div style={{position: `absolute`,right:`0.8vw`}}>\n                        ({this.state.update.time}ms, avg: {Math.round(this.state.update.tot_time/this.state.update.num_updates)}ms, {this.state.update.num_updates} updates)\n                        <br/>({this.state.draw.time}ms, avg: {Math.round(this.state.draw.tot_time/this.state.draw.num_updates)}ms, {this.state.draw.num_updates} draws)\n                        <br/>Cursor: ({this.state.cursorx},{this.state.cursory})\n                        <br/>Offset: ({this.state.offsetx},{this.state.offsety})\n                        <br/>Chunk: ({this.state.chunkx},{this.state.chunky})\n                    </div>):null}\n\n                    <div\n                        className={`toolbutton` + (this.getToolMode()===DRAWTOOL ? \"selected\" : \"\")+ ` blockbutton` + (this.getToolMode()===DRAWTOOL ? \"selected\" : \"\")}\n                        onClick={() => {this.changeToolMode(DRAWTOOL)}}\n                    >draw</div>\n                    <div\n                        className={`toolbutton` + (this.getToolMode()===EYEDROPTOOL ? \"selected\" : \"\")+ ` blockbutton` + (this.getToolMode()===EYEDROPTOOL ? \"selected\" : \"\")}\n                        onClick={() => {this.changeToolMode(EYEDROPTOOL)}}\n                    >eyedrop</div>\n                    <div\n                        className={`toolbutton` + (this.getToolMode()===MOVETOOL ? \"selected\" : \"\")+ ` blockbutton` + (this.getToolMode()===MOVETOOL ? \"selected\" : \"\")}\n                        onClick={() => {this.changeToolMode(MOVETOOL)}}\n                    >move</div>\n                    \n\n                    <input checked={this.state.debug_mode} type={\"checkbox\"} onChange={()=>{this.setState({debug_mode:!this.state.debug_mode})}}></input> Debug Mode&ensp;\n                    <input checked={this.state.show_stats} type={\"checkbox\"} onChange={()=>{this.setState({show_stats:!this.state.show_stats})}}></input> Stats\n                    <div\n                        className={`download-wrapper`}\n                        // onClick={() => this.fileDownload()}\n                    >\n                        <input type={\"number\"} style={{width:\"35px\"}}></input>\n                        <input value={\"5\"} type={\"number\"} style={{width:\"35px\"}}></input>\n                        hello\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass MapCanvas extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.drawLines = [];\n\n        this.lastdraw = 0;\n\n        this.scale = 16;\n        this.tempscale = this.scale;\n\n        this.cellpos = {i:0,j:0,k:0,l:0};\n\n        this.map_grid = null;\n        this.canvasRef = createRef();\n    \n        this.mapoffset = new Vector2D(0,0);\n        this.celloffset = new Vector2D(0,0);\n        this.currentcell = new Vector2D(0,0);\n        this.startpoint = new Vector2D(0,0);\n\n        this.cursorcurrent = new Vector2D(0,0);\n        this.lmousedown = false;\n        this.rmousedown = false;\n\n        this.canvas = null;\n    }\n\n    //Called after element's initialisation\n    componentDidMount() { \n        this.canvas = this.canvasRef.current;\n        this.map_grid = new Map();\n        setTimeout(this.updateCanvas(), 1000);\n    }\n\n    getCursorPosition(event, canvas) {\n        const rect = canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        const pos = new Vector2D(x,y);\n        return pos;\n    }\n\n    getCurrentCell() {\n        let x = Math.floor((this.cursorcurrent.x-this.mapoffset.x*this.scale)/(this.scale));\n        let y = Math.floor((this.cursorcurrent.y-this.mapoffset.y*this.scale)/(this.scale));\n        const pos = new Vector2D(x,y);\n        return pos;\n    }\n\n    moveMap(start, end) {\n        let x = (end.x-start.x)/this.scale;\n        let y = (end.y-start.y)/this.scale;\n        this.mapoffset.transform(x,y);\n        this.celloffset.setTo(Math.floor(this.mapoffset.x),Math.floor(this.mapoffset.y));\n        this.props.changeOffsetLoc(this.celloffset);\n    }\n\n    drawMap (canvas, startpoint) {\n        let start =  Date.now();\n\n        // if (start < (this.lastdraw + 1000/60)) return; // Only drawing every 1/60th of a second\n        this.lastdraw = start;\n\n        this.resizeCanvas(canvas);\n        const { width, height } = canvas.getBoundingClientRect();\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, width, height)\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fillRect(0, 0, width, height);\n\n        // finding location in terms of iterators of current cell\n        // let {cell_i, cell_j, cell_k, cell_l} = this.map_grid.getChunkPosOffset(this.currentcell, startpoint);\n\n        let blockid;\n        let x;\n        let y;\n\n        let mapoffset_x = Math.floor(this.mapoffset.x*this.scale);\n        let mapoffset_y = Math.floor(this.mapoffset.y*this.scale);\n        // let mapoffset_x = this.mapoffset.x;\n        // let mapoffset_y = this.mapoffset.y;\n\n        let doFill = (i,j,k,l) => {\n\n            x = (((i+startpoint.x)*CHUNKSIZE+k))*(this.scale)+mapoffset_x;\n            y = (((j+startpoint.y)*CHUNKSIZE+l))*(this.scale)+mapoffset_y;\n            if (x%1!==0||y%1!==0||this.scale%1!==0) console.log(\"ALERT:\", x, y, this.scale);\n            ctx.fillRect(x, y, this.scale, this.scale);\n            // console.log(x,y,cellapparentsize);\n        }\n        if (this.map_grid.data === null) return;\n        // for map\n\n\n        let chunkbufferoffset = 0;\n\n        if (this.props.getDebugMode()) ctx.beginPath();\n        for (let i=0;i<this.map_grid.numchunks.x;i++) {\n            for (let j=0;j<this.map_grid.numchunks.y;j++) {\n                // for each chunk\n                if (this.props.getDebugMode()) {\n                    x = (((i+startpoint.x)*CHUNKSIZE))*(this.scale)+mapoffset_x;\n                    y = (((j+startpoint.y)*CHUNKSIZE))*(this.scale)+mapoffset_y;\n\n                    ctx.fillStyle = \"#000000\";\n                    ctx.lineWidth = 0.01*Math.floor(this.scale);\n                    ctx.moveTo(x, 0);\n                    ctx.lineTo(x, height);\n                    // ctx.stroke();\n                    ctx.moveTo(0, y);\n                    ctx.lineTo(width, y);\n                }\n                for (let c=0;c<(CHUNKSIZE*CHUNKSIZE);c++) {\n                    let k = Math.floor(c/CHUNKSIZE);\n                    let l = c-(k*CHUNKSIZE);\n                    \n                    blockid = this.map_grid.dataview[chunkbufferoffset+c];\n\n                    if (blockid!==16777215){\n                        // ctx.fillStyle = blockid.toString(16);\n                        ctx.fillStyle = \"#\" + (blockid & 0x00FFFFFF).toString(16).padStart(6, '0');\n                        // if (c===0) console.log((blockid & 0x00FFFFFF).toString(16).padStart(6, '0'))\n                        doFill(i,j,k,l,blockid);\n                    }\n                }\n                chunkbufferoffset += (CHUNKSIZE*CHUNKSIZE);\n            }\n        }\n        if (this.props.getDebugMode()) ctx.stroke();\n\n        if (this.props.toolmode===DRAWTOOL) {\n            ctx.fillStyle = \"#\"+(this.props.getColorSelected() & 0x00FFFFFF).toString(16).padStart(6, '0')+\"ff\";\n            doFill(this.cellpos.i,this.cellpos.j,this.cellpos.k,this.cellpos.l);\n        }\n        this.props.changeDrawTime(Date.now()-start);\n    }\n\n    updateCanvas() {\n        let start = Date.now(); // time testing\n\n        let {startpoint, numchunks} = this.map_grid.getValues(this.canvas, this.mapoffset.multipliedby(this.scale), this.scale);\n        let linestosend = this.drawLines;\n        this.drawLines = [];\n        this.map_grid.setMatrix(numchunks, startpoint, linestosend)\n        .then(()=>{\n            this.drawMap(this.canvas, startpoint);\n            this.startpoint = startpoint;\n            this.props.changeUpdateTime(Date.now()-start);\n        });\n\n        setTimeout(()=>{this.updateCanvas()}, 1000);\n    }\n\n    // stolen code lmao\n    resizeCanvas(canvas) {\n        const { width, height } = canvas.getBoundingClientRect();\n        \n        if (canvas.width !== width || canvas.height !== height) {\n          const { devicePixelRatio:ratio=1 } = window;\n          const context = canvas.getContext('2d');\n          canvas.width = (1*width*ratio);\n          canvas.height = (1*height*ratio);\n          context.scale(ratio, ratio);\n          return true;\n        }\n    \n        return false\n    }\n\n    drawCellAtMouse(x,y) {\n        const currentpos = new Vector2D(x-this.celloffset.x,y-this.celloffset.y);\n\n        let {i, j, k, l} = this.map_grid.getChunkPosOffset(currentpos, this.startpoint);\n        let dataindex = this.map_grid.getDataIndex(i,j,k,l);\n        if (dataindex < this.map_grid.data.byteLength/4) this.map_grid.addCell(dataindex, this.props.getColorSelected());\n    }\n\n    moveCursor(event) {\n        let update = false;\n        let newcursorcurrent = this.getCursorPosition(event, this.canvas);\n        if (this.rmousedown) {\n            this.moveMap(this.cursorcurrent, newcursorcurrent);\n            update = true;\n        }\n        this.cursorcurrent = newcursorcurrent;\n        let newcurrentcell = this.getCurrentCell();\n        // Drawing line and updating stats\n        if (!this.currentcell.isEqualTo(newcurrentcell)) {\n            if (this.lmousedown) this.drawLine(this.currentcell,newcurrentcell);\n            this.currentcell = newcurrentcell;\n            this.cellpos = this.map_grid.getChunkPosOffset(this.currentcell, this.startpoint);\n            this.props.changeCursorLoc(this.currentcell);\n            this.props.changeChunkLoc(this.cellpos.i+this.startpoint.x,this.cellpos.j+this.startpoint.y);\n            update = true;\n        }\n        return update;\n    }\n\n    drawLine(p1,p2) {\n        plotLine(p1, p2, this.celloffset, (x,y)=>this.drawCellAtMouse(x,y));\n        this.drawLines.push({p1:p1,p2:p2,offset:this.celloffset,blockid:this.props.getColorSelected()});\n    }\n\n    render() {\n        let getCursor = ()=>{\n            switch (this.props.toolmode) {\n                case EYEDROPTOOL:\n                    return \"crosshair\";\n                case MOVETOOL:\n                    return \"move\";\n                default:\n                    return \"default\";\n            }\n        }\n        return (\n            <canvas \n                ref={this.canvasRef}\n                className='map-canvas primary'\n                style={{cursor:getCursor()}}\n                onContextMenu={(e) => {\n                    e.preventDefault();\n                }}\n                onMouseDown={(e) => {\n                    e.preventDefault();\n                    if (e.button === 0) {\n                        switch (this.props.toolmode) {\n                            case EYEDROPTOOL:\n                                console.log(\"eyedroptool used\");\n                                let {i,j,k,l} = this.map_grid.getChunkPosOffset(this.currentcell, this.startpoint);\n                                let dataindex = this.map_grid.getDataIndex(i,j,k,l);\n                                this.props.changeColor(this.map_grid.dataview[dataindex]);\n                                // this.props.changeToolMode(DRAWTOOL);\n                                break;\n                            case MOVETOOL:\n                                this.rmousedown=true;\n                                break;\n                            default:\n                                this.lmousedown=true;\n                                this.drawLine(this.currentcell,this.currentcell);\n                                this.drawMap(this.canvas, this.startpoint);\n                                break;\n                        }\n                    }\n                    else if (e.button === 2) {\n                        this.rmousedown=true;\n                    }\n                }}\n                onMouseUp={(e) => {\n                    this.lmousedown=false;\n                    this.rmousedown=false;\n                    this.drawMap(this.canvas, this.startpoint);\n                }}\n                onMouseMove={(e) => {\n                    if (this.moveCursor(e)) this.drawMap(this.canvas, this.startpoint);\n                }}\n                onMouseLeave={(e) => {\n                    this.moveCursor(e);\n                    this.lmousedown=false;\n                    this.rmousedown=false;\n                    this.drawMap(this.canvas, this.startpoint);\n                }}\n                onWheel={(e) => {\n                    let newscale = this.tempscale - Math.floor(e.deltaY)/1000;\n                    // console.log(this.scale, this.tempscale);\n                    if (newscale>LOWESTSCALE) this.tempscale = newscale;\n                    else this.tempscale = LOWESTSCALE;\n                    let oldscale = this.scale;\n                    this.scale = Math.floor(this.tempscale);\n                    \n                    if (oldscale!==this.scale) this.drawMap(this.canvas, this.startpoint);\n                }}\n            ></canvas>\n        )\n    }\n}\n\n// needs to be fixed up - maybe add useEffect()\nclass Palette extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = (e) => {\n            this.props.changeColor(e.target.value);\n        }\n    }\n\n    render() {\n        return (\n            <div className='palette primary'>\n                {\n                    blocks.map(button => (\n                        <div \n                            key={button.blockid} \n                            style={{backgroundColor: `${button.imagesrc}`}} \n                            className={`blockbutton` + (this.props.isSelected(button.imagesrc) ? \"selected\" : \"\")}\n                            onClick={() => {this.props.changeColor(button.imagesrc)}}\n                            //onClick={() => {console.log(button.blockid)}}\n                            ></div>\n                    ))\n                }\n                <input type={\"color\"} onChange={this.handleChange}></input>\n                {/* <input type={\"submit\"} value={\"Apply\"}></input> */}\n        </div>\n        )\n    }\n\n}\n\n\n\n\nfunction App() {\n  return (\n    <AppWrapper/>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}