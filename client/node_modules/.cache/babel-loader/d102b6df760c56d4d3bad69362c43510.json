{"ast":null,"code":"import _possibleConstructorReturn from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _asyncToGenerator from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar _jsxFileName = \"/Users/alex/Programming/web_development/map_dev_server/client/src/App.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport './App.css';\nimport React, { createRef } from 'react';\nvar UPDATEPERIOD = 1000;\nvar CHUNKSIZE = 16;\nvar LOWESTSCALE = 3;\nvar STARTSCALE = 16;\nvar DRAWTOOL = 0;\nvar EYEDROPTOOL = 1;\nvar MOVETOOL = 2;\n\n// const blocks = [\n//     {\n//         blockid: '0',\n//         blockname: '1',\n//         imagesrc: '#ffffff'\n//     },\n//     {\n//         blockid: '1',\n//         blockname: '2',\n//         imagesrc: '#d1e7dc'\n//     },\n//     {\n//         blockid: '2',\n//         blockname: '3',\n//         imagesrc: '#c4d4e1'\n//     },\n//     {\n//         blockid: '3',\n//         blockname: '4',\n//         imagesrc: '#bcb5d3'\n//     },\n//     {\n//         blockid: '4',\n//         blockname: '5',\n//         imagesrc: '#f5dbe2'\n//     },\n//     {\n//         blockid: '5',\n//         blockname: '6',\n//         imagesrc: '#eeb6c9'\n//     },\n//     {\n//         blockid: '6',\n//         blockname: '7',\n//         imagesrc: '#c49abf'\n//     },\n//     {\n//         blockid: '7',\n//         blockname: '8',\n//         imagesrc: '#bada55'\n//     },\n//     {\n//         blockid: '8',\n//         blockname: '9',\n//         imagesrc: '#ffd700'\n//     },\n//     {\n//         blockid: '9',\n//         blockname: '10',\n//         imagesrc: '#f47b79'\n//     },\n//     {\n//         blockid: 'a',\n//         blockname: '11',\n//         imagesrc: '#c6e2d4'\n//     },\n//     {\n//         blockid: 'b',\n//         blockname: '12',\n//         imagesrc: '#b6d3c2'\n//     },\n//     {\n//         blockid: 'c',\n//         blockname: '13',\n//         imagesrc: '#e0b1cb'\n//     },\n//     {\n//         blockid: 'd',\n//         blockname: '14',\n//         imagesrc: '#d0a7b7'\n//     },\n//     {\n//         blockid: 'e',\n//         blockname: '15',\n//         imagesrc: '#f3d1d3'\n//     },\n//     {\n//         blockid: 'f',\n//         blockname: '16',\n//         imagesrc: '#e9b8c8'\n//     }\n// ];\n\nvar colors = [\"#000000\",\n// Black\n\"#FFFFFF\",\n// White\n\"#FF0000\",\n// Red\n\"#00FF00\",\n// Green\n\"#0000FF\",\n// Blue\n\"#FFFF00\",\n// Yellow\n\"#FF00FF\",\n// Magenta\n\"#00FFFF\",\n// Cyan\n\"#800000\",\n// Maroon\n\"#008000\",\n// Olive\n\"#000080\",\n// Navy\n\"#808000\",\n// Olive Drab\n\"#800080\",\n// Purple\n\"#008080\",\n// Teal\n\"#808080\",\n// Gray\n\"#C0C0C0\",\n// Silver\n\"#FFC0CB\",\n// Pink\n\"#FFA07A\",\n// Light Salmon\n\"#FF7F50\",\n// Coral\n\"#FF6347\",\n// Tomato\n\"#FF4500\",\n// Orange Red\n\"#FF8C00\",\n// Dark Orange\n\"#FFD700\",\n// Gold\n\"#FFFFE0\",\n// Light Yellow\n\"#EEE8AA\",\n// Pale Goldenrod\n\"#ADFF2F\",\n// Green Yellow\n\"#32CD32\",\n// Lime Green\n\"#00FA9A\",\n// Medium Spring Green\n\"#00CED1\",\n// Dark Turquoise\n\"#6A5ACD\",\n// Slate Blue\n\"#7B68EE\",\n// Medium Slate Blue\n\"#FF69B4\",\n// Hot Pink\n\"#8B4513\" // Saddle Brown\n];\n\nfunction plotLineLow(x0, y0, x1, y1, drawFunc) {\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  var yi = 1;\n  if (dy < 0) {\n    yi = -1;\n    dy = -dy;\n  }\n  var D = 2 * dy - dx;\n  var y = y0;\n  for (var x = x0; x < x1 + 1; x++) {\n    drawFunc(x, y);\n    if (D > 0) {\n      y = y + yi;\n      D = D + 2 * (dy - dx);\n    } else {\n      D = D + 2 * dy;\n    }\n  }\n}\nfunction plotLineHigh(x0, y0, x1, y1, drawFunc) {\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  var xi = 1;\n  if (dx < 0) {\n    xi = -1;\n    dx = -dx;\n  }\n  var D = 2 * dx - dy;\n  var x = x0;\n  for (var y = y0; y < y1 + 1; y++) {\n    drawFunc(x, y);\n    if (D > 0) {\n      x = x + xi;\n      D = D + 2 * (dx - dy);\n    } else {\n      D = D + 2 * dx;\n    }\n  }\n}\nfunction plotLine(p1, p2, offset, drawFunc) {\n  var x0 = p1.x + offset.x;\n  var y0 = p1.y + offset.y;\n  var x1 = p2.x + offset.x;\n  var y1 = p2.y + offset.y;\n  if (x0 === x1 && y0 === y1) drawFunc(x0, y0);\n  if (Math.abs(y1 - y0) < Math.abs(x1 - x0)) {\n    if (x0 > x1) plotLineLow(x1, y1, x0, y0, drawFunc);else plotLineLow(x0, y0, x1, y1, drawFunc);\n  } else {\n    if (y0 > y1) plotLineHigh(x1, y1, x0, y0, drawFunc);else plotLineHigh(x0, y0, x1, y1, drawFunc);\n  }\n}\nfunction colorTo32Uint(colorstring) {\n  return parseInt(colorstring.substring(1), 16);\n}\nfunction colorToString(colornum) {\n  return \"#\" + (colornum & 0x00FFFFFF).toString(16).padStart(6, '0');\n}\nvar Vector2D = /*#__PURE__*/function () {\n  function Vector2D(x, y) {\n    _classCallCheck(this, Vector2D);\n    this.x = x;\n    this.y = y;\n  }\n  _createClass(Vector2D, [{\n    key: \"transform\",\n    value: function transform(x, y) {\n      this.x += x;\n      this.y += y;\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }, {\n    key: \"isEqualTo\",\n    value: function isEqualTo(othervector) {\n      return this.x === othervector.x && this.y === othervector.y;\n    }\n  }, {\n    key: \"notEqualTo\",\n    value: function notEqualTo(othervector) {\n      return this.x !== othervector.x || this.y !== othervector.y;\n    }\n  }, {\n    key: \"positive\",\n    value: function positive() {\n      return this.x >= 0 && this.y >= 0;\n    }\n  }, {\n    key: \"multipliedby\",\n    value: function multipliedby(number) {\n      return new Vector2D(this.x * number, this.y * number);\n    }\n  }, {\n    key: \"transformedby\",\n    value: function transformedby(x, y) {\n      return new Vector2D(this.x + x, this.y + y);\n    }\n  }]);\n  return Vector2D;\n}();\nvar Map = /*#__PURE__*/function () {\n  function Map() {\n    _classCallCheck(this, Map);\n    // this.canvasdimensions = new Vector2D(w,h); // establishing at start means no resizing canvas element\n    //the data returned by the server\n    this.data = null;\n    //the data formatted as an image bitmap\n    this.image = null;\n    this.dataview = null;\n    this.imageview = null;\n    this.numchunks = null;\n    this.cellsize = 2;\n  }\n  _createClass(Map, [{\n    key: \"getValues\",\n    value: function getValues(canvas, offset, scale) {\n      var chunkpixels = CHUNKSIZE * scale;\n      var numchunks = new Vector2D(0, 0);\n      var startpoint = new Vector2D(0, 0);\n      startpoint.x = offset.x === 0 ? 0 : Math.floor(-1 * offset.x / chunkpixels);\n      startpoint.y = offset.y === 0 ? 0 : Math.floor(-1 * offset.y / chunkpixels);\n      var _canvas$getBoundingCl = canvas.getBoundingClientRect(),\n        width = _canvas$getBoundingCl.width,\n        height = _canvas$getBoundingCl.height;\n      numchunks.x = Math.ceil(width / chunkpixels) + 1; // bit cheaty - should probs optimise\n      numchunks.y = Math.ceil(height / chunkpixels) + 1;\n      return {\n        startpoint: startpoint,\n        numchunks: numchunks\n      };\n    }\n  }, {\n    key: \"setMatrix\",\n    value: function () {\n      var _setMatrix = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(dimn, start, lines, cellsize, changeTranscodeTime) {\n        var coords, map_grid, i, j, coordsobj;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              coords = [];\n              map_grid = this;\n              for (i = 0; i < dimn.x; i++) {\n                for (j = 0; j < dimn.y; j++) {\n                  coordsobj = {\n                    x: start.x + i,\n                    y: start.y + j\n                  };\n                  coords.push(coordsobj);\n                }\n              }\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                // fetch(`${window.location.protocol + '//' + window.location.hostname}:2999/getchunks`,{\n                fetch(\"/getchunks\", {\n                  method: 'POST',\n                  headers: {\n                    'Accept': 'application/octet-stream',\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                  },\n                  body: JSON.stringify({\n                    coords: coords,\n                    lines: lines\n                  })\n                }).then(function (data) {\n                  return data.arrayBuffer();\n                }).then(function (chunkbuffer) {\n                  map_grid.numchunks = dimn;\n                  var current = Date.now();\n\n                  // const cellsize = 10;\n                  map_grid.data = chunkbuffer;\n                  map_grid.dataview = new Uint32Array(map_grid.data);\n                  map_grid.image = new ArrayBuffer(chunkbuffer.byteLength * cellsize * cellsize);\n                  map_grid.imageview = new Uint32Array(map_grid.image);\n                  var Uint32data = new Uint32Array(chunkbuffer);\n                  for (var _i = 0; _i < map_grid.numchunks.x; _i++) {\n                    for (var _j = 0; _j < map_grid.numchunks.y; _j++) {\n                      for (var k = 0; k < CHUNKSIZE; k++) {\n                        for (var l = 0; l < CHUNKSIZE; l++) {\n                          var bmp_index = _i * CHUNKSIZE * cellsize + _j * map_grid.numchunks.x * (CHUNKSIZE * CHUNKSIZE) * cellsize * cellsize + k * cellsize + l * map_grid.numchunks.x * CHUNKSIZE * cellsize * cellsize;\n                          var alex_index = map_grid.getDataIndex(_i, _j, k, l);\n                          var color = Uint32data[alex_index];\n                          var finalcolor = color << 16 & 0x00FF0000 | color & 0xFF00FF00 | color >> 16 & 0x000000FF;\n                          for (var a = 0; a < cellsize; a++) {\n                            for (var b = 0; b < cellsize; b++) {\n                              var relative_index = bmp_index + a + b * map_grid.numchunks.x * CHUNKSIZE * cellsize;\n                              map_grid.imageview[relative_index] = finalcolor;\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                  map_grid.cellsize = cellsize;\n                  changeTranscodeTime(Date.now() - current);\n                  resolve();\n                });\n              }));\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function setMatrix(_x, _x2, _x3, _x4, _x5) {\n        return _setMatrix.apply(this, arguments);\n      }\n      return setMatrix;\n    }()\n  }, {\n    key: \"getChunkPosOffset\",\n    value: function getChunkPosOffset(currentcell, startpoint) {\n      var i = Math.floor(currentcell.x / CHUNKSIZE) - startpoint.x;\n      var k = currentcell.x - (i + startpoint.x) * CHUNKSIZE;\n      var j = Math.floor(currentcell.y / CHUNKSIZE) - startpoint.y;\n      var l = currentcell.y - (j + startpoint.y) * CHUNKSIZE;\n      return {\n        i: i,\n        j: j,\n        k: k,\n        l: l\n      };\n    }\n  }, {\n    key: \"getDataIndex\",\n    value: function getDataIndex(i, j, k, l) {\n      return i * this.numchunks.y * (CHUNKSIZE * CHUNKSIZE) + j * (CHUNKSIZE * CHUNKSIZE) + k * CHUNKSIZE + l;\n    }\n  }]);\n  return Map;\n}();\nvar AppWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(AppWrapper, _React$Component);\n  function AppWrapper(props) {\n    var _this;\n    _classCallCheck(this, AppWrapper);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppWrapper).call(this, props));\n    _this.state = {\n      tool_mode: MOVETOOL,\n      debug_mode: false,\n      show_stats: true,\n      color_selected: 1672153,\n      stroke_radius: 1,\n      update: {\n        time: 0,\n        tot_time: 0,\n        num_updates: 1\n      },\n      transcode: {\n        time: 0,\n        tot_time: 0,\n        num_updates: 1\n      },\n      draw: {\n        time: 0,\n        tot_time: 0,\n        num_updates: 1\n      },\n      cursorx: 0,\n      cursory: 0,\n      offsetx: 0,\n      offsety: 0,\n      chunkx: 0,\n      chunky: 0,\n      cxstart: 0,\n      cystart: 0,\n      cxend: 0,\n      cyend: 0\n    };\n    _this.strokecanvas = null;\n    _this.colorinput = null;\n    _this.strokecanvasRef = createRef();\n    _this.colorInputRef = createRef();\n    _this.getColorSelected = function () {\n      return _this.state.color_selected;\n    };\n    _this.getDebugMode = function () {\n      return _this.state.debug_mode;\n    };\n    _this.getToolMode = function () {\n      return _this.state.tool_mode;\n    };\n    _this.changeToolMode = function (change_to) {\n      _this.setState({\n        tool_mode: change_to\n      });\n    };\n    _this.changeColor = function (color) {\n      _this.setState({\n        color_selected: color\n      });\n      _this.changeToolMode(DRAWTOOL);\n      _this.colorinput.value = colorToString(color);\n      _this.drawStrokeCanvas(color);\n    };\n    _this.isSelected = function (color) {\n      if (typeof color === 'string') {\n        var out_num = colorTo32Uint(color);\n        return out_num === _this.state.color_selected;\n      } else if (typeof color === 'number') {\n        return color === _this.state.color_selected;\n      }\n    };\n    _this.changeUpdateTime = function (new_time) {\n      _this.setState({\n        update: {\n          time: new_time,\n          tot_time: _this.state.update.tot_time + new_time,\n          num_updates: _this.state.update.num_updates + 1\n        }\n      });\n    };\n    _this.changeTranscodeTime = function (new_time) {\n      _this.setState({\n        transcode: {\n          time: new_time,\n          tot_time: _this.state.transcode.tot_time + new_time,\n          num_updates: _this.state.transcode.num_updates + 1\n        }\n      });\n    };\n    _this.changeDrawTime = function (new_time) {\n      _this.setState({\n        draw: {\n          time: new_time,\n          tot_time: _this.state.draw.tot_time + new_time,\n          num_updates: _this.state.draw.num_updates + 1\n        }\n      });\n    };\n    _this.changeCursorLoc = function (vector) {\n      _this.setState({\n        cursorx: vector.x,\n        cursory: vector.y\n      });\n    };\n    _this.changeOffsetLoc = function (vector) {\n      _this.setState({\n        offsetx: vector.x,\n        offsety: vector.y\n      });\n    };\n    _this.changeChunkLoc = function (x, y) {\n      _this.setState({\n        chunkx: x,\n        chunky: y\n      });\n    };\n    return _this;\n  }\n  _createClass(AppWrapper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.body.style.overflow = \"hidden\"; // stops user from scrolling the page\n      this.strokecanvas = this.strokecanvasRef.current;\n      this.colorinput = this.colorInputRef.current;\n      this.drawStrokeCanvas();\n    }\n  }, {\n    key: \"drawStrokeCanvas\",\n    value: function drawStrokeCanvas(color) {\n      var cellsize = 50;\n      var size = (this.state.stroke_radius + 2) * cellsize;\n      this.strokecanvas.width = size;\n      this.strokecanvas.height = size;\n      var ctx = this.strokecanvas.getContext('2d');\n      ctx.clearRect(0, 0, this.strokecanvas.width, this.strokecanvas.height);\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fillRect(0, 0, this.strokecanvas.width, this.strokecanvas.height);\n      ctx.fillStyle = colorToString(color);\n      ctx.fillRect(cellsize, cellsize, cellsize, cellsize);\n    }\n  }, {\n    key: \"mapDownload\",\n    value: function mapDownload() {\n      var filename;\n      var coordsobj = {\n        x1: this.state.cxstart,\n        y1: this.state.cystart,\n        x2: this.state.cxend,\n        y2: this.state.cyend\n      };\n      if (coordsobj.x1 === coordsobj.x2 || coordsobj.y1 === coordsobj.y2 || coordsobj.x1 > coordsobj.x2 || coordsobj.y1 > coordsobj.y2) return;\n\n      // fetch(`${window.location.protocol + '//' + window.location.hostname}:2999/getimage`,{\n      fetch(\"/getimage\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/octet-stream',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        },\n        body: JSON.stringify(coordsobj)\n      }).then(function (response) {\n        filename = response.headers.get('Content-Disposition').split('\"')[1];\n        return response.blob();\n      }).then(function (pngblob) {\n        var url = window.URL.createObjectURL(pngblob);\n        var link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', filename);\n        document.body.appendChild(link);\n        link.click();\n        link.parentNode.removeChild(link);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MapCanvas, {\n        toolmode: this.state.tool_mode,\n        getToolMode: this.getToolMode,\n        changeToolMode: this.changeToolMode,\n        getDebugMode: this.getDebugMode,\n        changeUpdateTime: this.changeUpdateTime,\n        changeTranscodeTime: this.changeTranscodeTime,\n        changeDrawTime: this.changeDrawTime,\n        getColorSelected: this.getColorSelected,\n        changeCursorLoc: this.changeCursorLoc,\n        changeOffsetLoc: this.changeOffsetLoc,\n        changeChunkLoc: this.changeChunkLoc,\n        changeColor: this.changeColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Palette, {\n        isSelected: this.isSelected,\n        changeColor: this.changeColor,\n        color: this.state.color_selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drawer primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 17\n        }\n      }, this.state.show_stats ? /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: \"absolute\",\n          right: \"0.8vw\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 47\n        }\n      }, \"(\", this.state.update.time, \"ms, avg: \", Math.round(this.state.update.tot_time / this.state.update.num_updates), \"ms, \", this.state.update.num_updates, \" updates)\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 25\n        }\n      }), \"(\", this.state.transcode.time, \"ms, avg: \", Math.round(this.state.transcode.tot_time / this.state.transcode.num_updates), \"ms, \", this.state.transcode.num_updates, \" transcodes);\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 25\n        }\n      }), \"(\", this.state.draw.time, \"ms, avg: \", Math.round(this.state.draw.tot_time / this.state.draw.num_updates), \"ms, \", this.state.draw.num_updates, \" draws)\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 25\n        }\n      }), \"Cursor: (\", this.state.cursorx, \",\", this.state.cursory, \")\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 25\n        }\n      }), \"Offset: (\", this.state.offsetx, \",\", this.state.offsety, \")\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 25\n        }\n      }), \"Chunk: (\", this.state.chunkx, \",\", this.state.chunky, \")\") : null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbutton\" + (this.getToolMode() === DRAWTOOL ? \"selected\" : \"\") + \" blockbutton\" + (this.getToolMode() === DRAWTOOL ? \"selected\" : \"\"),\n        onClick: function onClick() {\n          _this2.changeToolMode(DRAWTOOL);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 21\n        }\n      }, \"draw\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbutton\" + (this.getToolMode() === EYEDROPTOOL ? \"selected\" : \"\") + \" blockbutton\" + (this.getToolMode() === EYEDROPTOOL ? \"selected\" : \"\"),\n        onClick: function onClick() {\n          _this2.changeToolMode(EYEDROPTOOL);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 21\n        }\n      }, \"eyedrop\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbutton\" + (this.getToolMode() === MOVETOOL ? \"selected\" : \"\") + \" blockbutton\" + (this.getToolMode() === MOVETOOL ? \"selected\" : \"\"),\n        onClick: function onClick() {\n          _this2.changeToolMode(MOVETOOL);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 21\n        }\n      }, \"move\"), /*#__PURE__*/React.createElement(\"input\", {\n        checked: this.state.debug_mode,\n        type: \"checkbox\",\n        onChange: function onChange() {\n          _this2.setState({\n            debug_mode: !_this2.state.debug_mode\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 21\n        }\n      }), \" Debug Mode\\u2002\", /*#__PURE__*/React.createElement(\"input\", {\n        checked: this.state.show_stats,\n        type: \"checkbox\",\n        onChange: function onChange() {\n          _this2.setState({\n            show_stats: !_this2.state.show_stats\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 21\n        }\n      }), \" Stats\", /*#__PURE__*/React.createElement(\"table\", {\n        className: \"download-wrapper\"\n        // onClick={() => this.fileDownload()}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 33\n        }\n      }, \"from:\\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n        defaultValue: \"0\",\n        type: \"number\",\n        style: {\n          width: \"35px\"\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            cxstart: parseInt(e.target.value)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 51\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        defaultValue: \"0\",\n        type: \"number\",\n        style: {\n          width: \"35px\"\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            cystart: parseInt(e.target.value)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 33\n        }\n      }, \"to:\\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n        defaultValue: \"0\",\n        type: \"number\",\n        style: {\n          width: \"35px\"\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            cxend: parseInt(e.target.value)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        defaultValue: \"0\",\n        type: \"number\",\n        style: {\n          width: \"35px\"\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            cyend: parseInt(e.target.value)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 33\n        }\n      }, \"Save PNG:\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"download-button\",\n        onClick: function onClick() {\n          return _this2.mapDownload();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"save.png\",\n        alt: \"save\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 103\n        }\n      })))))), /*#__PURE__*/React.createElement(\"canvas\", {\n        ref: this.strokecanvasRef,\n        style: {\n          width: \"10vmin\",\n          height: \"10vmin\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        ref: this.colorInputRef,\n        style: {\n          height: \"40px\",\n          width: \"40px\",\n          border: \"none\"\n        },\n        value: this.props.color,\n        type: \"color\",\n        onChange: function onChange(e) {\n          _this2.changeColor(colorTo32Uint(e.target.value));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n  return AppWrapper;\n}(React.Component);\nvar MapCanvas = /*#__PURE__*/function (_React$Component2) {\n  _inherits(MapCanvas, _React$Component2);\n  function MapCanvas(props) {\n    var _this3;\n    _classCallCheck(this, MapCanvas);\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(MapCanvas).call(this, props));\n    _this3.drawLines = [];\n    _this3.lastdraw = 0;\n    _this3.scale = STARTSCALE;\n    _this3.tempscale = _this3.scale;\n    _this3.cellpos = {\n      i: 0,\n      j: 0,\n      k: 0,\n      l: 0\n    };\n    _this3.map_grid = null;\n    _this3.canvasRef = createRef();\n    _this3.mapoffset = new Vector2D(0, 0);\n    _this3.celloffset = new Vector2D(0, 0);\n    _this3.currentcell = new Vector2D(0, 0);\n    _this3.startpoint = new Vector2D(0, 0);\n    _this3.cursorcurrent = new Vector2D(0, 0);\n    _this3.lmousedown = false;\n    _this3.rmousedown = false;\n    _this3.mousepos = new Vector2D(0, 0);\n    _this3.canvas = null;\n    _this3.replacecanvas = null;\n    _this3.is_updating = false;\n    _this3.drawcache = [];\n    return _this3;\n  }\n\n  //Called after element's initialisation\n  _createClass(MapCanvas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n      this.canvas = this.canvasRef.current;\n      this.replacecanvas = document.createElement('canvas');\n      this.map_grid = new Map();\n      this.resizeCanvas(this.canvas);\n      window.addEventListener('resize', function () {\n        return _this4.resizeCanvas(_this4.canvas);\n      });\n      setTimeout(this.updateCanvas(), UPDATEPERIOD);\n    }\n  }, {\n    key: \"getCursorPosition\",\n    value: function getCursorPosition(event, canvas) {\n      var rect = canvas.getBoundingClientRect();\n      var x = event.clientX - rect.left;\n      var y = event.clientY - rect.top;\n      var pos = new Vector2D(x / (this.tempscale / this.scale), y / (this.tempscale / this.scale));\n      this.mousepos = pos;\n      return pos;\n    }\n  }, {\n    key: \"getCurrentCell\",\n    value: function getCurrentCell() {\n      var x = Math.floor((this.cursorcurrent.x - this.mapoffset.x * this.scale) / this.scale);\n      var y = Math.floor((this.cursorcurrent.y - this.mapoffset.y * this.scale) / this.scale);\n      var pos = new Vector2D(x, y);\n      return pos;\n    }\n  }, {\n    key: \"moveMap\",\n    value: function moveMap(start, end) {\n      var x = (end.x - start.x) / this.scale;\n      var y = (end.y - start.y) / this.scale;\n      this.mapoffset.transform(x, y);\n      this.celloffset.setTo(Math.floor(this.mapoffset.x), Math.floor(this.mapoffset.y));\n      this.props.changeOffsetLoc(this.celloffset);\n    }\n  }, {\n    key: \"drawMap\",\n    value: function drawMap(canvas, startpoint, isupdate) {\n      var _this5 = this;\n      var start = Date.now();\n      if (this.map_grid.image === null || this.map_grid.numchunks === null) return;\n      var cellsize = this.map_grid.cellsize;\n      var x, y;\n      var doFill = function doFill(i, j, k, l) {\n        x = ((i + startpoint.x) * CHUNKSIZE + k) * cellsize + mapoffset_x;\n        y = ((j + startpoint.y) * CHUNKSIZE + l) * cellsize + mapoffset_y;\n        ctx.fillRect(x, y, cellsize, cellsize);\n        // console.log(x,y,cellapparentsize);\n      };\n\n      var length = this.map_grid.numchunks.x * CHUNKSIZE * cellsize;\n      if (this.map_grid.image.byteLength * 4 % length !== 0) return;\n      var imageData = new ImageData(new Uint8ClampedArray(this.map_grid.image), length);\n      var ctx = canvas.getContext(\"2d\");\n      ctx.imageSmoothingEnabled = false;\n      var rctx = this.replacecanvas.getContext(\"2d\");\n      rctx.clearRect(0, 0, this.replacecanvas.width, this.replacecanvas.height);\n      rctx.putImageData(imageData, 0, 0);\n      var _canvas$getBoundingCl2 = canvas.getBoundingClientRect(),\n        width = _canvas$getBoundingCl2.width,\n        height = _canvas$getBoundingCl2.height;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      var mapoffset_x = Math.floor(this.mapoffset.x * cellsize);\n      var mapoffset_y = Math.floor(this.mapoffset.y * cellsize);\n      var offset_x = startpoint.x * CHUNKSIZE * cellsize + mapoffset_x;\n      var offset_y = startpoint.y * CHUNKSIZE * cellsize + mapoffset_y;\n      {\n        ctx.drawImage(this.replacecanvas, offset_x, offset_y);\n        if (this.props.getDebugMode()) {\n          ctx.beginPath();\n          for (var i = 0; i < this.map_grid.numchunks.x; i++) {\n            for (var j = 0; j < this.map_grid.numchunks.y; j++) {\n              x = (i + startpoint.x) * CHUNKSIZE * cellsize + mapoffset_x;\n              y = (j + startpoint.y) * CHUNKSIZE * cellsize + mapoffset_y;\n              ctx.fillStyle = \"#000000\";\n              ctx.lineWidth = 0.01 * Math.floor(this.scale);\n              ctx.moveTo(x, 0);\n              ctx.lineTo(x, height);\n              // ctx.stroke();\n              ctx.moveTo(0, y);\n              ctx.lineTo(width, y);\n            }\n          }\n          ctx.stroke();\n        }\n        this.drawcache.forEach(function (linearray) {\n          linearray.forEach(function (line) {\n            plotLine(line.p1, line.p2, line.offset, function (x, y) {\n              var currentpos = new Vector2D(x - line.offset.x, y - line.offset.y);\n              var _this5$map_grid$getCh = _this5.map_grid.getChunkPosOffset(currentpos, _this5.startpoint),\n                i = _this5$map_grid$getCh.i,\n                j = _this5$map_grid$getCh.j,\n                k = _this5$map_grid$getCh.k,\n                l = _this5$map_grid$getCh.l;\n              ctx.fillStyle = colorToString(line.blockid);\n              doFill(i, j, k, l);\n            });\n          });\n        });\n        if (this.props.toolmode === DRAWTOOL) {\n          // doFill(this.cellpos);\n          ctx.fillStyle = colorToString(this.props.getColorSelected()) + \"ff\";\n          doFill(this.cellpos.i, this.cellpos.j, this.cellpos.k, this.cellpos.l);\n        }\n      }\n      ;\n      this.props.changeDrawTime(Date.now() - start);\n    }\n  }, {\n    key: \"updateCanvas\",\n    value: function () {\n      var _updateCanvas = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _this6 = this;\n        var start, tempupdatescale, _this$map_grid$getVal, startpoint, numchunks, linestosend;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              start = Date.now(); // time testing\n              tempupdatescale = Math.floor(this.tempscale);\n              _this$map_grid$getVal = this.map_grid.getValues(this.canvas, this.mapoffset.multipliedby(tempupdatescale), tempupdatescale), startpoint = _this$map_grid$getVal.startpoint, numchunks = _this$map_grid$getVal.numchunks;\n              linestosend = this.drawLines;\n              this.drawLines = [];\n              this.map_grid.setMatrix(numchunks, startpoint, linestosend, tempupdatescale, this.props.changeTranscodeTime).then(function () {\n                _this6.replacecanvas.width = tempupdatescale * numchunks.x * CHUNKSIZE;\n                _this6.replacecanvas.height = tempupdatescale * numchunks.y * CHUNKSIZE;\n                _this6.canvas.getContext('2d').resetTransform();\n                _this6.resizeCanvas(_this6.canvas);\n                _this6.canvasscale(_this6.canvas, _this6.tempscale / tempupdatescale, _this6.tempscale / tempupdatescale);\n                _this6.scale = Math.floor(_this6.tempscale);\n                _this6.startpoint = startpoint;\n                _this6.drawMap(_this6.canvas, startpoint, true);\n                _this6.props.changeUpdateTime(Date.now() - start);\n              }).then(function () {\n                // this.drawcache.forEach((draw) => {draw()});\n                _this6.drawcache.push([]);\n                if (_this6.drawcache.length > 4) {\n                  _this6.drawcache.shift();\n                }\n              });\n              setTimeout(function () {\n                _this6.updateCanvas();\n              }, UPDATEPERIOD);\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function updateCanvas() {\n        return _updateCanvas.apply(this, arguments);\n      }\n      return updateCanvas;\n    }() // stolen code lmao\n  }, {\n    key: \"resizeCanvas\",\n    value: function resizeCanvas(canvas) {\n      var _canvas$getBoundingCl3 = canvas.getBoundingClientRect(),\n        width = _canvas$getBoundingCl3.width,\n        height = _canvas$getBoundingCl3.height;\n      if (canvas.width !== width || canvas.height !== height) {\n        var _window = window,\n          _window$devicePixelRa = _window.devicePixelRatio,\n          ratio = _window$devicePixelRa === void 0 ? 1 : _window$devicePixelRa;\n        var context = canvas.getContext('2d');\n        canvas.width = 1 * width * ratio;\n        canvas.height = 1 * height * ratio;\n        context.scale(ratio, ratio);\n        console.log(ratio);\n        //   canvas.style.width = `${width}px`;\n        //   canvas.style.height = `${height}px`;\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"canvasscale\",\n    value: function canvasscale(canvas, scalex, scaley) {\n      // let mousepos = this.mousepos;\n      var ctx = canvas.getContext('2d');\n      // const transx = mousepos.x;\n      // const transy = mousepos.y;\n      // ctx.translate(transx, transy);\n      ctx.scale(scalex, scaley);\n      // ctx.translate(-transx, -transy);\n    } // drawCellAtMouse(x,y) {\n    //     const currentpos = new Vector2D(x-this.celloffset.x,y-this.celloffset.y);\n    //     let {i, j, k, l} = this.map_grid.getChunkPosOffset(currentpos, this.startpoint);\n    //     let dataindex = this.map_grid.getDataIndex(i,j,k,l);\n    //     if (dataindex < this.map_grid.image.byteLength/4) this.map_grid.addCell(dataindex, this.props.getColorSelected());\n    // }\n  }, {\n    key: \"moveCursor\",\n    value: function moveCursor(event) {\n      var update = false;\n      var newcursorcurrent = this.getCursorPosition(event, this.canvas);\n      if (this.rmousedown) {\n        this.moveMap(this.cursorcurrent, newcursorcurrent);\n        update = true;\n      }\n      this.cursorcurrent = newcursorcurrent;\n      var newcurrentcell = this.getCurrentCell();\n      // Drawing line and updating stats\n      if (!this.currentcell.isEqualTo(newcurrentcell)) {\n        if (this.lmousedown) this.drawLine(this.currentcell, newcurrentcell);\n        this.currentcell = newcurrentcell;\n        this.cellpos = this.map_grid.getChunkPosOffset(this.currentcell, this.startpoint);\n        this.props.changeCursorLoc(this.currentcell);\n        this.props.changeChunkLoc(this.cellpos.i + this.startpoint.x, this.cellpos.j + this.startpoint.y);\n        update = true;\n      }\n      return update;\n    }\n  }, {\n    key: \"drawLine\",\n    value: function drawLine(p1, p2) {\n      var _this7 = this;\n      // let thisdraw = ()=>{plotLine(p1, p2, this.celloffset, (x,y)=>this.drawCellAtMouse(x,y))};\n      var thisdraw = function thisdraw() {\n        var pixels = [];\n        plotLine(p1, p2, _this7.celloffset, function (x, y) {\n          pixels.push({\n            x: x,\n            y: y,\n            blockid: _this7.props.getColorSelected()\n          });\n        });\n        return pixels;\n      };\n      var drawobj = {\n        p1: p1,\n        p2: p2,\n        offset: this.celloffset,\n        blockid: this.props.getColorSelected()\n      };\n      this.drawcache[this.drawcache.length - 1].push(drawobj);\n      this.drawLines.push(drawobj);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n      var getCursor = function getCursor() {\n        switch (_this8.props.toolmode) {\n          case EYEDROPTOOL:\n            return \"crosshair\";\n          case MOVETOOL:\n            return \"move\";\n          default:\n            return \"default\";\n        }\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"canvas\", {\n        ref: this.canvasRef,\n        className: \"map-canvas primary\",\n        style: {\n          cursor: getCursor()\n        },\n        onContextMenu: function onContextMenu(e) {\n          e.preventDefault();\n        },\n        onMouseDown: function onMouseDown(e) {\n          e.preventDefault();\n          if (e.button === 0) {\n            switch (_this8.props.toolmode) {\n              case EYEDROPTOOL:\n                console.log(\"eyedroptool used\");\n                var _this8$map_grid$getCh = _this8.map_grid.getChunkPosOffset(_this8.currentcell, _this8.startpoint),\n                  i = _this8$map_grid$getCh.i,\n                  j = _this8$map_grid$getCh.j,\n                  k = _this8$map_grid$getCh.k,\n                  l = _this8$map_grid$getCh.l;\n                var dataindex = _this8.map_grid.getDataIndex(i, j, k, l);\n                _this8.props.changeColor(_this8.map_grid.dataview[dataindex]);\n                // this.props.changeToolMode(DRAWTOOL);\n                break;\n              case MOVETOOL:\n                _this8.rmousedown = true;\n                break;\n              default:\n                _this8.lmousedown = true;\n                _this8.drawLine(_this8.currentcell, _this8.currentcell);\n                _this8.drawMap(_this8.canvas, _this8.startpoint);\n                break;\n            }\n          } else if (e.button === 2) {\n            _this8.rmousedown = true;\n          }\n        },\n        onMouseUp: function onMouseUp(e) {\n          _this8.lmousedown = false;\n          _this8.rmousedown = false;\n          _this8.drawMap(_this8.canvas, _this8.startpoint);\n        },\n        onMouseMove: function onMouseMove(e) {\n          if (_this8.moveCursor(e)) _this8.drawMap(_this8.canvas, _this8.startpoint);\n        },\n        onMouseLeave: function onMouseLeave(e) {\n          _this8.moveCursor(e);\n          _this8.lmousedown = false;\n          _this8.rmousedown = false;\n          _this8.drawMap(_this8.canvas, _this8.startpoint);\n        },\n        onWheel: function onWheel(e) {\n          var newscale = _this8.tempscale - Math.floor(e.deltaY) / 1000;\n          // console.log(this.scale, this.tempscale);\n          var oldtempscale = _this8.tempscale;\n          if (newscale > LOWESTSCALE) _this8.tempscale = newscale;else _this8.tempscale = LOWESTSCALE;\n          var oldscale = _this8.scale;\n          console.log(_this8.tempscale);\n          var scalenum = _this8.tempscale / oldtempscale;\n          _this8.canvasscale(_this8.canvas, scalenum, scalenum);\n          // this.scale = Math.floor(this.tempscale);\n\n          _this8.drawMap(_this8.canvas, _this8.startpoint);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n  return MapCanvas;\n}(React.Component); // needs to be fixed up - maybe add useEffect()\nvar Palette = /*#__PURE__*/function (_React$Component3) {\n  _inherits(Palette, _React$Component3);\n  function Palette(props) {\n    var _this9;\n    _classCallCheck(this, Palette);\n    _this9 = _possibleConstructorReturn(this, _getPrototypeOf(Palette).call(this, props));\n    _this9.handleChange = function (e) {\n      _this9.props.changeColor(e.target.value);\n    };\n    return _this9;\n  }\n  _createClass(Palette, [{\n    key: \"render\",\n    value: function render() {\n      var _this10 = this;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"palette primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 13\n        }\n      }, colors.map(function (color, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          style: {\n            backgroundColor: \"\".concat(color)\n          },\n          className: \"blockbutton\" + (_this10.props.isSelected(color) ? \"selected\" : \"\"),\n          onClick: function onClick() {\n            _this10.props.changeColor(colorTo32Uint(color));\n          }\n          //onClick={() => {console.log(button.blockid)}}\n          ,\n          __self: _this10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 918,\n            columnNumber: 25\n          }\n        });\n      }));\n    }\n  }]);\n  return Palette;\n}(React.Component);\nfunction App() {\n  return /*#__PURE__*/React.createElement(AppWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 5\n    }\n  });\n}\nexport default App;","map":{"version":3,"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","React","createRef","UPDATEPERIOD","CHUNKSIZE","LOWESTSCALE","STARTSCALE","DRAWTOOL","EYEDROPTOOL","MOVETOOL","colors","plotLineLow","x0","y0","x1","y1","drawFunc","dx","dy","yi","D","y","x","plotLineHigh","xi","plotLine","p1","p2","offset","Math","abs","colorTo32Uint","colorstring","parseInt","substring","colorToString","colornum","toString","padStart","Vector2D","_classCallCheck","_createClass","transform","setTo","isEqualTo","othervector","notEqualTo","positive","multipliedby","number","transformedby","Map","data","image","dataview","imageview","numchunks","cellsize","getValues","canvas","scale","chunkpixels","startpoint","floor","_canvas$getBoundingCl","getBoundingClientRect","width","height","ceil","_setMatrix","_asyncToGenerator","_callee","dimn","start","lines","changeTranscodeTime","coords","map_grid","j","coordsobj","_callee$","_context","fetch","headers","body","JSON","stringify","arrayBuffer","chunkbuffer","current","Date","now","Uint32Array","ArrayBuffer","byteLength","Uint32data","k","l","bmp_index","alex_index","getDataIndex","color","finalcolor","a","b","relative_index","setMatrix","_x","_x2","_x3","_x4","_x5","apply","arguments","getChunkPosOffset","currentcell","AppWrapper","_React$Component","_inherits","props","_this","_possibleConstructorReturn","_getPrototypeOf","tool_mode","debug_mode","show_stats","color_selected","stroke_radius","update","time","tot_time","num_updates","transcode","draw","cursorx","cursory","offsetx","offsety","chunkx","chunky","cxstart","cystart","cxend","cyend","strokecanvas","colorinput","strokecanvasRef","colorInputRef","getColorSelected","getDebugMode","getToolMode","changeToolMode","change_to","setState","changeColor","drawStrokeCanvas","isSelected","out_num","changeUpdateTime","new_time","changeDrawTime","changeCursorLoc","vector","changeOffsetLoc","changeChunkLoc","componentDidMount","document","style","overflow","size","ctx","getContext","clearRect","fillStyle","fillRect","mapDownload","filename","x2","y2","response","get","split","blob","pngblob","url","window","URL","createObjectURL","link","createElement","href","setAttribute","appendChild","click","parentNode","removeChild","render","_this2","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","MapCanvas","toolmode","Palette","position","right","round","onClick","checked","onChange","defaultValue","e","target","src","alt","ref","border","Component","_React$Component2","_this3","drawLines","lastdraw","tempscale","cellpos","canvasRef","mapoffset","celloffset","cursorcurrent","lmousedown","rmousedown","mousepos","replacecanvas","is_updating","drawcache","_this4","resizeCanvas","addEventListener","setTimeout","updateCanvas","getCursorPosition","event","rect","clientX","left","clientY","top","pos","getCurrentCell","moveMap","end","drawMap","isupdate","_this5","doFill","mapoffset_x","mapoffset_y","imageData","ImageData","Uint8ClampedArray","imageSmoothingEnabled","rctx","putImageData","_canvas$getBoundingCl2","offset_x","offset_y","drawImage","beginPath","lineWidth","moveTo","lineTo","stroke","linearray","line","currentpos","_this5$map_grid$getCh","blockid","_updateCanvas","_callee2","_this6","tempupdatescale","_this$map_grid$getVal","linestosend","_callee2$","_context2","resetTransform","canvasscale","shift","_canvas$getBoundingCl3","_window","_window$devicePixelRa","devicePixelRatio","ratio","console","log","scalex","scaley","moveCursor","newcursorcurrent","newcurrentcell","drawLine","_this7","thisdraw","pixels","drawobj","_this8","getCursor","cursor","onContextMenu","preventDefault","onMouseDown","button","_this8$map_grid$getCh","dataindex","onMouseUp","onMouseMove","onMouseLeave","onWheel","newscale","deltaY","oldtempscale","oldscale","scalenum","_React$Component3","_this9","handleChange","_this10","map","index","backgroundColor","concat","App"],"sources":["/Users/alex/Programming/web_development/map_dev_server/client/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { createRef } from 'react';\n\n\nconst UPDATEPERIOD = 1000;\n\nconst CHUNKSIZE = 16;\n\nconst LOWESTSCALE = 3;\n\nconst STARTSCALE = 16;\n\nconst DRAWTOOL = 0;\nconst EYEDROPTOOL = 1;\nconst MOVETOOL = 2;\n  \n// const blocks = [\n//     {\n//         blockid: '0',\n//         blockname: '1',\n//         imagesrc: '#ffffff'\n//     },\n//     {\n//         blockid: '1',\n//         blockname: '2',\n//         imagesrc: '#d1e7dc'\n//     },\n//     {\n//         blockid: '2',\n//         blockname: '3',\n//         imagesrc: '#c4d4e1'\n//     },\n//     {\n//         blockid: '3',\n//         blockname: '4',\n//         imagesrc: '#bcb5d3'\n//     },\n//     {\n//         blockid: '4',\n//         blockname: '5',\n//         imagesrc: '#f5dbe2'\n//     },\n//     {\n//         blockid: '5',\n//         blockname: '6',\n//         imagesrc: '#eeb6c9'\n//     },\n//     {\n//         blockid: '6',\n//         blockname: '7',\n//         imagesrc: '#c49abf'\n//     },\n//     {\n//         blockid: '7',\n//         blockname: '8',\n//         imagesrc: '#bada55'\n//     },\n//     {\n//         blockid: '8',\n//         blockname: '9',\n//         imagesrc: '#ffd700'\n//     },\n//     {\n//         blockid: '9',\n//         blockname: '10',\n//         imagesrc: '#f47b79'\n//     },\n//     {\n//         blockid: 'a',\n//         blockname: '11',\n//         imagesrc: '#c6e2d4'\n//     },\n//     {\n//         blockid: 'b',\n//         blockname: '12',\n//         imagesrc: '#b6d3c2'\n//     },\n//     {\n//         blockid: 'c',\n//         blockname: '13',\n//         imagesrc: '#e0b1cb'\n//     },\n//     {\n//         blockid: 'd',\n//         blockname: '14',\n//         imagesrc: '#d0a7b7'\n//     },\n//     {\n//         blockid: 'e',\n//         blockname: '15',\n//         imagesrc: '#f3d1d3'\n//     },\n//     {\n//         blockid: 'f',\n//         blockname: '16',\n//         imagesrc: '#e9b8c8'\n//     }\n// ];\n\nconst colors = [\n    \"#000000\", // Black\n    \"#FFFFFF\", // White\n    \"#FF0000\", // Red\n    \"#00FF00\", // Green\n    \"#0000FF\", // Blue\n    \"#FFFF00\", // Yellow\n    \"#FF00FF\", // Magenta\n    \"#00FFFF\", // Cyan\n    \"#800000\", // Maroon\n    \"#008000\", // Olive\n    \"#000080\", // Navy\n    \"#808000\", // Olive Drab\n    \"#800080\", // Purple\n    \"#008080\", // Teal\n    \"#808080\", // Gray\n    \"#C0C0C0\", // Silver\n    \"#FFC0CB\", // Pink\n    \"#FFA07A\", // Light Salmon\n    \"#FF7F50\", // Coral\n    \"#FF6347\", // Tomato\n    \"#FF4500\", // Orange Red\n    \"#FF8C00\", // Dark Orange\n    \"#FFD700\", // Gold\n    \"#FFFFE0\", // Light Yellow\n    \"#EEE8AA\", // Pale Goldenrod\n    \"#ADFF2F\", // Green Yellow\n    \"#32CD32\", // Lime Green\n    \"#00FA9A\", // Medium Spring Green\n    \"#00CED1\", // Dark Turquoise\n    \"#6A5ACD\", // Slate Blue\n    \"#7B68EE\", // Medium Slate Blue\n    \"#FF69B4\", // Hot Pink\n    \"#8B4513\" // Saddle Brown\n  ];\n  \n\n\nfunction plotLineLow(x0, y0, x1, y1, drawFunc) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    let yi = 1;\n    if (dy < 0) {\n        yi = -1;\n        dy = -dy;\n    }\n    let D = (2 * dy) - dx;\n    let y = y0;\n\n    for (let x = x0;x<x1+1;x++) {\n        drawFunc(x, y);\n        if (D > 0) {\n            y = y + yi;\n            D = D + (2 * (dy - dx));\n        } else {\n            D = D + 2*dy;\n        }\n    }\n}\nfunction plotLineHigh(x0, y0, x1, y1, drawFunc) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    let xi = 1;\n    if (dx < 0) {\n        xi = -1;\n        dx = -dx;\n    }\n    let D = (2 * dx) - dy;\n    let x = x0;\n\n    for (let y = y0;y<y1+1;y++) {\n        drawFunc(x, y);\n        if (D > 0) {\n            x = x + xi;\n            D = D + (2 * (dx - dy));\n        } else {\n            D = D + 2*dx;\n        }\n    }\n}\n\nfunction plotLine(p1, p2, offset, drawFunc) {\n    \n    let x0 = p1.x+offset.x;\n    let y0 = p1.y+offset.y;\n    \n    let x1 = p2.x+offset.x;\n    let y1 = p2.y+offset.y;\n\n    if (x0===x1 && y0===y1) drawFunc(x0,y0);\n\n\n    if (Math.abs(y1 - y0) < Math.abs(x1 - x0)) {\n        if (x0 > x1) plotLineLow(x1, y1, x0, y0, drawFunc);\n        else plotLineLow(x0, y0, x1, y1, drawFunc);\n    }\n    else {\n        if (y0 > y1) plotLineHigh(x1, y1, x0, y0, drawFunc);\n        else plotLineHigh(x0, y0, x1, y1, drawFunc);\n    }\n}\n\n\nfunction colorTo32Uint(colorstring) {\n    return parseInt(colorstring.substring(1), 16);\n}\nfunction colorToString(colornum) {\n    return \"#\" + (colornum & 0x00FFFFFF).toString(16).padStart(6, '0');\n}\n\nclass Vector2D {\n    constructor(x,y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    transform(x,y) {\n        this.x += x;\n        this.y += y;\n    }\n\n    setTo(x,y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isEqualTo(othervector) {\n        return (this.x===othervector.x && this.y===othervector.y);\n    }\n    notEqualTo(othervector) {\n        return (this.x!==othervector.x || this.y!==othervector.y);\n    }\n\n    positive() {\n        return (this.x >= 0 && this.y >=0);\n    }\n\n    multipliedby(number) {\n        return new Vector2D(this.x*number,this.y*number);\n    }\n    transformedby(x,y) {\n        return new Vector2D(this.x+x,this.y+y);\n    }\n}\n\n\nclass Map {\n    constructor() {\n        // this.canvasdimensions = new Vector2D(w,h); // establishing at start means no resizing canvas element\n        //the data returned by the server\n        this.data = null;\n        //the data formatted as an image bitmap\n        this.image = null;\n\n        this.dataview = null;\n        this.imageview = null;\n\n        this.numchunks = null;\n        this.cellsize = 2;\n    }\n\n    getValues(canvas, offset, scale) {\n        let chunkpixels = CHUNKSIZE*scale;\n\n        let numchunks = new Vector2D(0,0);\n        let startpoint = new Vector2D(0,0);\n\n        startpoint.x = (offset.x === 0) ? 0 : Math.floor((-1*offset.x)/chunkpixels);\n        startpoint.y = (offset.y === 0) ? 0 : Math.floor((-1*offset.y)/chunkpixels);\n\n        const { width, height } = canvas.getBoundingClientRect();\n\n        numchunks.x = Math.ceil(width/chunkpixels)+1; // bit cheaty - should probs optimise\n        numchunks.y = Math.ceil(height/chunkpixels)+1;\n\n        return {startpoint, numchunks};\n    }\n\n    async setMatrix(dimn, start, lines, cellsize, changeTranscodeTime) {\n\n        let coords = [];\n        let map_grid = this;\n\n        for (let i=0;i<dimn.x;i++) {\n            for (let j=0;j<dimn.y;j++) {\n                let coordsobj = { x: start.x+i, y: start.y+j };\n                coords.push(coordsobj);    \n            }\n        }\n        return new Promise(function(resolve, reject) {\n            // fetch(`${window.location.protocol + '//' + window.location.hostname}:2999/getchunks`,{\n            fetch(`/getchunks`,{\n                method: 'POST',\n                headers: {'Accept': 'application/octet-stream', 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*'},\n                body: JSON.stringify({coords:coords, lines:lines})\n            }).then((data)=>{\n                return data.arrayBuffer();\n            }).then((chunkbuffer) => {\n                \n                map_grid.numchunks = dimn;\n                let current = Date.now();\n\n                // const cellsize = 10;\n                map_grid.data = chunkbuffer;\n                map_grid.dataview = new Uint32Array(map_grid.data);\n\n                map_grid.image = new ArrayBuffer(chunkbuffer.byteLength*cellsize*cellsize);\n                map_grid.imageview = new Uint32Array(map_grid.image);\n\n                let Uint32data = new Uint32Array(chunkbuffer);\n                \n                for (let i=0;i<map_grid.numchunks.x;i++) {\n                    for (let j=0;j<map_grid.numchunks.y;j++) {\n                        for (let k=0;k<CHUNKSIZE;k++) {\n                            for (let l=0;l<CHUNKSIZE;l++) {\n                                let bmp_index = i*CHUNKSIZE*cellsize + j*map_grid.numchunks.x*(CHUNKSIZE*CHUNKSIZE)*cellsize*cellsize + k*cellsize + l*map_grid.numchunks.x*CHUNKSIZE*cellsize*cellsize;\n                                let alex_index = map_grid.getDataIndex(i,j,k,l);\n                                let color = Uint32data[alex_index];\n                                let finalcolor = ((color << 16)&0x00FF0000) | ((color)&0xFF00FF00) | ((color>>16)&0x000000FF);\n\n                                for (let a=0;a<cellsize;a++) {\n                                    for (let b=0;b<cellsize;b++) {\n                                        let relative_index = bmp_index + a + b*map_grid.numchunks.x*CHUNKSIZE*cellsize;\n                                        map_grid.imageview[relative_index] = finalcolor;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                map_grid.cellsize = cellsize;\n                changeTranscodeTime(Date.now()-current);\n                resolve();\n            });\n        });\n    }\n\n    getChunkPosOffset(currentcell, startpoint) {\n        const i = Math.floor((currentcell.x/CHUNKSIZE))-startpoint.x;\n        const k = currentcell.x - (i+startpoint.x)*CHUNKSIZE;\n\n        const j = Math.floor((currentcell.y/CHUNKSIZE))-startpoint.y;\n        const l = currentcell.y - (j+startpoint.y)*CHUNKSIZE;\n\n\n        return {i, j, k, l};\n    }\n    getDataIndex(i,j,k,l) {\n        return i*(this.numchunks.y)*(CHUNKSIZE*CHUNKSIZE)+j*(CHUNKSIZE*CHUNKSIZE)+k*CHUNKSIZE+l;\n    }\n}\n\n\nclass AppWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tool_mode: MOVETOOL,\n            debug_mode: false,\n            show_stats: true,\n            color_selected: 1672153, \n            stroke_radius:1,\n            update: {\n                time: 0,\n                tot_time: 0,\n                num_updates: 1\n            },\n            transcode: {\n                time: 0,\n                tot_time: 0,\n                num_updates: 1\n            },\n            draw: {\n                time: 0,\n                tot_time: 0,\n                num_updates: 1\n            },\n            cursorx: 0,\n            cursory: 0,\n            offsetx: 0,\n            offsety: 0,\n            chunkx: 0,\n            chunky: 0,\n\n            cxstart:0,\n            cystart:0,\n            cxend:0,\n            cyend:0\n        };\n\n        this.strokecanvas = null;\n        this.colorinput = null;\n\n        this.strokecanvasRef = createRef();\n        this.colorInputRef = createRef();\n\n        this.getColorSelected = () => {return this.state.color_selected};\n        this.getDebugMode = () => {return this.state.debug_mode};\n        this.getToolMode = () => {return this.state.tool_mode};\n\n        this.changeToolMode = (change_to) => {\n            this.setState({tool_mode: change_to});\n        }\n\n        this.changeColor = (color) => {\n            this.setState({color_selected: color});\n            this.changeToolMode(DRAWTOOL);\n            this.colorinput.value = colorToString(color);\n            this.drawStrokeCanvas(color);\n        };\n        this.isSelected = (color) => {\n            if (typeof color === 'string') {\n                let out_num = colorTo32Uint(color);\n                return (out_num===this.state.color_selected);\n            }\n            else if (typeof color === 'number') {\n                return (color===this.state.color_selected);\n            }\n        };\n\n        this.changeUpdateTime = (new_time) => {\n            this.setState({update:{\n                time: new_time, \n                tot_time: this.state.update.tot_time+new_time, \n                num_updates: this.state.update.num_updates+1\n            }});\n        }\n        this.changeTranscodeTime = (new_time) => {\n            this.setState({transcode:{\n                time: new_time, \n                tot_time: this.state.transcode.tot_time+new_time, \n                num_updates: this.state.transcode.num_updates+1\n            }});\n        }\n        this.changeDrawTime = (new_time) => {\n            this.setState({draw:{\n                time: new_time, \n                tot_time: this.state.draw.tot_time+new_time, \n                num_updates: this.state.draw.num_updates+1\n            }});\n        }\n        this.changeCursorLoc = (vector) => {\n            this.setState({cursorx: vector.x,cursory: vector.y});\n        }\n        this.changeOffsetLoc = (vector) => {\n            this.setState({offsetx: vector.x,offsety: vector.y});\n        }\n        this.changeChunkLoc = (x,y) => {\n            this.setState({chunkx: x,chunky: y});\n        }\n    }\n\n    componentDidMount() {\n        document.body.style.overflow = \"hidden\"; // stops user from scrolling the page\n        this.strokecanvas = this.strokecanvasRef.current;\n        this.colorinput = this.colorInputRef.current;\n        this.drawStrokeCanvas();\n    }\n\n    drawStrokeCanvas(color) {\n        const cellsize = 50;\n        const size = (this.state.stroke_radius+2)*cellsize;\n        this.strokecanvas.width = size;\n        this.strokecanvas.height = size;\n\n        const ctx = this.strokecanvas.getContext('2d');\n        ctx.clearRect(0,0,this.strokecanvas.width,this.strokecanvas.height);\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fillRect(0,0,this.strokecanvas.width,this.strokecanvas.height);\n\n        ctx.fillStyle = colorToString(color);\n        ctx.fillRect(cellsize, cellsize, cellsize,cellsize);\n    }\n\n    mapDownload() {\n        let filename;\n        let coordsobj = {x1:this.state.cxstart,y1:this.state.cystart,x2:this.state.cxend,y2:this.state.cyend};\n        if (coordsobj.x1===coordsobj.x2 || coordsobj.y1===coordsobj.y2 || coordsobj.x1>coordsobj.x2 || coordsobj.y1>coordsobj.y2) return;\n\n        // fetch(`${window.location.protocol + '//' + window.location.hostname}:2999/getimage`,{\n        fetch(`/getimage`,{\n            method: 'POST',\n            headers: {'Accept': 'application/octet-stream', 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*'},\n            body: JSON.stringify(coordsobj)\n        }).then((response) => {\n            filename = response.headers.get('Content-Disposition').split('\"')[1];\n            return response.blob()\n        })\n        .then((pngblob) => {\n            const url = window.URL.createObjectURL(pngblob);\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download',filename);\n            document.body.appendChild(link);\n            link.click();\n            link.parentNode.removeChild(link);\n        });\n    }\n\n    render() {\n        return (\n            <div className='App-wrapper'>\n                <MapCanvas \n                    toolmode={this.state.tool_mode}\n                    getToolMode={this.getToolMode}\n                    changeToolMode={this.changeToolMode}\n                    getDebugMode={this.getDebugMode}\n                    changeUpdateTime={this.changeUpdateTime}\n                    changeTranscodeTime={this.changeTranscodeTime}\n                    changeDrawTime={this.changeDrawTime}\n                    getColorSelected={this.getColorSelected}\n                    changeCursorLoc={this.changeCursorLoc}\n                    changeOffsetLoc={this.changeOffsetLoc}\n                    changeChunkLoc={this.changeChunkLoc}\n                    changeColor={this.changeColor}\n                />\n                <Palette isSelected={this.isSelected} changeColor={this.changeColor} color={this.state.color_selected}/>\n                <div className='drawer primary'>\n                    {(this.state.show_stats)?(<div style={{position: `absolute`,right:`0.8vw`}}>\n                        ({this.state.update.time}ms, avg: {Math.round(this.state.update.tot_time/this.state.update.num_updates)}ms, {this.state.update.num_updates} updates)\n                        <br/>({this.state.transcode.time}ms, avg: {Math.round(this.state.transcode.tot_time/this.state.transcode.num_updates)}ms, {this.state.transcode.num_updates} transcodes);\n                        <br/>({this.state.draw.time}ms, avg: {Math.round(this.state.draw.tot_time/this.state.draw.num_updates)}ms, {this.state.draw.num_updates} draws)\n                        <br/>Cursor: ({this.state.cursorx},{this.state.cursory})\n                        <br/>Offset: ({this.state.offsetx},{this.state.offsety})\n                        <br/>Chunk: ({this.state.chunkx},{this.state.chunky})\n                    </div>):null}\n\n                    <div\n                        className={`toolbutton` + (this.getToolMode()===DRAWTOOL ? \"selected\" : \"\")+ ` blockbutton` + (this.getToolMode()===DRAWTOOL ? \"selected\" : \"\")}\n                        onClick={() => {this.changeToolMode(DRAWTOOL)}}\n                    >draw</div>\n                    <div\n                        className={`toolbutton` + (this.getToolMode()===EYEDROPTOOL ? \"selected\" : \"\")+ ` blockbutton` + (this.getToolMode()===EYEDROPTOOL ? \"selected\" : \"\")}\n                        onClick={() => {this.changeToolMode(EYEDROPTOOL)}}\n                    >eyedrop</div>\n                    <div\n                        className={`toolbutton` + (this.getToolMode()===MOVETOOL ? \"selected\" : \"\")+ ` blockbutton` + (this.getToolMode()===MOVETOOL ? \"selected\" : \"\")}\n                        onClick={() => {this.changeToolMode(MOVETOOL)}}\n                    >move</div>\n                    \n\n                    <input checked={this.state.debug_mode} type={\"checkbox\"} onChange={()=>{this.setState({debug_mode:!this.state.debug_mode})}}></input> Debug Mode&ensp;\n                    <input checked={this.state.show_stats} type={\"checkbox\"} onChange={()=>{this.setState({show_stats:!this.state.show_stats})}}></input> Stats\n                    <table\n                        className={`download-wrapper`}\n                        // onClick={() => this.fileDownload()}\n                    ><tbody>\n                        <tr>\n                            <td>\n                                <p>from:&nbsp;</p><input defaultValue={\"0\"} type={\"number\"} style={{width:\"35px\"}} onChange={(e)=>this.setState({cxstart:parseInt(e.target.value)})}></input>\n                                <input defaultValue={\"0\"} type={\"number\"} style={{width:\"35px\"}} onChange={(e)=>this.setState({cystart:parseInt(e.target.value)})}></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <p>to:&nbsp;</p><input defaultValue={\"0\"} type={\"number\"} style={{width:\"35px\"}} onChange={(e)=>this.setState({cxend:parseInt(e.target.value)})}></input>\n                                <input defaultValue={\"0\"} type={\"number\"} style={{width:\"35px\"}} onChange={(e)=>this.setState({cyend:parseInt(e.target.value)})}></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <p >Save PNG:</p>\n                                <div className={`download-button`} onClick={() => this.mapDownload()}><img src='save.png' alt='save'/></div>\n                            </td>\n                        </tr>\n                    </tbody></table>\n                    <canvas ref={this.strokecanvasRef} style={{width:\"10vmin\",height:\"10vmin\"}}></canvas>\n                    <input ref={this.colorInputRef} style={{height:\"40px\", width:\"40px\", border:\"none\"}} value={this.props.color} type={\"color\"} onChange={(e)=>{this.changeColor(colorTo32Uint(e.target.value))}}></input>\n                    {/* <div style={{width:\"100px\", height:\"100px\", backgroundColor:colorToString(this.state.color_selected)}}></div> */}\n                </div>\n            </div>\n        )\n    }\n}\n\nclass MapCanvas extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.drawLines = [];\n\n        this.lastdraw = 0;\n\n        this.scale = STARTSCALE;\n        this.tempscale = this.scale;\n\n        this.cellpos = {i:0,j:0,k:0,l:0};\n\n        this.map_grid = null;\n        this.canvasRef = createRef();\n    \n        this.mapoffset = new Vector2D(0,0);\n        this.celloffset = new Vector2D(0,0);\n        this.currentcell = new Vector2D(0,0);\n        this.startpoint = new Vector2D(0,0);\n\n        this.cursorcurrent = new Vector2D(0,0);\n        this.lmousedown = false;\n        this.rmousedown = false;\n        this.mousepos = new Vector2D(0,0);\n\n        this.canvas = null;\n        this.replacecanvas = null;\n\n        this.is_updating = false;\n        this.drawcache = [];\n    }\n\n\n    //Called after element's initialisation\n    componentDidMount() { \n        this.canvas = this.canvasRef.current;\n        this.replacecanvas = document.createElement('canvas');\n        this.map_grid = new Map();\n        this.resizeCanvas(this.canvas);\n        window.addEventListener('resize', ()=>this.resizeCanvas(this.canvas));\n        setTimeout(this.updateCanvas(), UPDATEPERIOD);\n    }\n\n    getCursorPosition(event, canvas) {\n        const rect = canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        const pos = new Vector2D(x/(this.tempscale/this.scale),y/(this.tempscale/this.scale));\n        this.mousepos = pos;\n        return pos;\n    }\n\n    getCurrentCell() {\n        let x = Math.floor((this.cursorcurrent.x-this.mapoffset.x*this.scale)/(this.scale));\n        let y = Math.floor((this.cursorcurrent.y-this.mapoffset.y*this.scale)/(this.scale));\n        const pos = new Vector2D(x,y);\n        return pos;\n    }\n\n    moveMap(start, end) {\n        let x = (end.x-start.x)/this.scale;\n        let y = (end.y-start.y)/this.scale;\n        this.mapoffset.transform(x,y);\n        this.celloffset.setTo(Math.floor(this.mapoffset.x),Math.floor(this.mapoffset.y));\n        this.props.changeOffsetLoc(this.celloffset);\n    }\n\n    drawMap (canvas, startpoint, isupdate) {\n        let start =  Date.now();\n        if (this.map_grid.image===null || this.map_grid.numchunks===null) return;\n        const cellsize = this.map_grid.cellsize;\n\n        let x,y;\n        let doFill = (i,j,k,l) => {\n\n            x = (((i+startpoint.x)*CHUNKSIZE+k))*(cellsize)+mapoffset_x;\n            y = (((j+startpoint.y)*CHUNKSIZE+l))*(cellsize)+mapoffset_y;\n            ctx.fillRect(x, y, cellsize, cellsize);\n            // console.log(x,y,cellapparentsize);\n        }\n\n        let length = this.map_grid.numchunks.x*CHUNKSIZE*cellsize;\n        if ((this.map_grid.image.byteLength*4)%length!==0) return;\n        let imageData = new ImageData(new Uint8ClampedArray(this.map_grid.image), length);\n\n        const ctx = canvas.getContext(\"2d\");\n        ctx.imageSmoothingEnabled = false;\n\n        const rctx = this.replacecanvas.getContext(\"2d\");\n        rctx.clearRect(0,0,this.replacecanvas.width, this.replacecanvas.height);\n        rctx.putImageData(imageData, 0, 0);\n\n        const { width, height } = canvas.getBoundingClientRect();\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        let mapoffset_x = Math.floor(this.mapoffset.x*cellsize);\n        let mapoffset_y = Math.floor(this.mapoffset.y*cellsize);\n        let offset_x = startpoint.x*CHUNKSIZE*cellsize+mapoffset_x;\n        let offset_y = startpoint.y*CHUNKSIZE*cellsize+mapoffset_y;\n\n        {\n            ctx.drawImage(this.replacecanvas, offset_x, offset_y);\n            \n            if (this.props.getDebugMode()) {\n                ctx.beginPath();\n                for (let i=0;i<this.map_grid.numchunks.x;i++) {\n                    for (let j=0;j<this.map_grid.numchunks.y;j++) {\n                        x = (((i+startpoint.x)*CHUNKSIZE))*cellsize+mapoffset_x;\n                        y = (((j+startpoint.y)*CHUNKSIZE))*cellsize+mapoffset_y;\n    \n                        ctx.fillStyle = \"#000000\";\n                        ctx.lineWidth = 0.01*Math.floor(this.scale);\n                        ctx.moveTo(x, 0);\n                        ctx.lineTo(x, height);\n                        // ctx.stroke();\n                        ctx.moveTo(0, y);\n                        ctx.lineTo(width, y);\n                    }\n                }\n                ctx.stroke();\n            }\n\n            this.drawcache.forEach((linearray)=>{\n                linearray.forEach((line)=>{\n                    plotLine(line.p1, line.p2, line.offset, (x,y)=>{\n                        const currentpos = new Vector2D(x-line.offset.x,y-line.offset.y);\n                        const {i, j, k, l} = this.map_grid.getChunkPosOffset(currentpos, this.startpoint);\n                        ctx.fillStyle = colorToString(line.blockid);\n                        doFill(i, j, k, l);\n                    });\n                })\n            });\n\n            if (this.props.toolmode===DRAWTOOL) {\n                // doFill(this.cellpos);\n                ctx.fillStyle = colorToString(this.props.getColorSelected())+\"ff\";\n                doFill(this.cellpos.i, this.cellpos.j, this.cellpos.k, this.cellpos.l);\n            }\n        };\n\n        this.props.changeDrawTime(Date.now()-start);\n    }\n\n    async updateCanvas() {\n        let start = Date.now(); // time testing\n\n        let tempupdatescale = Math.floor(this.tempscale);\n\n        let {startpoint, numchunks} = this.map_grid.getValues(this.canvas, this.mapoffset.multipliedby(tempupdatescale), tempupdatescale);\n        let linestosend = this.drawLines;\n        this.drawLines = [];\n        this.map_grid.setMatrix(numchunks, startpoint, linestosend, tempupdatescale, this.props.changeTranscodeTime)\n        .then(()=>{\n            this.replacecanvas.width = tempupdatescale*numchunks.x*CHUNKSIZE;\n            this.replacecanvas.height = tempupdatescale*numchunks.y*CHUNKSIZE;    \n\n            this.canvas.getContext('2d').resetTransform();\n            this.resizeCanvas(this.canvas);\n            this.canvasscale(this.canvas, this.tempscale/tempupdatescale, this.tempscale/tempupdatescale)\n            this.scale = Math.floor(this.tempscale)\n            this.startpoint = startpoint;\n            this.drawMap(this.canvas, startpoint, true);\n\n            this.props.changeUpdateTime(Date.now()-start);\n        }).then(()=>{\n            // this.drawcache.forEach((draw) => {draw()});\n            this.drawcache.push([]);\n            if (this.drawcache.length>4) {\n                this.drawcache.shift();\n            }\n            \n        });\n\n        setTimeout(()=>{this.updateCanvas()}, UPDATEPERIOD);\n    }\n\n    // stolen code lmao\n    resizeCanvas(canvas) {\n        const { width, height } = canvas.getBoundingClientRect();\n        \n        if (canvas.width !== width || canvas.height !== height) {\n          const { devicePixelRatio:ratio=1 } = window;\n          const context = canvas.getContext('2d');\n          canvas.width = (1*width*ratio);\n          canvas.height = (1*height*ratio);\n          context.scale(ratio, ratio);\n          console.log(ratio);\n        //   canvas.style.width = `${width}px`;\n        //   canvas.style.height = `${height}px`;\n          return true;\n        }\n    \n        return false\n    }\n\n    canvasscale(canvas, scalex, scaley) {\n        // let mousepos = this.mousepos;\n        const ctx = canvas.getContext('2d');\n        // const transx = mousepos.x;\n        // const transy = mousepos.y;\n        // ctx.translate(transx, transy);\n        ctx.scale(scalex, scaley);\n        // ctx.translate(-transx, -transy);\n    }\n\n    // drawCellAtMouse(x,y) {\n    //     const currentpos = new Vector2D(x-this.celloffset.x,y-this.celloffset.y);\n\n    //     let {i, j, k, l} = this.map_grid.getChunkPosOffset(currentpos, this.startpoint);\n    //     let dataindex = this.map_grid.getDataIndex(i,j,k,l);\n    //     if (dataindex < this.map_grid.image.byteLength/4) this.map_grid.addCell(dataindex, this.props.getColorSelected());\n    // }\n\n    moveCursor(event) {\n        let update = false;\n        let newcursorcurrent = this.getCursorPosition(event, this.canvas);\n        if (this.rmousedown) {\n            this.moveMap(this.cursorcurrent, newcursorcurrent);\n            update = true;\n        }\n        this.cursorcurrent = newcursorcurrent;\n        let newcurrentcell = this.getCurrentCell();\n        // Drawing line and updating stats\n        if (!this.currentcell.isEqualTo(newcurrentcell)) {\n            if (this.lmousedown) this.drawLine(this.currentcell,newcurrentcell);\n            this.currentcell = newcurrentcell;\n            this.cellpos = this.map_grid.getChunkPosOffset(this.currentcell, this.startpoint);\n            this.props.changeCursorLoc(this.currentcell);\n            this.props.changeChunkLoc(this.cellpos.i+this.startpoint.x,this.cellpos.j+this.startpoint.y);\n            update = true;\n        }\n        return update;\n    }\n\n    drawLine(p1,p2) {\n        // let thisdraw = ()=>{plotLine(p1, p2, this.celloffset, (x,y)=>this.drawCellAtMouse(x,y))};\n        let thisdraw = ()=>{\n            let pixels = [];\n            plotLine(p1, p2, this.celloffset, (x,y)=>{pixels.push({x:x,y:y, blockid:this.props.getColorSelected()})});\n            return pixels;\n        };\n        \n        let drawobj = {p1:p1,p2:p2,offset:this.celloffset,blockid:this.props.getColorSelected()};\n        this.drawcache[this.drawcache.length-1].push(drawobj);\n        this.drawLines.push(drawobj);\n    }\n\n    render() {\n        let getCursor = ()=>{\n            switch (this.props.toolmode) {\n                case EYEDROPTOOL:\n                    return \"crosshair\";\n                case MOVETOOL:\n                    return \"move\";\n                default:\n                    return \"default\";\n            }\n        }\n        return (<div>\n            {/* <canvas ref={this.canvasRef2} style={{visibility:\"hidden\"}}></canvas> */}\n            <canvas \n                ref={this.canvasRef}\n                className='map-canvas primary'\n                style={{cursor:getCursor()}}\n                onContextMenu={(e) => {\n                    e.preventDefault();\n                }}\n                onMouseDown={(e) => {\n                    e.preventDefault();\n                    if (e.button === 0) {\n                        switch (this.props.toolmode) {\n                            case EYEDROPTOOL:\n                                console.log(\"eyedroptool used\");\n                                let {i,j,k,l} = this.map_grid.getChunkPosOffset(this.currentcell, this.startpoint);\n                                let dataindex = this.map_grid.getDataIndex(i,j,k,l);\n                                this.props.changeColor(this.map_grid.dataview[dataindex]);\n                                // this.props.changeToolMode(DRAWTOOL);\n                                break;\n                            case MOVETOOL:\n                                this.rmousedown=true;\n                                break;\n                            default:\n                                this.lmousedown=true;\n                                this.drawLine(this.currentcell,this.currentcell);\n                                this.drawMap(this.canvas, this.startpoint);\n                                break;\n                        }\n                    }\n                    else if (e.button === 2) {\n                        this.rmousedown=true;\n                    }\n                }}\n                onMouseUp={(e) => {\n                    this.lmousedown=false;\n                    this.rmousedown=false;\n                    this.drawMap(this.canvas, this.startpoint);\n                }}\n                onMouseMove={(e) => {\n                    if (this.moveCursor(e)) this.drawMap(this.canvas, this.startpoint);\n                }}\n                onMouseLeave={(e) => {\n                    this.moveCursor(e);\n                    this.lmousedown=false;\n                    this.rmousedown=false;\n                    this.drawMap(this.canvas, this.startpoint);\n                }}\n                onWheel={(e) => {\n                    let newscale = this.tempscale - Math.floor(e.deltaY)/1000;\n                    // console.log(this.scale, this.tempscale);\n                    let oldtempscale = this.tempscale;\n                    if (newscale>LOWESTSCALE) this.tempscale = newscale;\n                    else this.tempscale = LOWESTSCALE;\n                    let oldscale = this.scale;\n                    console.log(this.tempscale);\n                    const scalenum = this.tempscale/oldtempscale;\n                    this.canvasscale(this.canvas, scalenum, scalenum);\n                    // this.scale = Math.floor(this.tempscale);\n                    \n                    this.drawMap(this.canvas, this.startpoint);\n                }}\n            ></canvas></div>\n        )\n    }\n}\n\n// needs to be fixed up - maybe add useEffect()\nclass Palette extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = (e) => {\n            this.props.changeColor(e.target.value);\n        }\n    }\n\n    render() {\n        return (\n            <div className='palette primary'>\n                {\n                    colors.map((color,index) => (\n                        <div \n                            key={index} \n                            style={{backgroundColor: `${color}`}} \n                            className={`blockbutton` + (this.props.isSelected(color) ? \"selected\" : \"\")}\n                            onClick={() => {this.props.changeColor(colorTo32Uint(color))}}\n                            //onClick={() => {console.log(button.blockid)}}\n                            ></div>\n                    ))\n                }\n        </div>\n        )\n    }\n\n}\n\n\n\n\nfunction App() {\n  return (\n    <AppWrapper/>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}