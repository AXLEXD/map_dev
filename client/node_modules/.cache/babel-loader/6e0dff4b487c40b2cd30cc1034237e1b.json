{"ast":null,"code":"import _possibleConstructorReturn from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar _jsxFileName = \"/Users/alex/Programming/web_development/map_dev_server/client/src/App.js\";\nimport './App.css';\nimport React, { createRef } from 'react';\nvar CHUNKSIZE = 16;\nvar blocksold = [{\n  blockid: 0,\n  blockname: '1',\n  imagesrc: '#ffffff'\n}, {\n  blockid: 1,\n  blockname: '2',\n  imagesrc: '#d1e7dc'\n}, {\n  blockid: 2,\n  blockname: '3',\n  imagesrc: '#c4d4e1'\n}, {\n  blockid: 3,\n  blockname: '4',\n  imagesrc: '#bcb5d3'\n}, {\n  blockid: 4,\n  blockname: '5',\n  imagesrc: '#f5dbe2'\n}, {\n  blockid: 5,\n  blockname: '6',\n  imagesrc: '#eeb6c9'\n}, {\n  blockid: 6,\n  blockname: '7',\n  imagesrc: '#c49abf'\n}, {\n  blockid: 7,\n  blockname: '8',\n  imagesrc: '#bada55'\n}, {\n  blockid: 8,\n  blockname: '9',\n  imagesrc: '#ffd700'\n}, {\n  blockid: 9,\n  blockname: '10',\n  imagesrc: '#f47b79'\n}];\nvar blocks = [{\n  blockid: '0',\n  blockname: '1',\n  imagesrc: '#ffffff'\n}, {\n  blockid: '1',\n  blockname: '2',\n  imagesrc: '#d1e7dc'\n}, {\n  blockid: '2',\n  blockname: '3',\n  imagesrc: '#c4d4e1'\n}, {\n  blockid: '3',\n  blockname: '4',\n  imagesrc: '#bcb5d3'\n}, {\n  blockid: '4',\n  blockname: '5',\n  imagesrc: '#f5dbe2'\n}, {\n  blockid: '5',\n  blockname: '6',\n  imagesrc: '#eeb6c9'\n}, {\n  blockid: '6',\n  blockname: '7',\n  imagesrc: '#c49abf'\n}, {\n  blockid: '7',\n  blockname: '8',\n  imagesrc: '#bada55'\n}, {\n  blockid: '8',\n  blockname: '9',\n  imagesrc: '#ffd700'\n}, {\n  blockid: '9',\n  blockname: '10',\n  imagesrc: '#f47b79'\n}, {\n  blockid: 'a',\n  blockname: '11',\n  imagesrc: '#c6e2d4'\n}, {\n  blockid: 'b',\n  blockname: '12',\n  imagesrc: '#b6d3c2'\n}, {\n  blockid: 'c',\n  blockname: '13',\n  imagesrc: '#e0b1cb'\n}, {\n  blockid: 'd',\n  blockname: '14',\n  imagesrc: '#d0a7b7'\n}, {\n  blockid: 'e',\n  blockname: '15',\n  imagesrc: '#f3d1d3'\n}, {\n  blockid: 'f',\n  blockname: '16',\n  imagesrc: '#e9b8c8'\n}];\nfunction plotLineLow(x0, y0, x1, y1, drawFunc) {\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  var yi = 1;\n  if (dy < 0) {\n    yi = -1;\n    dy = -dy;\n  }\n  var D = 2 * dy - dx;\n  var y = y0;\n  for (var x = x0; x < x1 + 1; x++) {\n    drawFunc(x, y);\n    if (D > 0) {\n      y = y + yi;\n      D = D + 2 * (dy - dx);\n    } else {\n      D = D + 2 * dy;\n    }\n  }\n}\nfunction plotLineHigh(x0, y0, x1, y1, drawFunc) {\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  var xi = 1;\n  if (dx < 0) {\n    xi = -1;\n    dx = -dx;\n  }\n  var D = 2 * dx - dy;\n  var x = x0;\n  for (var y = y0; y < y1 + 1; y++) {\n    drawFunc(x, y);\n    if (D > 0) {\n      x = x + xi;\n      D = D + 2 * (dx - dy);\n    } else {\n      D = D + 2 * dx;\n    }\n  }\n}\nfunction plotLine(p1, p2, offset, drawFunc) {\n  var x0 = p1.x + offset.x;\n  var y0 = p1.y + offset.y;\n  var x1 = p2.x + offset.x;\n  var y1 = p2.y + offset.y;\n  if (x0 === x1 && y0 === y1) drawFunc(x0, y0);\n  if (Math.abs(y1 - y0) < Math.abs(x1 - x0)) {\n    if (x0 > x1) plotLineLow(x1, y1, x0, y0, drawFunc);else plotLineLow(x0, y0, x1, y1, drawFunc);\n  } else {\n    if (y0 > y1) plotLineHigh(x1, y1, x0, y0, drawFunc);else plotLineHigh(x0, y0, x1, y1, drawFunc);\n  }\n}\nvar Vector2D = /*#__PURE__*/function () {\n  function Vector2D(x, y) {\n    _classCallCheck(this, Vector2D);\n    this.x = x;\n    this.y = y;\n  }\n  _createClass(Vector2D, [{\n    key: \"transform\",\n    value: function transform(x, y) {\n      this.x += x;\n      this.y += y;\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }, {\n    key: \"isEqualTo\",\n    value: function isEqualTo(othervector) {\n      return this.x === othervector.x && this.y === othervector.y;\n    }\n  }, {\n    key: \"notEqualTo\",\n    value: function notEqualTo(othervector) {\n      return this.x !== othervector.x || this.y !== othervector.y;\n    }\n  }, {\n    key: \"positive\",\n    value: function positive() {\n      return this.x >= 0 && this.y >= 0;\n    }\n  }, {\n    key: \"multipliedby\",\n    value: function multipliedby(number) {\n      return new Vector2D(this.x * number, this.y * number);\n    }\n  }, {\n    key: \"transformedby\",\n    value: function transformedby(x, y) {\n      return new Vector2D(this.x + x, this.y + y);\n    }\n  }]);\n  return Vector2D;\n}();\nvar Map = /*#__PURE__*/function () {\n  function Map(w, h) {\n    _classCallCheck(this, Map);\n    this.canvasdimensions = new Vector2D(w, h); // establishing at start means no resizing canvas element\n    this.matrix = null;\n    this.lastchunkrequesttime = null;\n  }\n  _createClass(Map, [{\n    key: \"getValues\",\n    value: function getValues(offset, scale) {\n      var chunkpixels = CHUNKSIZE * scale;\n      var numchunks = new Vector2D(0, 0);\n      var startpoint = new Vector2D(0, 0);\n      startpoint.x = offset.x === 0 ? 0 : Math.floor(-1 * offset.x / chunkpixels);\n      startpoint.y = offset.y === 0 ? 0 : Math.floor(-1 * offset.y / chunkpixels);\n      numchunks.x = Math.ceil(this.canvasdimensions.x / chunkpixels) + 1; // bit cheaty - should probs optimise\n      numchunks.y = Math.ceil(this.canvasdimensions.y / chunkpixels) + 1;\n      return {\n        startpoint: startpoint,\n        numchunks: numchunks\n      };\n    }\n  }, {\n    key: \"setMatrix\",\n    value: function setMatrix(dimn, start, lines) {\n      var coords = [];\n      var grid = Array(dimn.x);\n      for (var i = 0; i < dimn.x; i++) {\n        grid[i] = Array(dimn.y);\n        for (var j = 0; j < dimn.x; j++) {\n          var coordsobj = {\n            x: start.x + i,\n            y: start.y + j\n          };\n          coords.push(coordsobj);\n        }\n      }\n      var map_grid = this;\n      // console.log(coords);\n      return new Promise(function (resolve, reject) {\n        fetch('/getchunks', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/octet-stream',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            coords: coords,\n            lines: lines\n          })\n        }).then(function (data) {\n          return data.arrayBuffer();\n        }).then(function (chunkbuffer) {\n          var bufferread = new Uint32Array(chunkbuffer);\n          console.log(bufferread);\n          var chunkbufferlength = dimn.x * dimn.y;\n          var bufferoffset = 0;\n          for (var _i = 0; _i < dimn.x; _i++) {\n            for (var _j = 0; _j < dimn.y; _j++) {\n              grid[_i][_j] = new Chunk(_i + start.x, _j + start.y, bufferread.slice(bufferoffset, bufferoffset + CHUNKSIZE * CHUNKSIZE - 1)); // trying to get buffer from chunkdata - buffer not implemented yet\n              bufferoffset += CHUNKSIZE * CHUNKSIZE;\n            }\n          }\n          map_grid.matrix = grid;\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"getChunkPosOffset\",\n    value: function getChunkPosOffset(currentcell, startpoint) {\n      var cell_i = Math.floor(currentcell.x / CHUNKSIZE) - startpoint.x;\n      var cell_k = currentcell.x - (cell_i + startpoint.x) * CHUNKSIZE;\n      var cell_j = Math.floor(currentcell.y / CHUNKSIZE) - startpoint.y;\n      var cell_l = currentcell.y - (cell_j + startpoint.y) * CHUNKSIZE;\n      return {\n        cell_i: cell_i,\n        cell_j: cell_j,\n        cell_k: cell_k,\n        cell_l: cell_l\n      };\n    }\n  }]);\n  return Map;\n}();\nvar Chunk = /*#__PURE__*/function () {\n  function Chunk(x, y) {\n    var chunkcells = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    _classCallCheck(this, Chunk);\n    this.x = x;\n    this.y = y;\n    this.data = new ArrayBuffer(4 * (CHUNKSIZE * CHUNKSIZE));\n    if (chunkcells.length) {\n      var data = new Uint32Array(this.data);\n      for (var i = 0; i < chunkcells.length; i++) {\n        data[i] = chunkcells[i];\n      }\n    }\n  }\n  // id needs to be 32 bit (4 byte) uint\n  _createClass(Chunk, [{\n    key: \"addCell\",\n    value: function addCell(x, y, id) {\n      var data = new Uint32Array(this.data);\n      data[x * 16 + y] = id;\n    }\n  }]);\n  return Chunk;\n}();\nvar AppWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(AppWrapper, _React$Component);\n  function AppWrapper(props) {\n    var _this;\n    _classCallCheck(this, AppWrapper);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppWrapper).call(this, props));\n    _this.state = {\n      debug_mode: false,\n      show_stats: true,\n      block_selected: 'ff0fff',\n      update: {\n        time: 0,\n        tot_time: 0,\n        num_updates: 1\n      },\n      draw: {\n        time: 0,\n        tot_time: 0,\n        num_updates: 1\n      },\n      cursorx: 0,\n      cursory: 0,\n      offsetx: 0,\n      offsety: 0,\n      chunkx: 0,\n      chunky: 0\n    };\n    _this.changeBlock = function (blockid) {\n      _this.setState({\n        block_selected: blockid\n      });\n    };\n    _this.getBlockSelected = function () {\n      //eg. ff00ff\n      // return parseInt(this.state.block_selected, 16);\n      return _this.state.block_selected;\n    };\n    _this.getDebugMode = function () {\n      return _this.state.debug_mode;\n    };\n    _this.isSelected = function (blockid) {\n      return blockid === _this.state.block_selected;\n    };\n    _this.changeUpdateTime = function (new_time) {\n      _this.setState({\n        update: {\n          time: new_time,\n          tot_time: _this.state.update.tot_time + new_time,\n          num_updates: _this.state.update.num_updates + 1\n        }\n      });\n    };\n    _this.changeDrawTime = function (new_time) {\n      _this.setState({\n        draw: {\n          time: new_time,\n          tot_time: _this.state.draw.tot_time + new_time,\n          num_updates: _this.state.draw.num_updates + 1\n        }\n      });\n    };\n    _this.changeCursorLoc = function (vector) {\n      _this.setState({\n        cursorx: vector.x,\n        cursory: vector.y\n      });\n    };\n    _this.changeOffsetLoc = function (vector) {\n      _this.setState({\n        offsetx: vector.x,\n        offsety: vector.y\n      });\n    };\n    _this.changeChunkLoc = function (x, y) {\n      _this.setState({\n        chunkx: x,\n        chunky: y\n      });\n    };\n    return _this;\n  }\n  _createClass(AppWrapper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.body.style.overflow = \"hidden\"; // stops user from scrolling the page\n      // this.getData();\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var buffer = new ArrayBuffer(4 * 256);\n      var int32View = new Int32Array(buffer);\n      for (var i = 0; i < int32View.length; i++) {\n        int32View[i] = i * 2;\n      }\n      ;\n      fetch('/test', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/octet-stream',\n          'Content-Type': 'application/octet-stream'\n        },\n        body: buffer\n      }).then(function (res) {\n        return res.json();\n      }).then(function (message) {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MapCanvas, {\n        getDebugMode: this.getDebugMode,\n        changeUpdateTime: this.changeUpdateTime,\n        changeDrawTime: this.changeDrawTime,\n        getBlockSelected: this.getBlockSelected,\n        changeCursorLoc: this.changeCursorLoc,\n        changeOffsetLoc: this.changeOffsetLoc,\n        changeChunkLoc: this.changeChunkLoc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Palette, {\n        isSelected: this.isSelected,\n        changeBlock: this.changeBlock,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drawer primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 17\n        }\n      }, this.state.show_stats ? /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: \"absolute\",\n          right: \"0.8vw\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 43\n        }\n      }, \"(\", this.state.update.time, \"ms, avg: \", Math.round(this.state.update.tot_time / this.state.update.num_updates), \"ms, \", this.state.update.num_updates, \" updates)\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }\n      }), \"(\", this.state.draw.time, \"ms, avg: \", Math.round(this.state.draw.tot_time / this.state.draw.num_updates), \"ms, \", this.state.draw.num_updates, \" draws)\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 21\n        }\n      }), \"Cursor: (\", this.state.cursorx, \",\", this.state.cursory, \")\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 21\n        }\n      }), \"Offset: (\", this.state.offsetx, \",\", this.state.offsety, \")\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 21\n        }\n      }), \"Chunk: (\", this.state.chunkx, \",\", this.state.chunky, \")\") : null, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 17\n        }\n      }, \"Instructions:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 37\n        }\n      }), \"This is a pixel art canvas with infinite area. Scroll to zoom in and out, right click to pan around, and use left click to draw on the canvas.\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 17\n        }\n      }), \"Use the palette on the right to select your colour.\", /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"#909090\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 17\n        }\n      }, \"(!!!!) Be aware that there is no saving yet lol, also this is just a prototype so limited colours, no drawing tools etc.\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        onClick: function onClick() {\n          _this2.setState({\n            debug_mode: !_this2.state.debug_mode\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 17\n        }\n      }), \" Debug Mode\\u2002\", /*#__PURE__*/React.createElement(\"input\", {\n        checked: this.state.show_stats,\n        type: \"checkbox\",\n        onClick: function onClick() {\n          _this2.setState({\n            show_stats: !_this2.state.show_stats\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 17\n        }\n      }), \" Stats\"));\n    }\n  }]);\n  return AppWrapper;\n}(React.Component);\nvar MapCanvas = /*#__PURE__*/function (_React$Component2) {\n  _inherits(MapCanvas, _React$Component2);\n  function MapCanvas(props) {\n    var _this3;\n    _classCallCheck(this, MapCanvas);\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(MapCanvas).call(this, props));\n    _this3.getDebugMode = props.getDebugMode;\n    _this3.getBlockSelected = props.getBlockSelected;\n    _this3.changeUpdateTime = props.changeUpdateTime;\n    _this3.changeDrawTime = props.changeDrawTime;\n    _this3.changeCursorLoc = props.changeCursorLoc;\n    _this3.changeOffsetLoc = props.changeOffsetLoc;\n    _this3.changeChunkLoc = props.changeChunkLoc;\n    _this3.drawLines = [];\n    _this3.scale = 16;\n    _this3.map_grid = null;\n    _this3.canvasRef = createRef();\n    _this3.mapoffset = new Vector2D(0, 0);\n    _this3.celloffset = new Vector2D(0, 0);\n    _this3.currentcell = new Vector2D(0, 0);\n    _this3.startpoint = new Vector2D(0, 0);\n    _this3.numchunks = new Vector2D(0, 0);\n    _this3.cursorcurrent = new Vector2D(0, 0);\n    _this3.lmousedown = false;\n    _this3.rmousedown = false;\n    _this3.canvas = null;\n    return _this3;\n  }\n\n  //Called after element's initialisation\n  _createClass(MapCanvas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.canvas = this.canvasRef.current;\n\n      // this.resizeCanvas(this.canvas);\n      var _this$canvas$getBound = this.canvas.getBoundingClientRect(),\n        width = _this$canvas$getBound.width,\n        height = _this$canvas$getBound.height;\n      this.map_grid = new Map(width, height);\n      setTimeout(this.updateCanvas(), 1000);\n    }\n  }, {\n    key: \"getCursorPosition\",\n    value: function getCursorPosition(event, canvas) {\n      var rect = canvas.getBoundingClientRect();\n      var x = event.clientX - rect.left;\n      var y = event.clientY - rect.top;\n      var pos = new Vector2D(x, y);\n      // console.log(`cursor at (${x.toFixed(1)},${y.toFixed(1)})`);\n      return pos;\n    }\n  }, {\n    key: \"getCurrentCell\",\n    value: function getCurrentCell() {\n      var x = Math.floor((this.cursorcurrent.x - this.mapoffset.x * this.scale) / this.scale);\n      var y = Math.floor((this.cursorcurrent.y - this.mapoffset.y * this.scale) / this.scale);\n      var pos = new Vector2D(x, y);\n      return pos;\n    }\n  }, {\n    key: \"moveMap\",\n    value: function moveMap(start, end) {\n      var x = (end.x - start.x) / this.scale;\n      var y = (end.y - start.y) / this.scale;\n      this.mapoffset.transform(x, y);\n      this.celloffset.setTo(Math.floor(this.mapoffset.x), Math.floor(this.mapoffset.y));\n      this.changeOffsetLoc(this.celloffset);\n    }\n  }, {\n    key: \"drawMap\",\n    value: function drawMap(canvas, startpoint) {\n      var _this4 = this;\n      var start = Date.now();\n      this.resizeCanvas(canvas);\n      var ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // finding location in terms of iterators of current cell\n      var _this$map_grid$getChu = this.map_grid.getChunkPosOffset(this.currentcell, startpoint),\n        cell_i = _this$map_grid$getChu.cell_i,\n        cell_j = _this$map_grid$getChu.cell_j,\n        cell_k = _this$map_grid$getChu.cell_k,\n        cell_l = _this$map_grid$getChu.cell_l;\n      var blockid;\n      var x;\n      var y;\n      var doFill = function doFill(i, j, k, l) {\n        x = ((i + startpoint.x) * CHUNKSIZE + k + _this4.mapoffset.x) * _this4.scale;\n        y = ((j + startpoint.y) * CHUNKSIZE + l + _this4.mapoffset.y) * _this4.scale;\n        ctx.fillRect(x, y, _this4.scale, _this4.scale);\n        // console.log(x,y,cellapparentsize);\n      };\n\n      if (this.map_grid.matrix === null) return;\n      // for map\n      if (this.getDebugMode()) ctx.beginPath();\n      for (var i = 0; i < this.map_grid.matrix.length; i++) {\n        for (var j = 0; j < this.map_grid.matrix[i].length; j++) {\n          // for each chunk\n          if (this.getDebugMode()) {\n            x = ((i + startpoint.x) * CHUNKSIZE + this.mapoffset.x) * this.scale;\n            y = ((j + startpoint.y) * CHUNKSIZE + this.mapoffset.y) * this.scale;\n            ctx.fillStyle = \"#000000\";\n            ctx.lineWidth = 0.01 * Math.floor(this.scale);\n            ctx.moveTo(x, 0);\n            ctx.lineTo(x, this.canvas.height / 2);\n            // ctx.stroke();\n            ctx.moveTo(0, y);\n            ctx.lineTo(this.canvas.width / 2, y);\n          }\n          var data = new Uint32Array(this.map_grid.matrix[i][j].data);\n          // console.log(data);\n          for (var c = 0; c < CHUNKSIZE * CHUNKSIZE; c++) {\n            var k = Math.floor(c / CHUNKSIZE);\n            var l = c - k * CHUNKSIZE;\n            if (typeof this.map_grid.matrix[i][j] === 'undefined') continue;\n            blockid = data[c];\n            // if (c%100===0) console.log(blockid);\n\n            if (blockid !== 0) {\n              // ctx.fillStyle = blockid.toString(16);\n              ctx.fillStyle = \"#\" + (blockid & 0x00FFFFFF).toString(16).padStart(6, '0');\n              doFill(i, j, k, l, blockid);\n            }\n          }\n        }\n      }\n      if (this.getDebugMode()) ctx.stroke();\n      ctx.fillStyle = \"#\" + this.getBlockSelected() + \"8f\"; // placeholder until get images\n      doFill(cell_i, cell_j, cell_k, cell_l);\n      this.changeDrawTime(Date.now() - start);\n    }\n  }, {\n    key: \"updateCanvas\",\n    value: function updateCanvas() {\n      var _this5 = this;\n      var start = Date.now(); // time testing\n      var _this$map_grid$getVal = this.map_grid.getValues(this.mapoffset.multipliedby(this.scale), this.scale),\n        startpoint = _this$map_grid$getVal.startpoint,\n        numchunks = _this$map_grid$getVal.numchunks;\n      var linestosend = this.drawLines;\n      this.drawLines = [];\n      this.map_grid.setMatrix(numchunks, startpoint, linestosend).then(function () {\n        if (_this5.map_grid.matrix !== null) _this5.drawMap(_this5.canvas, startpoint);\n        _this5.startpoint = startpoint;\n        _this5.numchunks = numchunks;\n        _this5.changeUpdateTime(Date.now() - start);\n      });\n      setTimeout(function () {\n        _this5.updateCanvas();\n      }, 1000);\n    } // stolen code lmao\n  }, {\n    key: \"resizeCanvas\",\n    value: function resizeCanvas(canvas) {\n      var _canvas$getBoundingCl = canvas.getBoundingClientRect(),\n        width = _canvas$getBoundingCl.width,\n        height = _canvas$getBoundingCl.height;\n      if (canvas.width !== width || canvas.height !== height) {\n        var _window = window,\n          _window$devicePixelRa = _window.devicePixelRatio,\n          ratio = _window$devicePixelRa === void 0 ? 1 : _window$devicePixelRa;\n        var context = canvas.getContext('2d');\n        canvas.width = width * ratio;\n        canvas.height = height * ratio;\n        context.scale(ratio, ratio);\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"drawCellAtMouse\",\n    value: function drawCellAtMouse(x, y) {\n      var currentpos = new Vector2D(x - this.celloffset.x, y - this.celloffset.y);\n      var _this$map_grid$getChu2 = this.map_grid.getChunkPosOffset(currentpos, this.startpoint),\n        cell_i = _this$map_grid$getChu2.cell_i,\n        cell_j = _this$map_grid$getChu2.cell_j,\n        cell_k = _this$map_grid$getChu2.cell_k,\n        cell_l = _this$map_grid$getChu2.cell_l; // console.log(`Insertion coords: x:${cell_i} y:${cell_j}`);\n      if (this.map_grid.matrix[cell_i][cell_j] !== undefined) this.map_grid.matrix[cell_i][cell_j].addCell(cell_k, cell_l, parseInt(this.getBlockSelected(), 16));\n      // console.log(`cell drawn at chunk ${cell_i},${cell_j}`);\n    }\n  }, {\n    key: \"moveCursor\",\n    value: function moveCursor(event) {\n      var update = false;\n      var newcursorcurrent = this.getCursorPosition(event, this.canvas);\n      if (this.rmousedown) {\n        this.moveMap(this.cursorcurrent, newcursorcurrent);\n        update = true;\n      }\n      this.cursorcurrent = newcursorcurrent;\n      var newcurrentcell = this.getCurrentCell();\n      if (!this.currentcell.isEqualTo(newcurrentcell)) {\n        if (this.lmousedown) {\n          // plotLine(this.currentcell, newcurrentcell, this.celloffset, (x,y)=>this.drawCellAtMouse(x,y));\n          this.drawLine(this.currentcell, newcurrentcell);\n        }\n        this.currentcell = newcurrentcell;\n        update = true;\n        this.changeCursorLoc(this.currentcell);\n        var _this$map_grid$getChu3 = this.map_grid.getChunkPosOffset(this.currentcell, this.startpoint),\n          cell_i = _this$map_grid$getChu3.cell_i,\n          cell_j = _this$map_grid$getChu3.cell_j,\n          cell_k = _this$map_grid$getChu3.cell_k,\n          cell_l = _this$map_grid$getChu3.cell_l;\n        this.changeChunkLoc(cell_i + this.startpoint.x, cell_j + this.startpoint.y);\n      }\n      return update;\n    }\n  }, {\n    key: \"drawLine\",\n    value: function drawLine(p1, p2) {\n      var _this6 = this;\n      plotLine(p1, p2, this.celloffset, function (x, y) {\n        return _this6.drawCellAtMouse(x, y);\n      });\n      this.drawLines.push({\n        p1: p1,\n        p2: p2,\n        offset: this.celloffset,\n        blockid: parseInt(this.getBlockSelected(), 16)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"canvas\", {\n        ref: this.canvasRef,\n        className: \"map-canvas primary\",\n        onContextMenu: function onContextMenu(e) {\n          e.preventDefault();\n        },\n        onMouseDown: function onMouseDown(e) {\n          e.preventDefault();\n          if (e.button === 0) {\n            _this7.lmousedown = true;\n            _this7.drawLine(_this7.currentcell, _this7.currentcell);\n            _this7.drawMap(_this7.canvas, _this7.startpoint);\n          } else if (e.button === 2) {\n            _this7.rmousedown = true;\n          }\n        },\n        onMouseUp: function onMouseUp(e) {\n          _this7.lmousedown = false;\n          _this7.rmousedown = false;\n          _this7.drawMap(_this7.canvas, _this7.startpoint);\n        },\n        onMouseMove: function onMouseMove(e) {\n          var update = false;\n          update = _this7.moveCursor(e);\n          if (update) _this7.drawMap(_this7.canvas, _this7.startpoint);\n        },\n        onMouseLeave: function onMouseLeave(e) {\n          _this7.moveCursor(e);\n          _this7.lmousedown = false;\n          _this7.rmousedown = false;\n          _this7.drawMap(_this7.canvas, _this7.startpoint);\n        },\n        onWheel: function onWheel(e) {\n          e.preventDefault();\n          var newscale = _this7.scale - Math.round(e.deltaY) / 1000;\n          if (newscale > 0.5) _this7.scale = newscale;else _this7.scale = 0.5;\n          _this7.drawMap(_this7.canvas, _this7.startpoint);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n  return MapCanvas;\n}(React.Component); // needs to be fixed up - maybe add useEffect()\nvar Palette = /*#__PURE__*/function (_React$Component3) {\n  _inherits(Palette, _React$Component3);\n  function Palette(props) {\n    var _this8;\n    _classCallCheck(this, Palette);\n    _this8 = _possibleConstructorReturn(this, _getPrototypeOf(Palette).call(this, props));\n    _this8.changeBlock = props.changeBlock;\n    return _this8;\n  }\n  _createClass(Palette, [{\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"palette primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 13\n        }\n      }, blocks.map(function (button) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: button.blockid,\n          style: {\n            backgroundColor: \"\".concat(button.imagesrc)\n          },\n          className: \"blockbutton\" + (_this9.props.isSelected(button.blockid) ? \"selected\" : \"\"),\n          onClick: function onClick() {\n            _this9.changeBlock(button.blockid);\n          }\n          //onClick={() => {console.log(button.blockid)}}\n          ,\n          __self: _this9,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 25\n          }\n        });\n      }));\n    }\n  }]);\n  return Palette;\n}(React.Component);\nfunction App() {\n  return /*#__PURE__*/React.createElement(AppWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 5\n    }\n  });\n}\nexport default App;","map":{"version":3,"names":["React","createRef","CHUNKSIZE","blocksold","blockid","blockname","imagesrc","blocks","plotLineLow","x0","y0","x1","y1","drawFunc","dx","dy","yi","D","y","x","plotLineHigh","xi","plotLine","p1","p2","offset","Math","abs","Vector2D","_classCallCheck","_createClass","key","value","transform","setTo","isEqualTo","othervector","notEqualTo","positive","multipliedby","number","transformedby","Map","w","h","canvasdimensions","matrix","lastchunkrequesttime","getValues","scale","chunkpixels","numchunks","startpoint","floor","ceil","setMatrix","dimn","start","lines","coords","grid","Array","i","j","coordsobj","push","map_grid","Promise","resolve","reject","fetch","method","headers","body","JSON","stringify","then","data","arrayBuffer","chunkbuffer","bufferread","Uint32Array","console","log","chunkbufferlength","bufferoffset","Chunk","slice","getChunkPosOffset","currentcell","cell_i","cell_k","cell_j","cell_l","chunkcells","arguments","length","undefined","ArrayBuffer","addCell","id","AppWrapper","_React$Component","_inherits","props","_this","_possibleConstructorReturn","_getPrototypeOf","call","state","debug_mode","show_stats","block_selected","update","time","tot_time","num_updates","draw","cursorx","cursory","offsetx","offsety","chunkx","chunky","changeBlock","setState","getBlockSelected","getDebugMode","isSelected","changeUpdateTime","new_time","changeDrawTime","changeCursorLoc","vector","changeOffsetLoc","changeChunkLoc","componentDidMount","document","style","overflow","getData","buffer","int32View","Int32Array","res","json","message","render","_this2","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","MapCanvas","Palette","position","right","round","color","type","onClick","checked","Component","_React$Component2","_this3","drawLines","canvasRef","mapoffset","celloffset","cursorcurrent","lmousedown","rmousedown","canvas","current","_this$canvas$getBound","getBoundingClientRect","width","height","setTimeout","updateCanvas","getCursorPosition","event","rect","clientX","left","clientY","top","pos","getCurrentCell","moveMap","end","drawMap","_this4","Date","now","resizeCanvas","ctx","getContext","clearRect","fillStyle","fillRect","_this$map_grid$getChu","doFill","k","l","beginPath","lineWidth","moveTo","lineTo","c","toString","padStart","stroke","_this5","_this$map_grid$getVal","linestosend","_canvas$getBoundingCl","_window","window","_window$devicePixelRa","devicePixelRatio","ratio","context","drawCellAtMouse","currentpos","_this$map_grid$getChu2","parseInt","moveCursor","newcursorcurrent","newcurrentcell","drawLine","_this$map_grid$getChu3","_this6","_this7","ref","onContextMenu","e","preventDefault","onMouseDown","button","onMouseUp","onMouseMove","onMouseLeave","onWheel","newscale","deltaY","_React$Component3","_this8","_this9","map","backgroundColor","concat","App"],"sources":["/Users/alex/Programming/web_development/map_dev_server/client/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { createRef } from 'react';\n\n\nconst CHUNKSIZE = 16;\n\nconst blocksold = [\n    {\n        blockid: 0,\n        blockname: '1',\n        imagesrc: '#ffffff'\n    },\n    {\n        blockid: 1,\n        blockname: '2',\n        imagesrc: '#d1e7dc'\n    },\n    {\n        blockid: 2,\n        blockname: '3',\n        imagesrc: '#c4d4e1'\n    },\n    {\n        blockid: 3,\n        blockname: '4',\n        imagesrc: '#bcb5d3'\n    },\n    {\n        blockid: 4,\n        blockname: '5',\n        imagesrc: '#f5dbe2'\n    },\n    {\n        blockid: 5,\n        blockname: '6',\n        imagesrc: '#eeb6c9'\n    },\n    {\n        blockid: 6,\n        blockname: '7',\n        imagesrc: '#c49abf'\n    },\n    {\n        blockid: 7,\n        blockname: '8',\n        imagesrc: '#bada55'\n    },\n    {\n        blockid: 8,\n        blockname: '9',\n        imagesrc: '#ffd700'\n    },\n    {\n        blockid: 9,\n        blockname: '10',\n        imagesrc: '#f47b79'\n    }\n];\n  \nconst blocks = [\n    {\n        blockid: '0',\n        blockname: '1',\n        imagesrc: '#ffffff'\n    },\n    {\n        blockid: '1',\n        blockname: '2',\n        imagesrc: '#d1e7dc'\n    },\n    {\n        blockid: '2',\n        blockname: '3',\n        imagesrc: '#c4d4e1'\n    },\n    {\n        blockid: '3',\n        blockname: '4',\n        imagesrc: '#bcb5d3'\n    },\n    {\n        blockid: '4',\n        blockname: '5',\n        imagesrc: '#f5dbe2'\n    },\n    {\n        blockid: '5',\n        blockname: '6',\n        imagesrc: '#eeb6c9'\n    },\n    {\n        blockid: '6',\n        blockname: '7',\n        imagesrc: '#c49abf'\n    },\n    {\n        blockid: '7',\n        blockname: '8',\n        imagesrc: '#bada55'\n    },\n    {\n        blockid: '8',\n        blockname: '9',\n        imagesrc: '#ffd700'\n    },\n    {\n        blockid: '9',\n        blockname: '10',\n        imagesrc: '#f47b79'\n    },\n    {\n        blockid: 'a',\n        blockname: '11',\n        imagesrc: '#c6e2d4'\n    },\n    {\n        blockid: 'b',\n        blockname: '12',\n        imagesrc: '#b6d3c2'\n    },\n    {\n        blockid: 'c',\n        blockname: '13',\n        imagesrc: '#e0b1cb'\n    },\n    {\n        blockid: 'd',\n        blockname: '14',\n        imagesrc: '#d0a7b7'\n    },\n    {\n        blockid: 'e',\n        blockname: '15',\n        imagesrc: '#f3d1d3'\n    },\n    {\n        blockid: 'f',\n        blockname: '16',\n        imagesrc: '#e9b8c8'\n    }\n];\n\n  \n\nfunction plotLineLow(x0, y0, x1, y1, drawFunc) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    let yi = 1;\n    if (dy < 0) {\n        yi = -1;\n        dy = -dy;\n    }\n    let D = (2 * dy) - dx;\n    let y = y0;\n\n    for (let x = x0;x<x1+1;x++) {\n        drawFunc(x, y);\n        if (D > 0) {\n            y = y + yi;\n            D = D + (2 * (dy - dx));\n        } else {\n            D = D + 2*dy;\n        }\n    }\n}\nfunction plotLineHigh(x0, y0, x1, y1, drawFunc) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    let xi = 1;\n    if (dx < 0) {\n        xi = -1;\n        dx = -dx;\n    }\n    let D = (2 * dx) - dy;\n    let x = x0;\n\n    for (let y = y0;y<y1+1;y++) {\n        drawFunc(x, y);\n        if (D > 0) {\n            x = x + xi;\n            D = D + (2 * (dx - dy));\n        } else {\n            D = D + 2*dx;\n        }\n    }\n}\n\nfunction plotLine(p1, p2, offset, drawFunc) {\n    \n    let x0 = p1.x+offset.x;\n    let y0 = p1.y+offset.y;\n    \n    let x1 = p2.x+offset.x;\n    let y1 = p2.y+offset.y;\n\n    if (x0===x1 && y0===y1) drawFunc(x0,y0);\n\n\n    if (Math.abs(y1 - y0) < Math.abs(x1 - x0)) {\n        if (x0 > x1) plotLineLow(x1, y1, x0, y0, drawFunc);\n        else plotLineLow(x0, y0, x1, y1, drawFunc);\n    }\n    else {\n        if (y0 > y1) plotLineHigh(x1, y1, x0, y0, drawFunc);\n        else plotLineHigh(x0, y0, x1, y1, drawFunc);\n    }\n}\n\n\nclass Vector2D {\n    constructor(x,y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    transform(x,y) {\n        this.x += x;\n        this.y += y;\n    }\n\n    setTo(x,y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isEqualTo(othervector) {\n        return (this.x===othervector.x && this.y===othervector.y);\n    }\n    notEqualTo(othervector) {\n        return (this.x!==othervector.x || this.y!==othervector.y);\n    }\n\n    positive() {\n        return (this.x >= 0 && this.y >=0);\n    }\n\n    multipliedby(number) {\n        return new Vector2D(this.x*number,this.y*number);\n    }\n    transformedby(x,y) {\n        return new Vector2D(this.x+x,this.y+y);\n    }\n}\n\n\nclass Map {\n    constructor(w, h) {\n\n        this.canvasdimensions = new Vector2D(w,h); // establishing at start means no resizing canvas element\n        this.matrix = null;\n\n        this.lastchunkrequesttime = null;\n        \n\n    }\n\n    getValues(offset, scale) {\n        let chunkpixels = CHUNKSIZE*scale;\n\n        let numchunks = new Vector2D(0,0);\n        let startpoint = new Vector2D(0,0);\n\n        startpoint.x = (offset.x === 0) ? 0 : Math.floor((-1*offset.x)/chunkpixels);\n        startpoint.y = (offset.y === 0) ? 0 : Math.floor((-1*offset.y)/chunkpixels);\n\n        numchunks.x = Math.ceil(this.canvasdimensions.x/chunkpixels)+1; // bit cheaty - should probs optimise\n        numchunks.y = Math.ceil(this.canvasdimensions.y/chunkpixels)+1;\n\n        return {startpoint, numchunks};\n    }\n\n    setMatrix(dimn, start, lines) {\n\n        let coords = [];\n\n        let grid = Array(dimn.x);\n        for (let i=0;i<dimn.x;i++) {\n            grid[i] = Array(dimn.y);\n            for (let j=0;j<dimn.x;j++) {\n                let coordsobj = { x: start.x+i, y: start.y+j };\n                coords.push(coordsobj);    \n            }\n        }\n\n        let map_grid = this;\n        // console.log(coords);\n        return new Promise(function(resolve, reject) {\n            fetch('/getchunks',{\n                method: 'POST',\n                headers: {'Accept': 'application/octet-stream', 'Content-Type': 'application/json'},\n                body: JSON.stringify({coords:coords, lines:lines})\n            }).then((data)=>{\n                return data.arrayBuffer();\n            }).then((chunkbuffer) => {\n\n                let bufferread = new Uint32Array(chunkbuffer);\n\n                console.log(bufferread);\n\n                let chunkbufferlength = dimn.x*dimn.y;\n\n                let bufferoffset = 0;\n\n                for (let i=0;i<dimn.x;i++) {\n                    for (let j=0;j<dimn.y;j++) {\n                        \n                        grid[i][j] = new Chunk(i+start.x, j+start.y, bufferread.slice(bufferoffset,bufferoffset+(CHUNKSIZE*CHUNKSIZE)-1)); // trying to get buffer from chunkdata - buffer not implemented yet\n                        bufferoffset+=(CHUNKSIZE*CHUNKSIZE);\n                    }\n                }\n                map_grid.matrix = grid;\n                resolve();\n            });\n        });\n    }\n\n    getChunkPosOffset(currentcell, startpoint) {\n        const cell_i = Math.floor((currentcell.x/CHUNKSIZE))-startpoint.x;\n        const cell_k = currentcell.x - (cell_i+startpoint.x)*CHUNKSIZE;\n\n        const cell_j = Math.floor((currentcell.y/CHUNKSIZE))-startpoint.y;\n        const cell_l = currentcell.y - (cell_j+startpoint.y)*CHUNKSIZE;\n\n\n        return {cell_i, cell_j, cell_k, cell_l};\n    }\n}\n\nclass Chunk {\n    constructor (x, y, chunkcells=[]) {\n        this.x = x;\n        this.y = y;\n        \n        this.data = new ArrayBuffer(4*(CHUNKSIZE*CHUNKSIZE));\n\n        if (chunkcells.length) {\n            let data = new Uint32Array(this.data);\n            for (let i=0;i<chunkcells.length;i++) {\n                data[i] = chunkcells[i];\n            }\n        }\n        \n    }\n    // id needs to be 32 bit (4 byte) uint\n    addCell(x,y,id) {\n        let data = new Uint32Array(this.data);\n        data[(x*16+y)] = id;\n    }\n    \n}\n\n\nclass AppWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            debug_mode: false,\n            show_stats: true,\n            block_selected: 'ff0fff', \n            update: {\n                time: 0,\n                tot_time: 0,\n                num_updates: 1\n            },\n            draw: {\n                time: 0,\n                tot_time: 0,\n                num_updates: 1\n            },\n            cursorx: 0,\n            cursory: 0,\n            offsetx: 0,\n            offsety: 0,\n            chunkx: 0,\n            chunky: 0\n        };\n\n        this.changeBlock = (blockid) => {this.setState({block_selected: blockid})};\n        this.getBlockSelected = () => {\n            //eg. ff00ff\n            // return parseInt(this.state.block_selected, 16);\n            return this.state.block_selected;\n        };\n        this.getDebugMode = () => {return this.state.debug_mode};\n\n        this.isSelected = (blockid) => {return (blockid===this.state.block_selected)};\n\n        this.changeUpdateTime = (new_time) => {\n            this.setState({update:{\n                time: new_time, \n                tot_time: this.state.update.tot_time+new_time, \n                num_updates: this.state.update.num_updates+1\n            }});\n        }\n        this.changeDrawTime = (new_time) => {\n            this.setState({draw:{\n                time: new_time, \n                tot_time: this.state.draw.tot_time+new_time, \n                num_updates: this.state.draw.num_updates+1\n            }});\n        }\n        this.changeCursorLoc = (vector) => {\n            this.setState({cursorx: vector.x,cursory: vector.y});\n        }\n        this.changeOffsetLoc = (vector) => {\n            this.setState({offsetx: vector.x,offsety: vector.y});\n        }\n        this.changeChunkLoc = (x,y) => {\n            this.setState({chunkx: x,chunky: y});\n        }\n    }\n\n    componentDidMount() {\n        document.body.style.overflow = \"hidden\"; // stops user from scrolling the page\n        // this.getData();\n    }\n\n    getData() {\n\n        const buffer = new ArrayBuffer(4*256);\n        const int32View = new Int32Array(buffer);\n\n        for (let i = 0; i < int32View.length; i++) {\n            int32View[i] = i * 2;\n          };\n        fetch('/test',{\n            method: 'POST',\n            headers: {'Accept': 'application/octet-stream', 'Content-Type': 'application/octet-stream'},\n            body: buffer\n        })\n        .then((res) => res.json())\n        .then((message) => {});\n    }\n\n    render() {\n        return (\n            <div className='App-wrapper'>\n                <MapCanvas getDebugMode={this.getDebugMode} changeUpdateTime={this.changeUpdateTime} changeDrawTime={this.changeDrawTime} getBlockSelected={this.getBlockSelected} changeCursorLoc={this.changeCursorLoc} changeOffsetLoc={this.changeOffsetLoc} changeChunkLoc={this.changeChunkLoc}/>\n                <Palette isSelected={this.isSelected} changeBlock={this.changeBlock}/>\n                <div className='drawer primary'>\n                {(this.state.show_stats)?(<div style={{position: `absolute`,right:`0.8vw`}}>\n                    ({this.state.update.time}ms, avg: {Math.round(this.state.update.tot_time/this.state.update.num_updates)}ms, {this.state.update.num_updates} updates)\n                    <br/>({this.state.draw.time}ms, avg: {Math.round(this.state.draw.tot_time/this.state.draw.num_updates)}ms, {this.state.draw.num_updates} draws)\n                    <br/>Cursor: ({this.state.cursorx},{this.state.cursory})\n                    <br/>Offset: ({this.state.offsetx},{this.state.offsety})\n                    <br/>Chunk: ({this.state.chunkx},{this.state.chunky})\n                </div>):null}\n                <b>Instructions:</b><br/>This is a pixel art canvas with infinite area. Scroll to zoom in and out, right click to pan around, and use left click to draw on the canvas.\n                <br/>Use the palette on the right to select your colour.\n                <div style={{color: `#909090`}}>(!!!!) Be aware that there is no saving yet lol, also this is just a prototype so limited colours, no drawing tools etc.</div>\n                <input type={\"checkbox\"} onClick={()=>{this.setState({debug_mode:!this.state.debug_mode})}}></input> Debug Mode&ensp;\n                <input checked={this.state.show_stats} type={\"checkbox\"} onClick={()=>{this.setState({show_stats:!this.state.show_stats})}}></input> Stats\n                </div>\n            </div>\n        )\n    }\n}\n\nclass MapCanvas extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.getDebugMode = props.getDebugMode;\n        this.getBlockSelected = props.getBlockSelected;\n        this.changeUpdateTime = props.changeUpdateTime;\n        this.changeDrawTime = props.changeDrawTime;\n\n        this.changeCursorLoc = props.changeCursorLoc;\n        this.changeOffsetLoc = props.changeOffsetLoc;\n        this.changeChunkLoc = props.changeChunkLoc;\n\n        this.drawLines = [];\n\n        this.scale = 16;\n\n        this.map_grid = null;\n        this.canvasRef = createRef();\n    \n        this.mapoffset = new Vector2D(0,0);\n        this.celloffset = new Vector2D(0,0);\n        this.currentcell = new Vector2D(0,0);\n        this.startpoint = new Vector2D(0,0);\n        this.numchunks = new Vector2D(0,0);\n\n        this.cursorcurrent = new Vector2D(0,0);\n        this.lmousedown = false;\n        this.rmousedown = false;\n\n        this.canvas = null;\n    }\n\n    //Called after element's initialisation\n    componentDidMount() { \n        this.canvas = this.canvasRef.current;\n\n        // this.resizeCanvas(this.canvas);\n        const { width, height } = this.canvas.getBoundingClientRect();\n        this.map_grid = new Map(width, height);\n\n        setTimeout(this.updateCanvas(), 1000);\n    }\n\n    getCursorPosition(event, canvas) {\n        const rect = canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        const pos = new Vector2D(x,y);\n        // console.log(`cursor at (${x.toFixed(1)},${y.toFixed(1)})`);\n        return pos;\n    }\n\n    getCurrentCell() {\n        let x = Math.floor((this.cursorcurrent.x-this.mapoffset.x*this.scale)/(this.scale));\n        let y = Math.floor((this.cursorcurrent.y-this.mapoffset.y*this.scale)/(this.scale));\n        const pos = new Vector2D(x,y);\n        return pos;\n    }\n\n    moveMap(start, end) {\n        let x = (end.x-start.x)/this.scale;\n        let y = (end.y-start.y)/this.scale;\n        this.mapoffset.transform(x,y);\n        this.celloffset.setTo(Math.floor(this.mapoffset.x),Math.floor(this.mapoffset.y));\n        this.changeOffsetLoc(this.celloffset);\n    }\n\n    drawMap (canvas, startpoint) {\n        let start =  Date.now();\n\n        this.resizeCanvas(canvas);\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // finding location in terms of iterators of current cell\n        let {cell_i, cell_j, cell_k, cell_l} = this.map_grid.getChunkPosOffset(this.currentcell, startpoint);\n\n        let blockid;\n        let x;\n        let y;\n\n        let doFill = (i,j,k,l) => {\n\n            x = (((i+startpoint.x)*CHUNKSIZE+k)+this.mapoffset.x)*(this.scale);\n            y = (((j+startpoint.y)*CHUNKSIZE+l)+this.mapoffset.y)*(this.scale);\n\n            ctx.fillRect(x, y, this.scale, this.scale);\n            // console.log(x,y,cellapparentsize);\n        }\n        if (this.map_grid.matrix === null) return;\n        // for map\n        if (this.getDebugMode()) ctx.beginPath();\n        for (let i=0;i<this.map_grid.matrix.length;i++) {\n            for (let j=0;j<this.map_grid.matrix[i].length;j++) {\n                // for each chunk\n                if (this.getDebugMode()) {\n                    x = (((i+startpoint.x)*CHUNKSIZE)+this.mapoffset.x)*(this.scale);\n                    y = (((j+startpoint.y)*CHUNKSIZE)+this.mapoffset.y)*(this.scale);\n\n                    ctx.fillStyle = \"#000000\";\n                    ctx.lineWidth = 0.01*Math.floor(this.scale);\n                    ctx.moveTo(x, 0);\n                    ctx.lineTo(x, this.canvas.height/2);\n                    // ctx.stroke();\n                    ctx.moveTo(0, y);\n                    ctx.lineTo(this.canvas.width/2, y);\n                }\n                let data = new Uint32Array(this.map_grid.matrix[i][j].data);\n                // console.log(data);\n                for (let c=0;c<(CHUNKSIZE*CHUNKSIZE);c++) {\n                    let k = Math.floor(c/CHUNKSIZE);\n                    let l = c-(k*CHUNKSIZE);\n\n                    if (typeof this.map_grid.matrix[i][j] === 'undefined') continue;\n\n                    blockid = data[c];\n                    // if (c%100===0) console.log(blockid);\n\n                    if (blockid!==0){\n                        // ctx.fillStyle = blockid.toString(16);\n                        ctx.fillStyle = \"#\" + (blockid & 0x00FFFFFF).toString(16).padStart(6, '0');\n                        doFill(i,j,k,l,blockid);\n                    }\n                }\n            }\n        }\n        if (this.getDebugMode()) ctx.stroke();\n        ctx.fillStyle = \"#\" + this.getBlockSelected() + \"8f\"; // placeholder until get images\n        doFill(cell_i,cell_j,cell_k,cell_l);\n\n        this.changeDrawTime(Date.now()-start);\n    }\n\n    updateCanvas() {\n        let start = Date.now(); // time testing\n\n        let {startpoint, numchunks} = this.map_grid.getValues(this.mapoffset.multipliedby(this.scale), this.scale);\n        let linestosend = this.drawLines;\n        this.drawLines = [];\n        this.map_grid.setMatrix(numchunks, startpoint, linestosend)\n        .then(()=>{\n            if (this.map_grid.matrix !== null) this.drawMap(this.canvas, startpoint);\n            this.startpoint = startpoint;\n            this.numchunks = numchunks;\n            this.changeUpdateTime(Date.now()-start);\n        });\n\n        setTimeout(()=>{this.updateCanvas()}, 1000);\n    }\n\n    // stolen code lmao\n    resizeCanvas(canvas) {\n        const { width, height } = canvas.getBoundingClientRect();\n        \n        if (canvas.width !== width || canvas.height !== height) {\n          const { devicePixelRatio:ratio=1 } = window;\n          const context = canvas.getContext('2d');\n          canvas.width = width*ratio;\n          canvas.height = height*ratio;\n          context.scale(ratio, ratio);\n          return true;\n        }\n    \n        return false\n    }\n\n    drawCellAtMouse(x,y) {\n        const currentpos = new Vector2D(x-this.celloffset.x,y-this.celloffset.y);\n\n        let {cell_i, cell_j, cell_k, cell_l} = this.map_grid.getChunkPosOffset(currentpos, this.startpoint);\n        // console.log(`Insertion coords: x:${cell_i} y:${cell_j}`);\n        if (this.map_grid.matrix[cell_i][cell_j] !== undefined) this.map_grid.matrix[cell_i][cell_j].addCell(cell_k, cell_l, parseInt(this.getBlockSelected(),16));\n        // console.log(`cell drawn at chunk ${cell_i},${cell_j}`);\n    }\n\n    moveCursor(event) {\n        let update = false;\n        let newcursorcurrent = this.getCursorPosition(event, this.canvas);\n        if (this.rmousedown) {\n            this.moveMap(this.cursorcurrent, newcursorcurrent);\n            update = true;\n        }\n        this.cursorcurrent = newcursorcurrent;\n        let newcurrentcell = this.getCurrentCell();\n        if (!this.currentcell.isEqualTo(newcurrentcell)) {\n            if (this.lmousedown) {\n\n                // plotLine(this.currentcell, newcurrentcell, this.celloffset, (x,y)=>this.drawCellAtMouse(x,y));\n                this.drawLine(this.currentcell,newcurrentcell);\n            }\n            this.currentcell = newcurrentcell;\n            update = true;\n            this.changeCursorLoc(this.currentcell);\n            let {cell_i, cell_j, cell_k, cell_l} = this.map_grid.getChunkPosOffset(this.currentcell, this.startpoint);\n            this.changeChunkLoc(cell_i+this.startpoint.x,cell_j+this.startpoint.y);\n\n        }\n        \n        return update;\n    }\n\n    drawLine(p1,p2) {\n\n        plotLine(p1, p2, this.celloffset, (x,y)=>this.drawCellAtMouse(x,y));\n\n        this.drawLines.push({p1:p1,p2:p2,offset:this.celloffset,blockid:parseInt(this.getBlockSelected(),16)});\n    }\n\n    render() {\n        return (\n            <div>\n            <canvas \n                ref={this.canvasRef} \n                className='map-canvas primary'\n                onContextMenu={(e) => {\n                    e.preventDefault();\n                }}\n                onMouseDown={(e) => {\n                    e.preventDefault();\n                    if (e.button === 0) {\n                        this.lmousedown=true;\n                        this.drawLine(this.currentcell,this.currentcell);\n                        this.drawMap(this.canvas, this.startpoint);\n                    }\n                    else if (e.button === 2) {\n                        this.rmousedown=true;\n                    }\n                }}\n                onMouseUp={(e) => {\n                    this.lmousedown=false;\n                    this.rmousedown=false;\n                    this.drawMap(this.canvas, this.startpoint);\n                }}\n                onMouseMove={(e) => {\n                    let update = false;\n\n                    update = this.moveCursor(e);\n\n                    if (update) this.drawMap(this.canvas, this.startpoint);\n                }}\n                onMouseLeave={(e) => {\n                    this.moveCursor(e);\n                    this.lmousedown=false;\n                    this.rmousedown=false;\n                    this.drawMap(this.canvas, this.startpoint);\n                }}\n                onWheel={(e) => {\n                    e.preventDefault();\n                    let newscale = this.scale - Math.round(e.deltaY)/1000;\n                    if (newscale>0.5) this.scale = newscale;\n                    else this.scale = 0.5;\n                    \n                    this.drawMap(this.canvas, this.startpoint);\n                }}\n            ></canvas>\n            </div>\n        )\n    }\n}\n\n// needs to be fixed up - maybe add useEffect()\nclass Palette extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.changeBlock = props.changeBlock;\n    }\n\n    render() {\n        return (\n            <div className='palette primary'>\n                {\n                    blocks.map(button => (\n                        <div \n                            key={button.blockid} \n                            style={{backgroundColor: `${button.imagesrc}`}} \n                            className={`blockbutton` + (this.props.isSelected(button.blockid) ? \"selected\" : \"\")}\n                            onClick={() => {this.changeBlock(button.blockid)}}\n                            //onClick={() => {console.log(button.blockid)}}\n                            ></div>\n                    ))\n                }\n        </div>\n        )\n    }\n\n}\n\n\n\n\nfunction App() {\n  return (\n    <AppWrapper/>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}