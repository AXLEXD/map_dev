{"ast":null,"code":"import _possibleConstructorReturn from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar _jsxFileName = \"/Users/alex/Programming/web_development/map_dev_server/client/src/App.js\";\nimport './App.css';\nimport React, { createRef } from 'react';\nvar blocks = [{\n  blockid: 0,\n  blockname: '1',\n  imagesrc: '#ffffff'\n}, {\n  blockid: 1,\n  blockname: '2',\n  imagesrc: '#d1e7dc'\n}, {\n  blockid: 2,\n  blockname: '3',\n  imagesrc: '#c4d4e1'\n}, {\n  blockid: 3,\n  blockname: '4',\n  imagesrc: '#bcb5d3'\n}, {\n  blockid: 4,\n  blockname: '5',\n  imagesrc: '#f5dbe2'\n}, {\n  blockid: 5,\n  blockname: '6',\n  imagesrc: '#eeb6c9'\n}, {\n  blockid: 6,\n  blockname: '7',\n  imagesrc: '#c49abf'\n}, {\n  blockid: 7,\n  blockname: '8',\n  imagesrc: '#bada55'\n}, {\n  blockid: 8,\n  blockname: '9',\n  imagesrc: '#ffd700'\n}, {\n  blockid: 9,\n  blockname: '10',\n  imagesrc: '#f47b79'\n}];\nfunction plotLineLow(x0, y0, x1, y1, drawFunc) {\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  var yi = 1;\n  if (dy < 0) {\n    yi = -1;\n    dy = -dy;\n  }\n  var D = 2 * dy - dx;\n  var y = y0;\n  for (var x = x0; x < x1 + 1; x++) {\n    drawFunc(x, y);\n    if (D > 0) {\n      y = y + yi;\n      D = D + 2 * (dy - dx);\n    } else {\n      D = D + 2 * dy;\n    }\n  }\n}\nfunction plotLineHigh(x0, y0, x1, y1, drawFunc) {\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  var xi = 1;\n  if (dx < 0) {\n    xi = -1;\n    dx = -dx;\n  }\n  var D = 2 * dx - dy;\n  var x = x0;\n  for (var y = y0; y < y1 + 1; y++) {\n    drawFunc(x, y);\n    if (D > 0) {\n      x = x + xi;\n      D = D + 2 * (dx - dy);\n    } else {\n      D = D + 2 * dx;\n    }\n  }\n}\nfunction plotLine(p1, p2, offset, drawFunc) {\n  var x0 = p1.x + offset.x;\n  var y0 = p1.y + offset.y;\n  var x1 = p2.x + offset.x;\n  var y1 = p2.y + offset.y;\n  if (x0 === x1 && y0 === y1) drawFunc(x0, y0);\n  if (Math.abs(y1 - y0) < Math.abs(x1 - x0)) {\n    if (x0 > x1) plotLineLow(x1, y1, x0, y0, drawFunc);else plotLineLow(x0, y0, x1, y1, drawFunc);\n  } else {\n    if (y0 > y1) plotLineHigh(x1, y1, x0, y0, drawFunc);else plotLineHigh(x0, y0, x1, y1, drawFunc);\n  }\n}\nvar Vector2D = /*#__PURE__*/function () {\n  function Vector2D(x, y) {\n    _classCallCheck(this, Vector2D);\n    this.x = x;\n    this.y = y;\n  }\n  _createClass(Vector2D, [{\n    key: \"transform\",\n    value: function transform(x, y) {\n      this.x += x;\n      this.y += y;\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }, {\n    key: \"isEqualTo\",\n    value: function isEqualTo(othervector) {\n      return this.x === othervector.x && this.y === othervector.y;\n    }\n  }, {\n    key: \"positive\",\n    value: function positive() {\n      return this.x >= 0 && this.y >= 0;\n    }\n  }]);\n  return Vector2D;\n}();\nvar Map = /*#__PURE__*/function () {\n  function Map(w, h) {\n    _classCallCheck(this, Map);\n    this.canvasdimensions = new Vector2D(w, h); // establishing at start means no resizing canvas element\n    this.matrix = null;\n\n    // this.cachedChunks = [];\n\n    this.lastchunkrequesttime = null;\n  }\n  _createClass(Map, [{\n    key: \"makeMatrix\",\n    value: function makeMatrix(dimn, start, chunksize, resolveGenerated) {\n      var coords = [];\n      var grid = Array(dimn.x);\n      for (var i = 0; i < dimn.x * dimn.y; i++) {\n        grid[i] = Array(dimn.y);\n        var coordsobj = {\n          x: start.x + Math.floor(i / dimn.x),\n          y: start.y + i % dimn.y\n        };\n        coords.push(coordsobj);\n      }\n      // console.log(coords);\n      fetch('/getchunks', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(coords)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (express_data) {\n        var chunklist = express_data;\n        // console.log(chunklist);\n\n        chunklist.forEach(function (item, index) {\n          var x = Math.floor(index / dimn.x);\n          var y = index % dimn.y;\n          if (item !== '0') {\n            grid[x][y] = new Chunk(chunksize, x + start.x, y + start.y, item.split(''));\n            // console.log(grid[x][y]);\n          } else grid[x][y] = new Chunk(chunksize, x + start.x, y + start.y);\n        });\n\n        // console.log(`new chunk made ${i},${j}`);\n        // console.log(`${i},${j},${dimn.x},${dimn.y}`);\n        resolveGenerated(start);\n      });\n      return grid;\n    }\n  }, {\n    key: \"generateChunks\",\n    value: function generateChunks(offset, cellsize, scale, chunksize) {\n      var numchunks = new Vector2D(0, 0);\n      var startpoint = new Vector2D(0, 0);\n      var map_grid = this;\n      return new Promise(function (resolve, reject) {\n        // console.log(`${cellsize},${scale},${chunksize}`)\n\n        var chunkpixels = chunksize * cellsize * scale; // number of pixels in chunk width\n\n        startpoint.x = Math.floor(-1 * offset.x / chunkpixels);\n        startpoint.y = Math.floor(-1 * offset.y / chunkpixels);\n        numchunks.x = Math.ceil(map_grid.canvasdimensions.x / chunkpixels) + 1; // bit cheaty - should probs optimise\n        numchunks.y = Math.ceil(map_grid.canvasdimensions.y / chunkpixels) + 1;\n\n        // console.log(`startpoint: (${startpoint.x},${startpoint.y})`);\n        // console.log(`dimensions: (${numchunks.x},${numchunks.y})`);\n        // if (this.matrix) {\n        //     for (let i=0;i<this.matrix.length;i++) {\n        //         for (let k=0;k<this.matrix[i].length;k++) {\n        //             let current = this.matrix[i][k];\n\n        //             let in_array = false;\n        //             this.cachedChunks.forEach((element) => {\n        //                 if (element.x===current.x && element.y===current.y) in_array = true;\n        //             })\n        //             if (current.modified && !in_array) this.cachedChunks.push(current);\n        //         }\n        //     }\n        // }\n        map_grid.matrix = map_grid.makeMatrix(numchunks, startpoint, chunksize, resolve);\n      });\n    }\n  }, {\n    key: \"getChunkPosOffset\",\n    value: function getChunkPosOffset(currentcell, chunksize, startpoint) {\n      var cell_i = Math.floor(currentcell.x / chunksize) - startpoint.x;\n      var cell_k = currentcell.x - (cell_i + startpoint.x) * chunksize;\n      var cell_j = Math.floor(currentcell.y / chunksize) - startpoint.y;\n      var cell_l = currentcell.y - (cell_j + startpoint.y) * chunksize;\n      return {\n        cell_i: cell_i,\n        cell_j: cell_j,\n        cell_k: cell_k,\n        cell_l: cell_l\n      };\n    }\n  }]);\n  return Map;\n}();\nvar Chunk = /*#__PURE__*/function () {\n  function Chunk(chunksize, x, y) {\n    var chunkcells = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    _classCallCheck(this, Chunk);\n    //this.matrix = this.makeMatrix(chunksize, chunksize);\n    this.x = x;\n    this.y = y;\n    if (chunkcells.length) {\n      this.modified_cells = chunkcells;\n      this.modified = true;\n    } else {\n      this.modified_cells = Array(chunksize * chunksize).fill(0);\n      this.modified = false;\n    }\n  }\n  _createClass(Chunk, [{\n    key: \"addCell\",\n    value: function addCell(x, y, id) {\n      this.modified_cells[x * 16 + y] = id;\n      this.modified = true;\n    }\n  }]);\n  return Chunk;\n}();\nvar AppWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(AppWrapper, _React$Component);\n  function AppWrapper(props) {\n    var _this;\n    _classCallCheck(this, AppWrapper);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppWrapper).call(this, props));\n    _this.state = {\n      block_selected: 1,\n      update_time: 0,\n      tot_update_time: 0,\n      num_updates: 1,\n      express_data: null\n    };\n    _this.changeBlock = function (blockid) {\n      _this.setState({\n        block_selected: blockid\n      });\n    };\n    _this.getBlockSelected = function () {\n      return _this.state.block_selected;\n    };\n    _this.isSelected = function (blockid) {\n      return blockid === _this.state.block_selected;\n    };\n    _this.changeUpdateTime = function (new_time) {\n      _this.setState({\n        update_time: new_time,\n        tot_update_time: _this.state.tot_update_time + new_time,\n        num_updates: _this.state.num_updates + 1\n      });\n    };\n    return _this;\n  }\n  _createClass(AppWrapper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.body.style.overflow = \"hidden\"; // stops user from scrolling the page\n      this.getData();\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _this2 = this;\n      fetch(\"/api\").then(function (res) {\n        return res.json();\n      }).then(function (express_data) {\n        return _this2.setState({\n          express_data: express_data.message\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MapCanvas, {\n        changeUpdateTime: this.changeUpdateTime,\n        getBlockSelected: this.getBlockSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Palette, {\n        isSelected: this.isSelected,\n        changeBlock: this.changeBlock,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drawer primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: \"absolute\",\n          right: \"0.8vw\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }\n      }, \"(\", this.state.update_time, \"ms, avg: \", Math.round(this.state.tot_update_time / this.state.num_updates), \"ms, \", this.state.num_updates, \" updates)\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }\n      }), \"Here is the express message: \".concat(this.state.express_data)), /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 17\n        }\n      }, \"Instructions:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 37\n        }\n      }), \"This is a pixel art canvas with infinite area. Scroll to zoom in and out, right click to pan around, and use left click to draw on the canvas.\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 17\n        }\n      }), \"Use the palette on the right to select your colour.\", /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"#909090\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 17\n        }\n      }, \"(!!!!) Be aware that there is no saving yet lol, also this is just a prototype so limited colours, no drawing tools etc.\")));\n    }\n  }]);\n  return AppWrapper;\n}(React.Component);\nvar MapCanvas = /*#__PURE__*/function (_React$Component2) {\n  _inherits(MapCanvas, _React$Component2);\n  function MapCanvas(props) {\n    var _this3;\n    _classCallCheck(this, MapCanvas);\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(MapCanvas).call(this, props));\n    _this3.getBlockSelected = props.getBlockSelected;\n    _this3.changeUpdateTime = props.changeUpdateTime;\n    _this3.cellsize = 8;\n    _this3.scale = 2;\n    _this3.chunksize = 16;\n    _this3.map_grid = null;\n    _this3.canvasRef = createRef();\n    _this3.mapoffset = new Vector2D(0, 0);\n    _this3.celloffset = new Vector2D(0, 0);\n    _this3.currentcell = new Vector2D(0, 0);\n    _this3.startpoint = new Vector2D(0, 0);\n    _this3.cursorcurrent = new Vector2D(0, 0);\n    _this3.lmousedown = false;\n    _this3.rmousedown = false;\n    _this3.canvas = null;\n    return _this3;\n  }\n\n  //Called after element's initialisation\n  // componentDidUpdate() { this.updateCanvas() }\n  _createClass(MapCanvas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.canvas = this.canvasRef.current;\n\n      // this.resizeCanvas(this.canvas);\n      var _this$canvas$getBound = this.canvas.getBoundingClientRect(),\n        width = _this$canvas$getBound.width,\n        height = _this$canvas$getBound.height;\n      this.map_grid = new Map(width, height);\n      this.updateCanvas();\n    }\n  }, {\n    key: \"getCursorPosition\",\n    value: function getCursorPosition(event, canvas) {\n      var rect = canvas.getBoundingClientRect();\n      var x = event.clientX - rect.left;\n      var y = event.clientY - rect.top;\n      var pos = new Vector2D(x, y);\n      // console.log(`cursor at (${x.toFixed(1)},${y.toFixed(1)})`);\n      return pos;\n    }\n  }, {\n    key: \"getCurrentCell\",\n    value: function getCurrentCell() {\n      var x = Math.floor((this.cursorcurrent.x - this.mapoffset.x) / (this.cellsize * this.scale));\n      var y = Math.floor((this.cursorcurrent.y - this.mapoffset.y) / (this.cellsize * this.scale));\n      var pos = new Vector2D(x, y);\n      return pos;\n    }\n  }, {\n    key: \"moveMap\",\n    value: function moveMap(start, end) {\n      var x = end.x - start.x;\n      var y = end.y - start.y;\n      this.mapoffset.transform(x, y);\n      this.celloffset.setTo(Math.round(this.mapoffset.x), Math.round(this.mapoffset.y));\n    } // maybe should be in the map class\n  }, {\n    key: \"drawMap\",\n    value: function drawMap(canvas, startpoint) {\n      var _this4 = this;\n      var ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.fillStyle = \"#00000\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      var cellapparentsize = this.cellsize * this.scale;\n\n      // finding location in terms of iterators of current cell\n      var _this$map_grid$getChu = this.map_grid.getChunkPosOffset(this.currentcell, this.chunksize, startpoint),\n        cell_i = _this$map_grid$getChu.cell_i,\n        cell_j = _this$map_grid$getChu.cell_j,\n        cell_k = _this$map_grid$getChu.cell_k,\n        cell_l = _this$map_grid$getChu.cell_l;\n      var blockid;\n      var x;\n      var y;\n      var doFill = function doFill(i, j, k, l) {\n        x = ((i + startpoint.x) * _this4.chunksize + k) * cellapparentsize + _this4.mapoffset.x;\n        y = ((j + startpoint.y) * _this4.chunksize + l) * cellapparentsize + _this4.mapoffset.y;\n        ctx.fillRect(x, y, cellapparentsize, cellapparentsize);\n      };\n\n      // for map\n      for (var i = 0; i < this.map_grid.matrix.length; i++) {\n        for (var j = 0; j < this.map_grid.matrix[i].length; j++) {\n          // for each chunk\n          for (var c = 0; c < this.chunksize * this.chunksize; c++) {\n            var k = Math.floor(c / this.chunksize);\n            var l = c - k * this.chunksize;\n            if (typeof this.map_grid.matrix[i][j] === 'undefined') continue;\n            blockid = this.map_grid.matrix[i][j].modified_cells[c];\n            if (blockid !== 0) {\n              ctx.fillStyle = blocks[blockid].imagesrc; // placeholder until get images\n              doFill(i, j, k, l, blockid);\n            }\n          }\n        }\n      }\n      ctx.fillStyle = blocks[this.getBlockSelected()].imagesrc + \"8f\"; // placeholder until get images\n      doFill(cell_i, cell_j, cell_k, cell_l);\n    }\n  }, {\n    key: \"updateCanvas\",\n    value: function updateCanvas() {\n      var _this5 = this;\n      var start = Date.now(); // time testing\n\n      this.resizeCanvas(this.canvas);\n      this.map_grid.generateChunks(this.mapoffset, this.cellsize, this.scale, this.chunksize).then(function (startpoint) {\n        _this5.startpoint = startpoint;\n        _this5.drawMap(_this5.canvas, startpoint);\n        console.log(\"updatinggggggg\");\n        var delta = Date.now() - start;\n        _this5.changeUpdateTime(delta);\n      });\n\n      // requestAnimationFrame(() => {this.drawMap(this.canvas, startpoint);});\n    } // stolen code lmao\n  }, {\n    key: \"resizeCanvas\",\n    value: function resizeCanvas(canvas) {\n      var _canvas$getBoundingCl = canvas.getBoundingClientRect(),\n        width = _canvas$getBoundingCl.width,\n        height = _canvas$getBoundingCl.height;\n      if (canvas.width !== width || canvas.height !== height) {\n        var _window = window,\n          _window$devicePixelRa = _window.devicePixelRatio,\n          ratio = _window$devicePixelRa === void 0 ? 1 : _window$devicePixelRa;\n        var context = canvas.getContext('2d');\n        canvas.width = width * ratio;\n        canvas.height = height * ratio;\n        context.scale(ratio, ratio);\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"drawCellAtMouse\",\n    value: function drawCellAtMouse(x, y) {\n      var currentpos = new Vector2D(x - this.celloffset.x, y - this.celloffset.y);\n      var _this$map_grid$getChu2 = this.map_grid.getChunkPosOffset(currentpos, this.chunksize, this.startpoint),\n        cell_i = _this$map_grid$getChu2.cell_i,\n        cell_j = _this$map_grid$getChu2.cell_j,\n        cell_k = _this$map_grid$getChu2.cell_k,\n        cell_l = _this$map_grid$getChu2.cell_l;\n      this.map_grid.matrix[cell_i][cell_j].addCell(cell_k, cell_l, this.getBlockSelected());\n      // console.log(`cell drawn at chunk ${cell_i},${cell_j}`);\n    }\n  }, {\n    key: \"moveCursor\",\n    value: function moveCursor(event) {\n      var _this6 = this;\n      var update = false;\n      var newcursorcurrent = this.getCursorPosition(event, this.canvas);\n      if (this.rmousedown) {\n        this.moveMap(this.cursorcurrent, newcursorcurrent);\n        update = true;\n      }\n      this.cursorcurrent = newcursorcurrent;\n      var newcurrentcell = this.getCurrentCell();\n      if (!this.currentcell.isEqualTo(newcurrentcell)) {\n        if (this.lmousedown) {\n          plotLine(this.currentcell, newcurrentcell, this.celloffset, function (x, y) {\n            return _this6.drawCellAtMouse(x, y);\n          });\n        }\n        this.currentcell = newcurrentcell;\n        update = true;\n      }\n      return update;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"canvas\", {\n        ref: this.canvasRef,\n        className: \"map-canvas primary\",\n        onContextMenu: function onContextMenu(e) {\n          e.preventDefault();\n          // this.rmousedown=true;\n        },\n\n        onMouseDown: function onMouseDown(e) {\n          e.preventDefault();\n          if (e.button === 0) {\n            _this7.lmousedown = true;\n            plotLine(_this7.currentcell, _this7.currentcell, _this7.celloffset, function (x, y) {\n              return _this7.drawCellAtMouse(x, y);\n            });\n            _this7.updateCanvas();\n          } else if (e.button === 2) {\n            _this7.rmousedown = true;\n          }\n        },\n        onMouseUp: function onMouseUp(e) {\n          _this7.lmousedown = false;\n          _this7.rmousedown = false;\n        },\n        onMouseMove: function onMouseMove(e) {\n          var update = false;\n          update = _this7.moveCursor(e);\n          if (update) _this7.updateCanvas();\n        },\n        onMouseLeave: function onMouseLeave(e) {\n          // console.log(\"left canvas\");\n          _this7.moveCursor(e);\n          _this7.lmousedown = false;\n          _this7.rmousedown = false;\n          _this7.currentcell.setTo(-1, -1);\n          _this7.updateCanvas();\n        },\n        onWheel: function onWheel(e) {\n          e.preventDefault();\n          var newscale = _this7.scale + Math.round(e.deltaY) / 100;\n          if (newscale > 0.5) _this7.scale = newscale;else _this7.scale = 0.5;\n          // console.log(this.scale);\n          // console.log(e.deltaY);\n          _this7.updateCanvas();\n          // if (this.scale < 1) console.table(this.map_grid.matrix);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n  return MapCanvas;\n}(React.Component); // needs to be fixed up - maybe add useEffect()\nvar Palette = /*#__PURE__*/function (_React$Component3) {\n  _inherits(Palette, _React$Component3);\n  function Palette(props) {\n    var _this8;\n    _classCallCheck(this, Palette);\n    _this8 = _possibleConstructorReturn(this, _getPrototypeOf(Palette).call(this, props));\n    _this8.changeBlock = props.changeBlock;\n    return _this8;\n  }\n  _createClass(Palette, [{\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"palette primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }\n      }, blocks.map(function (button) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: button.blockid,\n          style: {\n            backgroundColor: \"\".concat(button.imagesrc)\n          },\n          className: \"blockbutton\" + (_this9.props.isSelected(button.blockid) ? \"selected\" : \"\"),\n          onClick: function onClick() {\n            _this9.changeBlock(button.blockid);\n          }\n          //onClick={() => {console.log(button.blockid)}}\n          ,\n          __self: _this9,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 25\n          }\n        });\n      }));\n    }\n  }]);\n  return Palette;\n}(React.Component);\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 9\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","createRef","blocks","blockid","blockname","imagesrc","plotLineLow","x0","y0","x1","y1","drawFunc","dx","dy","yi","D","y","x","plotLineHigh","xi","plotLine","p1","p2","offset","Math","abs","Vector2D","_classCallCheck","_createClass","key","value","transform","setTo","isEqualTo","othervector","positive","Map","w","h","canvasdimensions","matrix","lastchunkrequesttime","makeMatrix","dimn","start","chunksize","resolveGenerated","coords","grid","Array","i","coordsobj","floor","push","fetch","method","headers","body","JSON","stringify","then","res","json","express_data","chunklist","forEach","item","index","Chunk","split","generateChunks","cellsize","scale","numchunks","startpoint","map_grid","Promise","resolve","reject","chunkpixels","ceil","getChunkPosOffset","currentcell","cell_i","cell_k","cell_j","cell_l","chunkcells","arguments","length","undefined","modified_cells","modified","fill","addCell","id","AppWrapper","_React$Component","_inherits","props","_this","_possibleConstructorReturn","_getPrototypeOf","call","state","block_selected","update_time","tot_update_time","num_updates","changeBlock","setState","getBlockSelected","isSelected","changeUpdateTime","new_time","componentDidMount","document","style","overflow","getData","_this2","message","render","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","MapCanvas","Palette","position","right","round","concat","color","Component","_React$Component2","_this3","canvasRef","mapoffset","celloffset","cursorcurrent","lmousedown","rmousedown","canvas","current","_this$canvas$getBound","getBoundingClientRect","width","height","updateCanvas","getCursorPosition","event","rect","clientX","left","clientY","top","pos","getCurrentCell","moveMap","end","drawMap","_this4","ctx","getContext","clearRect","fillStyle","fillRect","cellapparentsize","_this$map_grid$getChu","doFill","j","k","l","c","_this5","Date","now","resizeCanvas","console","log","delta","_canvas$getBoundingCl","_window","window","_window$devicePixelRa","devicePixelRatio","ratio","context","drawCellAtMouse","currentpos","_this$map_grid$getChu2","moveCursor","_this6","update","newcursorcurrent","newcurrentcell","_this7","ref","onContextMenu","e","preventDefault","onMouseDown","button","onMouseUp","onMouseMove","onMouseLeave","onWheel","newscale","deltaY","_React$Component3","_this8","_this9","map","backgroundColor","onClick","App"],"sources":["/Users/alex/Programming/web_development/map_dev_server/client/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { createRef } from 'react';\n\n\nconst blocks = [\n    {\n        blockid: 0,\n        blockname: '1',\n        imagesrc: '#ffffff'\n    },\n    {\n        blockid: 1,\n        blockname: '2',\n        imagesrc: '#d1e7dc'\n    },\n    {\n        blockid: 2,\n        blockname: '3',\n        imagesrc: '#c4d4e1'\n    },\n    {\n        blockid: 3,\n        blockname: '4',\n        imagesrc: '#bcb5d3'\n    },\n    {\n        blockid: 4,\n        blockname: '5',\n        imagesrc: '#f5dbe2'\n    },\n    {\n        blockid: 5,\n        blockname: '6',\n        imagesrc: '#eeb6c9'\n    },\n    {\n        blockid: 6,\n        blockname: '7',\n        imagesrc: '#c49abf'\n    },\n    {\n        blockid: 7,\n        blockname: '8',\n        imagesrc: '#bada55'\n    },\n    {\n        blockid: 8,\n        blockname: '9',\n        imagesrc: '#ffd700'\n    },\n    {\n        blockid: 9,\n        blockname: '10',\n        imagesrc: '#f47b79'\n    }\n];\n\nfunction plotLineLow(x0, y0, x1, y1, drawFunc) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    let yi = 1;\n    if (dy < 0) {\n        yi = -1;\n        dy = -dy;\n    }\n    let D = (2 * dy) - dx;\n    let y = y0;\n\n    for (let x = x0;x<x1+1;x++) {\n        drawFunc(x, y);\n        if (D > 0) {\n            y = y + yi;\n            D = D + (2 * (dy - dx));\n        } else {\n            D = D + 2*dy;\n        }\n    }\n}\nfunction plotLineHigh(x0, y0, x1, y1, drawFunc) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    let xi = 1;\n    if (dx < 0) {\n        xi = -1;\n        dx = -dx;\n    }\n    let D = (2 * dx) - dy;\n    let x = x0;\n\n    for (let y = y0;y<y1+1;y++) {\n        drawFunc(x, y);\n        if (D > 0) {\n            x = x + xi;\n            D = D + (2 * (dx - dy));\n        } else {\n            D = D + 2*dx;\n        }\n    }\n}\n\nfunction plotLine(p1, p2, offset, drawFunc) {\n    \n    let x0 = p1.x+offset.x;\n    let y0 = p1.y+offset.y;\n    \n    let x1 = p2.x+offset.x;\n    let y1 = p2.y+offset.y;\n\n    if (x0===x1 && y0===y1) drawFunc(x0,y0);\n\n\n    if (Math.abs(y1 - y0) < Math.abs(x1 - x0)) {\n        if (x0 > x1) plotLineLow(x1, y1, x0, y0, drawFunc);\n        else plotLineLow(x0, y0, x1, y1, drawFunc);\n    }\n    else {\n        if (y0 > y1) plotLineHigh(x1, y1, x0, y0, drawFunc);\n        else plotLineHigh(x0, y0, x1, y1, drawFunc);\n    }\n}\n\n\nclass Vector2D {\n    constructor(x,y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    transform(x,y) {\n        this.x += x;\n        this.y += y;\n    }\n\n    setTo(x,y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isEqualTo(othervector) {\n        return (this.x===othervector.x && this.y===othervector.y);\n    }\n\n    positive() {\n        return (this.x >= 0 && this.y >=0);\n    }\n}\n\n\nclass Map {\n    constructor(w, h) {\n\n        this.canvasdimensions = new Vector2D(w,h); // establishing at start means no resizing canvas element\n        this.matrix = null;\n\n        // this.cachedChunks = [];\n\n        this.lastchunkrequesttime = null;\n        \n\n    }\n    makeMatrix(dimn, start, chunksize, resolveGenerated) {\n\n        let coords = [];\n\n        let grid = Array(dimn.x);\n        for (let i=0;i<(dimn.x*dimn.y);i++) {\n            grid[i] = Array(dimn.y);\n\n            let coordsobj = { x: start.x+Math.floor(i/dimn.x), y: start.y+i%dimn.y };\n            coords.push(coordsobj);\n        }\n        // console.log(coords);\n        fetch('/getchunks',{\n            method: 'POST',\n            headers: {'Accept': 'application/json', 'Content-Type': 'application/json'},\n            body: JSON.stringify(coords)\n        })\n        .then((res) => res.json())\n        .then((express_data) => {\n            let chunklist = express_data;\n            // console.log(chunklist);\n\n            chunklist.forEach((item, index)=>{\n                let x = Math.floor(index/dimn.x);\n                let y = index%dimn.y;\n                \n                if (item !== '0') {\n                    grid[x][y] = new Chunk(chunksize, x+start.x, y+start.y, item.split(''));\n                    // console.log(grid[x][y]);\n                }\n    \n                else grid[x][y] = new Chunk(chunksize, x+start.x, y+start.y);\n            })\n\n            \n            // console.log(`new chunk made ${i},${j}`);\n            // console.log(`${i},${j},${dimn.x},${dimn.y}`);\n            resolveGenerated(start);\n        });\n        return grid;\n    }\n\n    generateChunks(offset, cellsize, scale, chunksize) {\n        let numchunks = new Vector2D(0,0);\n        let startpoint = new Vector2D(0,0);\n\n        let map_grid = this;\n\n        return new Promise(function(resolve, reject) {\n            // console.log(`${cellsize},${scale},${chunksize}`)\n\n            let chunkpixels = chunksize*cellsize*scale; // number of pixels in chunk width\n            \n            startpoint.x = Math.floor((-1*offset.x)/chunkpixels);\n            startpoint.y = Math.floor((-1*offset.y)/chunkpixels);\n\n            numchunks.x = Math.ceil(map_grid.canvasdimensions.x/chunkpixels)+1; // bit cheaty - should probs optimise\n            numchunks.y = Math.ceil(map_grid.canvasdimensions.y/chunkpixels)+1;\n\n            // console.log(`startpoint: (${startpoint.x},${startpoint.y})`);\n            // console.log(`dimensions: (${numchunks.x},${numchunks.y})`);\n            // if (this.matrix) {\n            //     for (let i=0;i<this.matrix.length;i++) {\n            //         for (let k=0;k<this.matrix[i].length;k++) {\n            //             let current = this.matrix[i][k];\n\n            //             let in_array = false;\n            //             this.cachedChunks.forEach((element) => {\n            //                 if (element.x===current.x && element.y===current.y) in_array = true;\n            //             })\n            //             if (current.modified && !in_array) this.cachedChunks.push(current);\n            //         }\n            //     }\n            // }\n            map_grid.matrix = map_grid.makeMatrix(numchunks, startpoint, chunksize, resolve);\n        });\n\n    }\n\n    getChunkPosOffset(currentcell, chunksize, startpoint) {\n        const cell_i = Math.floor((currentcell.x/chunksize))-startpoint.x;\n        const cell_k = currentcell.x - (cell_i+startpoint.x)*chunksize;\n\n        const cell_j = Math.floor((currentcell.y/chunksize))-startpoint.y;\n        const cell_l = currentcell.y - (cell_j+startpoint.y)*chunksize;\n\n\n        return {cell_i, cell_j, cell_k, cell_l};\n    }\n}\n\nclass Chunk {\n    constructor (chunksize, x, y, chunkcells=[]) {\n        //this.matrix = this.makeMatrix(chunksize, chunksize);\n        this.x = x;\n        this.y = y;\n        \n        if (chunkcells.length) {\n            this.modified_cells = chunkcells;\n            this.modified = true;\n        } else {\n            this.modified_cells = Array(chunksize*chunksize).fill(0);\n            this.modified = false;\n        }\n        \n    }\n\n    addCell(x,y, id) {\n        this.modified_cells[x*16+y] = id;\n        this.modified = true;\n    }\n    \n}\n\n\nclass AppWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            block_selected: 1, \n            update_time: 0,\n            tot_update_time: 0,\n            num_updates: 1,\n            express_data: null\n        };\n\n        this.changeBlock = (blockid) => {this.setState({block_selected: blockid})};\n        this.getBlockSelected = () => {return this.state.block_selected};\n\n        this.isSelected = (blockid) => {return (blockid===this.state.block_selected)};\n\n        this.changeUpdateTime = (new_time) => {\n            this.setState({\n                update_time: new_time, \n                tot_update_time: this.state.tot_update_time+new_time, \n                num_updates: this.state.num_updates+1\n            });\n        }\n    }\n\n    componentDidMount() {\n        document.body.style.overflow = \"hidden\"; // stops user from scrolling the page\n        this.getData();\n    }\n\n    getData() {\n        fetch(\"/api\")\n        .then((res) => res.json())\n        .then((express_data) => this.setState({express_data: express_data.message}));\n    }\n\n    render() {\n        return (\n            <div className='App-wrapper'>\n                <MapCanvas changeUpdateTime={this.changeUpdateTime} getBlockSelected={this.getBlockSelected}/>\n                <Palette isSelected={this.isSelected} changeBlock={this.changeBlock}/>\n                <div className='drawer primary'>\n                <div style={{position: `absolute`,right:`0.8vw`}}>\n                    ({this.state.update_time}ms, avg: {Math.round(this.state.tot_update_time/this.state.num_updates)}ms, {this.state.num_updates} updates)\n                    <br/>{`Here is the express message: ${this.state.express_data}`}\n                </div>\n                <b>Instructions:</b><br/>This is a pixel art canvas with infinite area. Scroll to zoom in and out, right click to pan around, and use left click to draw on the canvas.\n                <br/>Use the palette on the right to select your colour.\n                <div style={{color: `#909090`}}>(!!!!) Be aware that there is no saving yet lol, also this is just a prototype so limited colours, no drawing tools etc.</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass MapCanvas extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.getBlockSelected = props.getBlockSelected;\n\n        this.changeUpdateTime = props.changeUpdateTime;\n\n        this.cellsize = 8;\n        this.scale = 2;\n        this.chunksize = 16;\n\n        this.map_grid = null;\n        this.canvasRef = createRef();\n    \n        this.mapoffset = new Vector2D(0,0);\n        this.celloffset = new Vector2D(0,0);\n        this.currentcell = new Vector2D(0,0);\n        this.startpoint = new Vector2D(0,0);\n\n        this.cursorcurrent = new Vector2D(0,0);\n        this.lmousedown = false;\n        this.rmousedown = false;\n\n        this.canvas = null;\n    }\n\n    //Called after element's initialisation\n    // componentDidUpdate() { this.updateCanvas() }\n    componentDidMount() { \n        this.canvas = this.canvasRef.current;\n\n        // this.resizeCanvas(this.canvas);\n        const { width, height } = this.canvas.getBoundingClientRect();\n        this.map_grid = new Map(width, height);\n\n        this.updateCanvas();\n    }\n\n    getCursorPosition(event, canvas) {\n        const rect = canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        const pos = new Vector2D(x,y);\n        // console.log(`cursor at (${x.toFixed(1)},${y.toFixed(1)})`);\n        return pos;\n    }\n\n    getCurrentCell() {\n        let x = Math.floor((this.cursorcurrent.x-this.mapoffset.x)/(this.cellsize*this.scale));\n        let y = Math.floor((this.cursorcurrent.y-this.mapoffset.y)/(this.cellsize*this.scale));\n        const pos = new Vector2D(x,y);\n        return pos;\n    }\n\n    moveMap(start, end) {\n        let x = (end.x-start.x);\n        let y = (end.y-start.y);\n        this.mapoffset.transform(x,y);\n        this.celloffset.setTo(Math.round(this.mapoffset.x),Math.round(this.mapoffset.y));\n    }\n\n    // maybe should be in the map class\n    drawMap (canvas, startpoint) {\n\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\n        ctx.fillStyle = \"#00000\";\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        let cellapparentsize = this.cellsize*this.scale;\n\n        // finding location in terms of iterators of current cell\n        let {cell_i, cell_j, cell_k, cell_l} = this.map_grid.getChunkPosOffset(this.currentcell, this.chunksize, startpoint);\n\n        let blockid;\n        let x;\n        let y;\n\n        let doFill = (i,j,k,l) => {\n\n            x = ((i+startpoint.x)*this.chunksize+k)*(cellapparentsize)+this.mapoffset.x;\n            y = ((j+startpoint.y)*this.chunksize+l)*(cellapparentsize)+this.mapoffset.y;\n\n            ctx.fillRect(x, y, cellapparentsize, cellapparentsize);\n        }\n\n        // for map\n        for (let i=0;i<this.map_grid.matrix.length;i++) {\n            for (let j=0;j<this.map_grid.matrix[i].length;j++) {\n                // for each chunk\n                for (let c=0;c<(this.chunksize*this.chunksize);c++) {\n                    let k = Math.floor(c/this.chunksize);\n                    let l = c-(k*this.chunksize);\n\n                    if (typeof this.map_grid.matrix[i][j] === 'undefined') continue;\n                    blockid = this.map_grid.matrix[i][j].modified_cells[c];\n\n                    if (blockid!==0){\n                        ctx.fillStyle = blocks[blockid].imagesrc; // placeholder until get images\n                        doFill(i,j,k,l,blockid);\n                    }\n                }\n            }\n        }\n        ctx.fillStyle = blocks[this.getBlockSelected()].imagesrc+\"8f\"; // placeholder until get images\n        doFill(cell_i,cell_j,cell_k,cell_l);\n    }\n\n    updateCanvas() {\n        let start = Date.now(); // time testing\n\n        this.resizeCanvas(this.canvas);\n        this.map_grid.generateChunks(this.mapoffset, this.cellsize, this.scale, this.chunksize)\n        .then((startpoint)=>{\n            this.startpoint = startpoint;\n            this.drawMap(this.canvas, startpoint);\n\n            console.log(\"updatinggggggg\");\n            let delta = Date.now()-start;\n            this.changeUpdateTime(delta);\n        });\n        \n        // requestAnimationFrame(() => {this.drawMap(this.canvas, startpoint);});\n    }\n\n    // stolen code lmao\n    resizeCanvas(canvas) {\n        const { width, height } = canvas.getBoundingClientRect();\n        \n        if (canvas.width !== width || canvas.height !== height) {\n          const { devicePixelRatio:ratio=1 } = window;\n          const context = canvas.getContext('2d');\n          canvas.width = width*ratio;\n          canvas.height = height*ratio;\n          context.scale(ratio, ratio);\n          return true;\n        }\n    \n        return false\n    }\n\n    drawCellAtMouse(x,y) {\n        const currentpos = new Vector2D(x-this.celloffset.x,y-this.celloffset.y);\n        let {cell_i, cell_j, cell_k, cell_l} = this.map_grid.getChunkPosOffset(currentpos, this.chunksize, this.startpoint);\n        this.map_grid.matrix[cell_i][cell_j].addCell(cell_k, cell_l, this.getBlockSelected());\n        // console.log(`cell drawn at chunk ${cell_i},${cell_j}`);\n    }\n\n    moveCursor(event) {\n        let update = false;\n        let newcursorcurrent = this.getCursorPosition(event, this.canvas);\n        if (this.rmousedown) {\n            this.moveMap(this.cursorcurrent, newcursorcurrent);\n            update = true;\n        }\n        this.cursorcurrent = newcursorcurrent;\n        let newcurrentcell = this.getCurrentCell();\n        if (!this.currentcell.isEqualTo(newcurrentcell)) {\n            if (this.lmousedown) {\n\n                plotLine(this.currentcell, newcurrentcell, this.celloffset, (x,y)=>this.drawCellAtMouse(x,y));\n            }\n            this.currentcell = newcurrentcell;\n            update = true;\n        }\n        \n        return update;\n    }\n\n    render() {\n        return (\n            <div>\n            <canvas \n                ref={this.canvasRef} \n                className='map-canvas primary'\n                onContextMenu={(e) => {\n                    e.preventDefault();\n                    // this.rmousedown=true;\n                }}\n                onMouseDown={(e) => {\n                    e.preventDefault();\n                    if (e.button === 0) {\n                        this.lmousedown=true;\n                        plotLine(this.currentcell,this.currentcell,this.celloffset, (x,y)=>this.drawCellAtMouse(x,y));\n                        this.updateCanvas();\n                    }\n                    else if (e.button === 2) {\n                        this.rmousedown=true;\n                    }\n                }}\n                onMouseUp={(e) => {\n                    this.lmousedown=false;\n                    this.rmousedown=false;\n                }}\n                onMouseMove={(e) => {\n                    let update = false;\n\n                    update = this.moveCursor(e);\n\n                    if (update) this.updateCanvas();\n                }}\n                onMouseLeave={(e) => {\n                    // console.log(\"left canvas\");\n                    this.moveCursor(e);\n                    this.lmousedown=false;\n                    this.rmousedown=false;\n                    this.currentcell.setTo(-1,-1);\n                    this.updateCanvas()\n                }}\n                onWheel={(e) => {\n                    e.preventDefault();\n                    let newscale = this.scale + Math.round(e.deltaY)/100;\n                    if (newscale>0.5) this.scale = newscale;\n                    else this.scale = 0.5;\n                    // console.log(this.scale);\n                    // console.log(e.deltaY);\n                    this.updateCanvas();\n                    // if (this.scale < 1) console.table(this.map_grid.matrix);\n                }}\n            ></canvas>\n            </div>\n        )\n    }\n}\n\n// needs to be fixed up - maybe add useEffect()\nclass Palette extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.changeBlock = props.changeBlock;\n    }\n\n    render() {\n        return (\n            <div className='palette primary'>\n                {\n                    blocks.map(button => (\n                        <div \n                            key={button.blockid} \n                            style={{backgroundColor: `${button.imagesrc}`}} \n                            className={`blockbutton` + (this.props.isSelected(button.blockid) ? \"selected\" : \"\")}\n                            onClick={() => {this.changeBlock(button.blockid)}}\n                            //onClick={() => {console.log(button.blockid)}}\n                            ></div>\n                    ))\n                }\n        </div>\n        )\n    }\n\n}\n\n\n\n\nfunction App() {\n  return (\n    <div className='App'>\n        <AppWrapper/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}