{"ast":null,"code":"import _possibleConstructorReturn from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alex/Programming/web_development/map_dev_server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar _jsxFileName = \"/Users/alex/Programming/web_development/map_dev_server/client/src/App.js\";\nimport './App.css';\nimport React, { createRef } from 'react';\nimport { createImageData } from 'canvas';\nvar CHUNKSIZE = 16;\nvar LOWESTSCALE = 3;\nvar DRAWTOOL = 0;\nvar EYEDROPTOOL = 1;\nvar MOVETOOL = 2;\n\n// const blocks = [\n//     {\n//         blockid: '0',\n//         blockname: '1',\n//         imagesrc: '#ffffff'\n//     },\n//     {\n//         blockid: '1',\n//         blockname: '2',\n//         imagesrc: '#d1e7dc'\n//     },\n//     {\n//         blockid: '2',\n//         blockname: '3',\n//         imagesrc: '#c4d4e1'\n//     },\n//     {\n//         blockid: '3',\n//         blockname: '4',\n//         imagesrc: '#bcb5d3'\n//     },\n//     {\n//         blockid: '4',\n//         blockname: '5',\n//         imagesrc: '#f5dbe2'\n//     },\n//     {\n//         blockid: '5',\n//         blockname: '6',\n//         imagesrc: '#eeb6c9'\n//     },\n//     {\n//         blockid: '6',\n//         blockname: '7',\n//         imagesrc: '#c49abf'\n//     },\n//     {\n//         blockid: '7',\n//         blockname: '8',\n//         imagesrc: '#bada55'\n//     },\n//     {\n//         blockid: '8',\n//         blockname: '9',\n//         imagesrc: '#ffd700'\n//     },\n//     {\n//         blockid: '9',\n//         blockname: '10',\n//         imagesrc: '#f47b79'\n//     },\n//     {\n//         blockid: 'a',\n//         blockname: '11',\n//         imagesrc: '#c6e2d4'\n//     },\n//     {\n//         blockid: 'b',\n//         blockname: '12',\n//         imagesrc: '#b6d3c2'\n//     },\n//     {\n//         blockid: 'c',\n//         blockname: '13',\n//         imagesrc: '#e0b1cb'\n//     },\n//     {\n//         blockid: 'd',\n//         blockname: '14',\n//         imagesrc: '#d0a7b7'\n//     },\n//     {\n//         blockid: 'e',\n//         blockname: '15',\n//         imagesrc: '#f3d1d3'\n//     },\n//     {\n//         blockid: 'f',\n//         blockname: '16',\n//         imagesrc: '#e9b8c8'\n//     }\n// ];\n\nvar colors = [\"#000000\",\n// Black\n\"#FFFFFF\",\n// White\n\"#FF0000\",\n// Red\n\"#00FF00\",\n// Green\n\"#0000FF\",\n// Blue\n\"#FFFF00\",\n// Yellow\n\"#FF00FF\",\n// Magenta\n\"#00FFFF\",\n// Cyan\n\"#800000\",\n// Maroon\n\"#008000\",\n// Olive\n\"#000080\",\n// Navy\n\"#808000\",\n// Olive Drab\n\"#800080\",\n// Purple\n\"#008080\",\n// Teal\n\"#808080\",\n// Gray\n\"#C0C0C0\",\n// Silver\n\"#FFC0CB\",\n// Pink\n\"#FFA07A\",\n// Light Salmon\n\"#FF7F50\",\n// Coral\n\"#FF6347\",\n// Tomato\n\"#FF4500\",\n// Orange Red\n\"#FF8C00\",\n// Dark Orange\n\"#FFD700\",\n// Gold\n\"#FFFFE0\",\n// Light Yellow\n\"#EEE8AA\",\n// Pale Goldenrod\n\"#ADFF2F\",\n// Green Yellow\n\"#32CD32\",\n// Lime Green\n\"#00FA9A\",\n// Medium Spring Green\n\"#00CED1\",\n// Dark Turquoise\n\"#6A5ACD\",\n// Slate Blue\n\"#7B68EE\",\n// Medium Slate Blue\n\"#FF69B4\",\n// Hot Pink\n\"#8B4513\" // Saddle Brown\n];\n\nfunction plotLineLow(x0, y0, x1, y1, drawFunc) {\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  var yi = 1;\n  if (dy < 0) {\n    yi = -1;\n    dy = -dy;\n  }\n  var D = 2 * dy - dx;\n  var y = y0;\n  for (var x = x0; x < x1 + 1; x++) {\n    drawFunc(x, y);\n    if (D > 0) {\n      y = y + yi;\n      D = D + 2 * (dy - dx);\n    } else {\n      D = D + 2 * dy;\n    }\n  }\n}\nfunction plotLineHigh(x0, y0, x1, y1, drawFunc) {\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  var xi = 1;\n  if (dx < 0) {\n    xi = -1;\n    dx = -dx;\n  }\n  var D = 2 * dx - dy;\n  var x = x0;\n  for (var y = y0; y < y1 + 1; y++) {\n    drawFunc(x, y);\n    if (D > 0) {\n      x = x + xi;\n      D = D + 2 * (dx - dy);\n    } else {\n      D = D + 2 * dx;\n    }\n  }\n}\nfunction plotLine(p1, p2, offset, drawFunc) {\n  var x0 = p1.x + offset.x;\n  var y0 = p1.y + offset.y;\n  var x1 = p2.x + offset.x;\n  var y1 = p2.y + offset.y;\n  if (x0 === x1 && y0 === y1) drawFunc(x0, y0);\n  if (Math.abs(y1 - y0) < Math.abs(x1 - x0)) {\n    if (x0 > x1) plotLineLow(x1, y1, x0, y0, drawFunc);else plotLineLow(x0, y0, x1, y1, drawFunc);\n  } else {\n    if (y0 > y1) plotLineHigh(x1, y1, x0, y0, drawFunc);else plotLineHigh(x0, y0, x1, y1, drawFunc);\n  }\n}\nfunction colorTo32Uint(colorstring) {\n  return parseInt(colorstring.substring(1), 16);\n}\nfunction colorToString(colornum) {\n  return \"#\" + (colornum & 0x00FFFFFF).toString(16).padStart(6, '0');\n}\nvar Vector2D = /*#__PURE__*/function () {\n  function Vector2D(x, y) {\n    _classCallCheck(this, Vector2D);\n    this.x = x;\n    this.y = y;\n  }\n  _createClass(Vector2D, [{\n    key: \"transform\",\n    value: function transform(x, y) {\n      this.x += x;\n      this.y += y;\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }, {\n    key: \"isEqualTo\",\n    value: function isEqualTo(othervector) {\n      return this.x === othervector.x && this.y === othervector.y;\n    }\n  }, {\n    key: \"notEqualTo\",\n    value: function notEqualTo(othervector) {\n      return this.x !== othervector.x || this.y !== othervector.y;\n    }\n  }, {\n    key: \"positive\",\n    value: function positive() {\n      return this.x >= 0 && this.y >= 0;\n    }\n  }, {\n    key: \"multipliedby\",\n    value: function multipliedby(number) {\n      return new Vector2D(this.x * number, this.y * number);\n    }\n  }, {\n    key: \"transformedby\",\n    value: function transformedby(x, y) {\n      return new Vector2D(this.x + x, this.y + y);\n    }\n  }]);\n  return Vector2D;\n}();\nvar Map = /*#__PURE__*/function () {\n  function Map() {\n    _classCallCheck(this, Map);\n    // this.canvasdimensions = new Vector2D(w,h); // establishing at start means no resizing canvas element\n    this.data = null;\n    this.dataview = null;\n    this.numchunks = null;\n  }\n  _createClass(Map, [{\n    key: \"getValues\",\n    value: function getValues(canvas, offset, scale) {\n      var chunkpixels = CHUNKSIZE * scale;\n      var numchunks = new Vector2D(0, 0);\n      var startpoint = new Vector2D(0, 0);\n      startpoint.x = offset.x === 0 ? 0 : Math.floor(-1 * offset.x / chunkpixels);\n      startpoint.y = offset.y === 0 ? 0 : Math.floor(-1 * offset.y / chunkpixels);\n      var _canvas$getBoundingCl = canvas.getBoundingClientRect(),\n        width = _canvas$getBoundingCl.width,\n        height = _canvas$getBoundingCl.height;\n      numchunks.x = Math.ceil(width / chunkpixels) + 1; // bit cheaty - should probs optimise\n      numchunks.y = Math.ceil(height / chunkpixels) + 1;\n      return {\n        startpoint: startpoint,\n        numchunks: numchunks\n      };\n    }\n  }, {\n    key: \"setMatrix\",\n    value: function setMatrix(dimn, start, lines) {\n      var coords = [];\n      var map_grid = this;\n      for (var i = 0; i < dimn.x; i++) {\n        for (var j = 0; j < dimn.y; j++) {\n          var coordsobj = {\n            x: start.x + i,\n            y: start.y + j\n          };\n          coords.push(coordsobj);\n        }\n      }\n      return new Promise(function (resolve, reject) {\n        fetch('/getchunks', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/octet-stream',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            coords: coords,\n            lines: lines\n          })\n        }).then(function (data) {\n          return data.arrayBuffer();\n        }).then(function (chunkbuffer) {\n          // console.log([...new Uint8Array(chunkbuffer)].map(x => x.toString(16).padStart(2, '0')));\n          // map_grid.data = chunkbuffer;\n          // map_grid.dataview = new Uint32Array(map_grid.data);\n          map_grid.numchunks = dimn;\n          var cellsize = 10;\n          map_grid.data = new ArrayBuffer(chunkbuffer.byteLength * cellsize * cellsize);\n          map_grid.dataview = new Uint32Array(map_grid.data);\n\n          // let tempArrayBuffer = new ArrayBuffer(chunkbuffer);\n          var Uint32data = new Uint32Array(chunkbuffer);\n          console.log(new Uint8Array(chunkbuffer));\n          console.log(chunkbuffer.byteLength, chunkbuffer.byteLength * cellsize * cellsize);\n          console.log(\"total arraybuffer dimesniosns: \", chunkbuffer.byteLength * cellsize * cellsize / (map_grid.numchunks.x * cellsize), chunkbuffer.byteLength * cellsize * cellsize / (map_grid.numchunks.y * cellsize));\n          for (var _i = 0; _i < map_grid.numchunks.x; _i++) {\n            for (var _j = 0; _j < map_grid.numchunks.y; _j++) {\n              for (var k = 0; k < CHUNKSIZE; k++) {\n                for (var l = 0; l < CHUNKSIZE; l++) {\n                  var bmp_index = _i * CHUNKSIZE * cellsize + _j * map_grid.numchunks.x * (CHUNKSIZE * CHUNKSIZE) * cellsize * cellsize + k * cellsize + l * map_grid.numchunks.y * CHUNKSIZE * cellsize * cellsize;\n                  var alex_index = map_grid.getDataIndex(_i, _j, k, l);\n                  // map_grid.dataview[bmp_index] = Uint32data[alex_index];\n                  for (var a = 0; a < cellsize; a++) {\n                    for (var b = 0; b < cellsize; b++) {\n                      if (a == 1 && b == 1) bmp_index += a + b * map_grid.numchunks.x * CHUNKSIZE * cellsize;\n                      // bmp_index += a + b*map_grid.numchunks.x*cellsize*cellsize;\n                      // let bmp_index = i*CHUNKSIZE*cellsize+j*map_grid.numchunks.x*(CHUNKSIZE*CHUNKSIZE)*cellsize*cellsize+(k*cellsize+a)+(l*cellsize*cellsize+b)*map_grid.numchunks.x*CHUNKSIZE;\n                      map_grid.dataview[bmp_index] = Uint32data[alex_index];\n                    }\n                  }\n                }\n              }\n            }\n          }\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"getChunkPosOffset\",\n    value: function getChunkPosOffset(currentcell, startpoint) {\n      var i = Math.floor(currentcell.x / CHUNKSIZE) - startpoint.x;\n      var k = currentcell.x - (i + startpoint.x) * CHUNKSIZE;\n      var j = Math.floor(currentcell.y / CHUNKSIZE) - startpoint.y;\n      var l = currentcell.y - (j + startpoint.y) * CHUNKSIZE;\n      return {\n        i: i,\n        j: j,\n        k: k,\n        l: l\n      };\n    }\n  }, {\n    key: \"addCell\",\n    value: function addCell(index, colorhex) {\n      this.dataview[index] = colorhex;\n      // console.log(data[index], colorhex);\n    }\n  }, {\n    key: \"getDataIndex\",\n    value: function getDataIndex(i, j, k, l) {\n      return i * this.numchunks.y * (CHUNKSIZE * CHUNKSIZE) + j * (CHUNKSIZE * CHUNKSIZE) + k * CHUNKSIZE + l;\n    }\n  }]);\n  return Map;\n}();\nvar AppWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(AppWrapper, _React$Component);\n  function AppWrapper(props) {\n    var _this;\n    _classCallCheck(this, AppWrapper);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppWrapper).call(this, props));\n    _this.state = {\n      tool_mode: MOVETOOL,\n      debug_mode: false,\n      show_stats: true,\n      color_selected: 1672153,\n      update: {\n        time: 0,\n        tot_time: 0,\n        num_updates: 1\n      },\n      draw: {\n        time: 0,\n        tot_time: 0,\n        num_updates: 1\n      },\n      cursorx: 0,\n      cursory: 0,\n      offsetx: 0,\n      offsety: 0,\n      chunkx: 0,\n      chunky: 0,\n      cxstart: 0,\n      cystart: 0,\n      cxend: 0,\n      cyend: 0\n    };\n    _this.getColorSelected = function () {\n      return _this.state.color_selected;\n    };\n    _this.getDebugMode = function () {\n      return _this.state.debug_mode;\n    };\n    _this.getToolMode = function () {\n      return _this.state.tool_mode;\n    };\n    _this.changeToolMode = function (change_to) {\n      _this.setState({\n        tool_mode: change_to\n      });\n    };\n    _this.changeColor = function (color) {\n      if (typeof color === 'string') {\n        var out_num = colorTo32Uint(color);\n        _this.setState({\n          color_selected: out_num\n        });\n      } else if (typeof color === 'number') {\n        _this.setState({\n          color_selected: color\n        });\n      }\n      _this.changeToolMode(DRAWTOOL);\n    };\n    _this.isSelected = function (color) {\n      if (typeof color === 'string') {\n        var out_num = colorTo32Uint(color);\n        return out_num === _this.state.color_selected;\n      } else if (typeof color === 'number') {\n        return color === _this.state.color_selected;\n      }\n    };\n    _this.changeUpdateTime = function (new_time) {\n      _this.setState({\n        update: {\n          time: new_time,\n          tot_time: _this.state.update.tot_time + new_time,\n          num_updates: _this.state.update.num_updates + 1\n        }\n      });\n    };\n    _this.changeDrawTime = function (new_time) {\n      _this.setState({\n        draw: {\n          time: new_time,\n          tot_time: _this.state.draw.tot_time + new_time,\n          num_updates: _this.state.draw.num_updates + 1\n        }\n      });\n    };\n    _this.changeCursorLoc = function (vector) {\n      _this.setState({\n        cursorx: vector.x,\n        cursory: vector.y\n      });\n    };\n    _this.changeOffsetLoc = function (vector) {\n      _this.setState({\n        offsetx: vector.x,\n        offsety: vector.y\n      });\n    };\n    _this.changeChunkLoc = function (x, y) {\n      _this.setState({\n        chunkx: x,\n        chunky: y\n      });\n    };\n    return _this;\n  }\n  _createClass(AppWrapper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.body.style.overflow = \"hidden\"; // stops user from scrolling the page\n    }\n  }, {\n    key: \"mapDownload\",\n    value: function mapDownload() {\n      var filename;\n      var coordsobj = {\n        x1: this.state.cxstart,\n        y1: this.state.cystart,\n        x2: this.state.cxend,\n        y2: this.state.cyend\n      };\n      if (coordsobj.x1 === coordsobj.x2 || coordsobj.y1 === coordsobj.y2 || coordsobj.x1 > coordsobj.x2 || coordsobj.y1 > coordsobj.y2) return;\n      fetch('/getimage', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/octet-stream',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(coordsobj)\n      }).then(function (response) {\n        filename = response.headers.get('Content-Disposition').split('\"')[1];\n        return response.blob();\n      }).then(function (pngblob) {\n        var url = window.URL.createObjectURL(pngblob);\n        var link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', filename);\n        document.body.appendChild(link);\n        link.click();\n        link.parentNode.removeChild(link);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MapCanvas, {\n        toolmode: this.state.tool_mode,\n        getToolMode: this.getToolMode,\n        changeToolMode: this.changeToolMode,\n        getDebugMode: this.getDebugMode,\n        changeUpdateTime: this.changeUpdateTime,\n        changeDrawTime: this.changeDrawTime,\n        getColorSelected: this.getColorSelected,\n        changeCursorLoc: this.changeCursorLoc,\n        changeOffsetLoc: this.changeOffsetLoc,\n        changeChunkLoc: this.changeChunkLoc,\n        changeColor: this.changeColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Palette, {\n        isSelected: this.isSelected,\n        changeColor: this.changeColor,\n        color: this.state.color_selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drawer primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 17\n        }\n      }, this.state.show_stats ? /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: \"absolute\",\n          right: \"0.8vw\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 47\n        }\n      }, \"(\", this.state.update.time, \"ms, avg: \", Math.round(this.state.update.tot_time / this.state.update.num_updates), \"ms, \", this.state.update.num_updates, \" updates)\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 25\n        }\n      }), \"(\", this.state.draw.time, \"ms, avg: \", Math.round(this.state.draw.tot_time / this.state.draw.num_updates), \"ms, \", this.state.draw.num_updates, \" draws)\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 25\n        }\n      }), \"Cursor: (\", this.state.cursorx, \",\", this.state.cursory, \")\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 25\n        }\n      }), \"Offset: (\", this.state.offsetx, \",\", this.state.offsety, \")\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 25\n        }\n      }), \"Chunk: (\", this.state.chunkx, \",\", this.state.chunky, \")\") : null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbutton\" + (this.getToolMode() === DRAWTOOL ? \"selected\" : \"\") + \" blockbutton\" + (this.getToolMode() === DRAWTOOL ? \"selected\" : \"\"),\n        onClick: function onClick() {\n          _this2.changeToolMode(DRAWTOOL);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 21\n        }\n      }, \"draw\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbutton\" + (this.getToolMode() === EYEDROPTOOL ? \"selected\" : \"\") + \" blockbutton\" + (this.getToolMode() === EYEDROPTOOL ? \"selected\" : \"\"),\n        onClick: function onClick() {\n          _this2.changeToolMode(EYEDROPTOOL);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }\n      }, \"eyedrop\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbutton\" + (this.getToolMode() === MOVETOOL ? \"selected\" : \"\") + \" blockbutton\" + (this.getToolMode() === MOVETOOL ? \"selected\" : \"\"),\n        onClick: function onClick() {\n          _this2.changeToolMode(MOVETOOL);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 21\n        }\n      }, \"move\"), /*#__PURE__*/React.createElement(\"input\", {\n        checked: this.state.debug_mode,\n        type: \"checkbox\",\n        onChange: function onChange() {\n          _this2.setState({\n            debug_mode: !_this2.state.debug_mode\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 21\n        }\n      }), \" Debug Mode\\u2002\", /*#__PURE__*/React.createElement(\"input\", {\n        checked: this.state.show_stats,\n        type: \"checkbox\",\n        onChange: function onChange() {\n          _this2.setState({\n            show_stats: !_this2.state.show_stats\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 21\n        }\n      }), \" Stats\", /*#__PURE__*/React.createElement(\"table\", {\n        className: \"download-wrapper\"\n        // onClick={() => this.fileDownload()}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 33\n        }\n      }, \"from:\\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n        defaultValue: \"0\",\n        type: \"number\",\n        style: {\n          width: \"35px\"\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            cxstart: parseInt(e.target.value)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 51\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        defaultValue: \"0\",\n        type: \"number\",\n        style: {\n          width: \"35px\"\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            cystart: parseInt(e.target.value)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 33\n        }\n      }, \"to:\\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n        defaultValue: \"0\",\n        type: \"number\",\n        style: {\n          width: \"35px\"\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            cxend: parseInt(e.target.value)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        defaultValue: \"0\",\n        type: \"number\",\n        style: {\n          width: \"35px\"\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            cyend: parseInt(e.target.value)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 33\n        }\n      }, \"Save PNG:\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"download-button\",\n        onClick: function onClick() {\n          return _this2.mapDownload();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"save.png\",\n        alt: \"save\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 103\n        }\n      }))))))));\n    }\n  }]);\n  return AppWrapper;\n}(React.Component);\nvar MapCanvas = /*#__PURE__*/function (_React$Component2) {\n  _inherits(MapCanvas, _React$Component2);\n  function MapCanvas(props) {\n    var _this3;\n    _classCallCheck(this, MapCanvas);\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(MapCanvas).call(this, props));\n    _this3.drawLines = [];\n    _this3.lastdraw = 0;\n    _this3.scale = 16;\n    _this3.tempscale = _this3.scale;\n    _this3.cellpos = {\n      i: 0,\n      j: 0,\n      k: 0,\n      l: 0\n    };\n    _this3.map_grid = null;\n    _this3.canvasRef = createRef();\n    _this3.canvasRef2 = createRef();\n    _this3.mapoffset = new Vector2D(0, 0);\n    _this3.celloffset = new Vector2D(0, 0);\n    _this3.currentcell = new Vector2D(0, 0);\n    _this3.startpoint = new Vector2D(0, 0);\n    _this3.cursorcurrent = new Vector2D(0, 0);\n    _this3.lmousedown = false;\n    _this3.rmousedown = false;\n    _this3.canvas = null;\n    _this3.is_updating = false;\n    _this3.drawcache = [];\n    return _this3;\n  }\n\n  //Called after element's initialisation\n  _createClass(MapCanvas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n      this.canvas = this.canvasRef.current;\n      this.map_grid = new Map();\n      this.resizeCanvas(this.canvas);\n      window.addEventListener('resize', function () {\n        return _this4.resizeCanvas(_this4.canvas);\n      });\n      setTimeout(this.updateCanvas(), 1000);\n    }\n  }, {\n    key: \"getCursorPosition\",\n    value: function getCursorPosition(event, canvas) {\n      var rect = canvas.getBoundingClientRect();\n      var x = event.clientX - rect.left;\n      var y = event.clientY - rect.top;\n      var pos = new Vector2D(x, y);\n      return pos;\n    }\n  }, {\n    key: \"getCurrentCell\",\n    value: function getCurrentCell() {\n      var x = Math.floor((this.cursorcurrent.x - this.mapoffset.x * this.scale) / this.scale);\n      var y = Math.floor((this.cursorcurrent.y - this.mapoffset.y * this.scale) / this.scale);\n      var pos = new Vector2D(x, y);\n      return pos;\n    }\n  }, {\n    key: \"moveMap\",\n    value: function moveMap(start, end) {\n      var x = (end.x - start.x) / this.scale;\n      var y = (end.y - start.y) / this.scale;\n      this.mapoffset.transform(x, y);\n      this.celloffset.setTo(Math.floor(this.mapoffset.x), Math.floor(this.mapoffset.y));\n      this.props.changeOffsetLoc(this.celloffset);\n    }\n  }, {\n    key: \"drawMap\",\n    value: function drawMap(canvas, startpoint, isupdate) {\n      var _this5 = this;\n      // let blob = new Blob([this.map_grid.data]);\n      // console.log(blob);\n\n      var newCanvas = this.canvasRef2.current;\n      var imageData = new ImageData(new Uint8ClampedArray(this.map_grid.data), this.map_grid.numchunks.x * CHUNKSIZE * 10);\n      // let imageData = createImageData(new Uint8ClampedArray(this.map_grid.data), this.map_grid.numchunks.x*CHUNKSIZE*CHUNKSIZE);\n      console.log(imageData);\n      var bctx = canvas.getContext(\"2d\");\n      // bctx.transferFromImageData(bitmap);\n      newCanvas.getContext(\"2d\").putImageData(imageData, 0, 0);\n      // bctx.scale(1.1,1.1);\n      bctx.drawImage(newCanvas, 100, 100);\n      return;\n      var start = Date.now();\n\n      // if (start < (this.lastdraw + 1000/60)) return; // Only drawing every 1/60th of a second\n      this.lastdraw = start;\n      var _canvas$getBoundingCl2 = canvas.getBoundingClientRect(),\n        width = _canvas$getBoundingCl2.width,\n        height = _canvas$getBoundingCl2.height;\n      var ctx = canvas.getContext(\"2d\", {\n        alpha: false\n      });\n      ctx.clearRect(0, 0, width, height);\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fillRect(0, 0, width, height);\n\n      // finding location in terms of iterators of current cell\n      // let {cell_i, cell_j, cell_k, cell_l} = this.map_grid.getChunkPosOffset(this.currentcell, startpoint);\n\n      var colornum;\n      var x;\n      var y;\n      var mapoffset_x = Math.floor(this.mapoffset.x * this.scale);\n      var mapoffset_y = Math.floor(this.mapoffset.y * this.scale);\n      // let mapoffset_x = this.mapoffset.x;\n      // let mapoffset_y = this.mapoffset.y;\n\n      var doFill = function doFill(i, j, k, l) {\n        x = ((i + startpoint.x) * CHUNKSIZE + k) * _this5.scale + mapoffset_x;\n        y = ((j + startpoint.y) * CHUNKSIZE + l) * _this5.scale + mapoffset_y;\n        if (x % 1 !== 0 || y % 1 !== 0 || _this5.scale % 1 !== 0) console.log(\"ALERT:\", x, y, _this5.scale);\n        ctx.fillRect(x, y, _this5.scale, _this5.scale);\n        // console.log(x,y,cellapparentsize);\n      };\n\n      if (this.map_grid.data === null) return;\n      // for map\n\n      var chunkbufferoffset = 0;\n      if (this.props.getDebugMode()) ctx.beginPath();\n      for (var i = 0; i < this.map_grid.numchunks.x; i++) {\n        for (var j = 0; j < this.map_grid.numchunks.y; j++) {\n          // for each chunk\n          if (this.props.getDebugMode()) {\n            x = (i + startpoint.x) * CHUNKSIZE * this.scale + mapoffset_x;\n            y = (j + startpoint.y) * CHUNKSIZE * this.scale + mapoffset_y;\n            ctx.fillStyle = \"#000000\";\n            ctx.lineWidth = 0.01 * Math.floor(this.scale);\n            ctx.moveTo(x, 0);\n            ctx.lineTo(x, height);\n            // ctx.stroke();\n            ctx.moveTo(0, y);\n            ctx.lineTo(width, y);\n          }\n          for (var c = 0; c < CHUNKSIZE * CHUNKSIZE; c++) {\n            var k = Math.floor(c / CHUNKSIZE);\n            var l = c - k * CHUNKSIZE;\n            colornum = this.map_grid.dataview[chunkbufferoffset + c];\n            if (colornum !== 16777215) {\n              ctx.fillStyle = colorToString(colornum);\n              doFill(i, j, k, l);\n            }\n          }\n          chunkbufferoffset += CHUNKSIZE * CHUNKSIZE;\n        }\n      }\n      if (this.props.getDebugMode()) ctx.stroke();\n      if (this.props.toolmode === DRAWTOOL) {\n        ctx.fillStyle = colorToString(this.props.getColorSelected()) + \"ff\";\n        doFill(this.cellpos.i, this.cellpos.j, this.cellpos.k, this.cellpos.l);\n      }\n      this.props.changeDrawTime(Date.now() - start);\n    }\n  }, {\n    key: \"updateCanvas\",\n    value: function updateCanvas() {\n      var _this6 = this;\n      var start = Date.now(); // time testing\n      var _this$map_grid$getVal = this.map_grid.getValues(this.canvas, this.mapoffset.multipliedby(this.scale), this.scale),\n        startpoint = _this$map_grid$getVal.startpoint,\n        numchunks = _this$map_grid$getVal.numchunks;\n      var linestosend = this.drawLines;\n      this.drawLines = [];\n      this.is_updating = true;\n      this.map_grid.setMatrix(numchunks, startpoint, linestosend).then(function () {\n        _this6.drawMap(_this6.canvas, startpoint, true);\n        _this6.startpoint = startpoint;\n        _this6.props.changeUpdateTime(Date.now() - start);\n        _this6.is_updating = false;\n      }).then(function () {\n        _this6.drawcache.forEach(function (draw) {\n          draw();\n        });\n      });\n      setTimeout(function () {\n        _this6.updateCanvas();\n      }, 1000);\n    } // stolen code lmao\n  }, {\n    key: \"resizeCanvas\",\n    value: function resizeCanvas(canvas) {\n      var _canvas$getBoundingCl3 = canvas.getBoundingClientRect(),\n        width = _canvas$getBoundingCl3.width,\n        height = _canvas$getBoundingCl3.height;\n      if (canvas.width !== width || canvas.height !== height) {\n        var _window = window,\n          _window$devicePixelRa = _window.devicePixelRatio,\n          ratio = _window$devicePixelRa === void 0 ? 1 : _window$devicePixelRa;\n        var context = canvas.getContext('2d');\n        canvas.width = 1 * width * ratio;\n        canvas.height = 1 * height * ratio;\n        context.scale(ratio, ratio);\n        //   canvas.style.width = `${width}px`;\n        //   canvas.style.height = `${height}px`;\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"drawCellAtMouse\",\n    value: function drawCellAtMouse(x, y) {\n      var currentpos = new Vector2D(x - this.celloffset.x, y - this.celloffset.y);\n      var _this$map_grid$getChu = this.map_grid.getChunkPosOffset(currentpos, this.startpoint),\n        i = _this$map_grid$getChu.i,\n        j = _this$map_grid$getChu.j,\n        k = _this$map_grid$getChu.k,\n        l = _this$map_grid$getChu.l;\n      var dataindex = this.map_grid.getDataIndex(i, j, k, l);\n      if (dataindex < this.map_grid.data.byteLength / 4) this.map_grid.addCell(dataindex, this.props.getColorSelected());\n    }\n  }, {\n    key: \"moveCursor\",\n    value: function moveCursor(event) {\n      var update = false;\n      var newcursorcurrent = this.getCursorPosition(event, this.canvas);\n      if (this.rmousedown) {\n        this.moveMap(this.cursorcurrent, newcursorcurrent);\n        update = true;\n      }\n      this.cursorcurrent = newcursorcurrent;\n      var newcurrentcell = this.getCurrentCell();\n      // Drawing line and updating stats\n      if (!this.currentcell.isEqualTo(newcurrentcell)) {\n        if (this.lmousedown) this.drawLine(this.currentcell, newcurrentcell);\n        this.currentcell = newcurrentcell;\n        this.cellpos = this.map_grid.getChunkPosOffset(this.currentcell, this.startpoint);\n        this.props.changeCursorLoc(this.currentcell);\n        this.props.changeChunkLoc(this.cellpos.i + this.startpoint.x, this.cellpos.j + this.startpoint.y);\n        update = true;\n      }\n      return update;\n    }\n  }, {\n    key: \"drawLine\",\n    value: function drawLine(p1, p2) {\n      var _this7 = this;\n      var thisdraw = function thisdraw() {\n        plotLine(p1, p2, _this7.celloffset, function (x, y) {\n          return _this7.drawCellAtMouse(x, y);\n        });\n      };\n      thisdraw();\n      if (this.is_updating) {\n        this.drawcache.push(thisdraw);\n      }\n      ;\n      this.drawLines.push({\n        p1: p1,\n        p2: p2,\n        offset: this.celloffset,\n        blockid: this.props.getColorSelected()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n      var getCursor = function getCursor() {\n        switch (_this8.props.toolmode) {\n          case EYEDROPTOOL:\n            return \"crosshair\";\n          case MOVETOOL:\n            return \"move\";\n          default:\n            return \"default\";\n        }\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"canvas\", {\n        ref: this.canvasRef2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"canvas\", {\n        ref: this.canvasRef,\n        className: \"map-canvas primary\",\n        style: {\n          cursor: getCursor()\n        },\n        onContextMenu: function onContextMenu(e) {\n          e.preventDefault();\n        },\n        onMouseDown: function onMouseDown(e) {\n          e.preventDefault();\n          if (e.button === 0) {\n            switch (_this8.props.toolmode) {\n              case EYEDROPTOOL:\n                console.log(\"eyedroptool used\");\n                var _this8$map_grid$getCh = _this8.map_grid.getChunkPosOffset(_this8.currentcell, _this8.startpoint),\n                  i = _this8$map_grid$getCh.i,\n                  j = _this8$map_grid$getCh.j,\n                  k = _this8$map_grid$getCh.k,\n                  l = _this8$map_grid$getCh.l;\n                var dataindex = _this8.map_grid.getDataIndex(i, j, k, l);\n                _this8.props.changeColor(_this8.map_grid.dataview[dataindex]);\n                // this.props.changeToolMode(DRAWTOOL);\n                break;\n              case MOVETOOL:\n                _this8.rmousedown = true;\n                break;\n              default:\n                _this8.lmousedown = true;\n                _this8.drawLine(_this8.currentcell, _this8.currentcell);\n                _this8.drawMap(_this8.canvas, _this8.startpoint);\n                break;\n            }\n          } else if (e.button === 2) {\n            _this8.rmousedown = true;\n          }\n        },\n        onMouseUp: function onMouseUp(e) {\n          _this8.lmousedown = false;\n          _this8.rmousedown = false;\n          _this8.drawMap(_this8.canvas, _this8.startpoint);\n        },\n        onMouseMove: function onMouseMove(e) {\n          if (_this8.moveCursor(e)) _this8.drawMap(_this8.canvas, _this8.startpoint);\n        },\n        onMouseLeave: function onMouseLeave(e) {\n          _this8.moveCursor(e);\n          _this8.lmousedown = false;\n          _this8.rmousedown = false;\n          _this8.drawMap(_this8.canvas, _this8.startpoint);\n        },\n        onWheel: function onWheel(e) {\n          var newscale = _this8.tempscale - Math.floor(e.deltaY) / 1000;\n          // console.log(this.scale, this.tempscale);\n          if (newscale > LOWESTSCALE) _this8.tempscale = newscale;else _this8.tempscale = LOWESTSCALE;\n          var oldscale = _this8.scale;\n          _this8.scale = Math.floor(_this8.tempscale);\n          if (oldscale !== _this8.scale) _this8.drawMap(_this8.canvas, _this8.startpoint);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n  return MapCanvas;\n}(React.Component); // needs to be fixed up - maybe add useEffect()\nvar Palette = /*#__PURE__*/function (_React$Component3) {\n  _inherits(Palette, _React$Component3);\n  function Palette(props) {\n    var _this9;\n    _classCallCheck(this, Palette);\n    _this9 = _possibleConstructorReturn(this, _getPrototypeOf(Palette).call(this, props));\n    _this9.handleChange = function (e) {\n      _this9.props.changeColor(e.target.value);\n    };\n    return _this9;\n  }\n  _createClass(Palette, [{\n    key: \"render\",\n    value: function render() {\n      var _this10 = this;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"palette primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 13\n        }\n      }, colors.map(function (color, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          style: {\n            backgroundColor: \"\".concat(color)\n          },\n          className: \"blockbutton\" + (_this10.props.isSelected(color) ? \"selected\" : \"\"),\n          onClick: function onClick() {\n            _this10.props.changeColor(color);\n          }\n          //onClick={() => {console.log(button.blockid)}}\n          ,\n          __self: _this10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 25\n          }\n        });\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        value: this.props.color,\n        type: \"color\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n  return Palette;\n}(React.Component);\nfunction App() {\n  return /*#__PURE__*/React.createElement(AppWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 5\n    }\n  });\n}\nexport default App;","map":{"version":3,"names":["React","createRef","createImageData","CHUNKSIZE","LOWESTSCALE","DRAWTOOL","EYEDROPTOOL","MOVETOOL","colors","plotLineLow","x0","y0","x1","y1","drawFunc","dx","dy","yi","D","y","x","plotLineHigh","xi","plotLine","p1","p2","offset","Math","abs","colorTo32Uint","colorstring","parseInt","substring","colorToString","colornum","toString","padStart","Vector2D","_classCallCheck","_createClass","key","value","transform","setTo","isEqualTo","othervector","notEqualTo","positive","multipliedby","number","transformedby","Map","data","dataview","numchunks","getValues","canvas","scale","chunkpixels","startpoint","floor","_canvas$getBoundingCl","getBoundingClientRect","width","height","ceil","setMatrix","dimn","start","lines","coords","map_grid","i","j","coordsobj","push","Promise","resolve","reject","fetch","method","headers","body","JSON","stringify","then","arrayBuffer","chunkbuffer","cellsize","ArrayBuffer","byteLength","Uint32Array","Uint32data","console","log","Uint8Array","k","l","bmp_index","alex_index","getDataIndex","a","b","getChunkPosOffset","currentcell","addCell","index","colorhex","AppWrapper","_React$Component","_inherits","props","_this","_possibleConstructorReturn","_getPrototypeOf","call","state","tool_mode","debug_mode","show_stats","color_selected","update","time","tot_time","num_updates","draw","cursorx","cursory","offsetx","offsety","chunkx","chunky","cxstart","cystart","cxend","cyend","getColorSelected","getDebugMode","getToolMode","changeToolMode","change_to","setState","changeColor","color","out_num","isSelected","changeUpdateTime","new_time","changeDrawTime","changeCursorLoc","vector","changeOffsetLoc","changeChunkLoc","componentDidMount","document","style","overflow","mapDownload","filename","x2","y2","response","get","split","blob","pngblob","url","window","URL","createObjectURL","link","createElement","href","setAttribute","appendChild","click","parentNode","removeChild","render","_this2","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","MapCanvas","toolmode","Palette","position","right","round","onClick","checked","type","onChange","defaultValue","e","target","src","alt","Component","_React$Component2","_this3","drawLines","lastdraw","tempscale","cellpos","canvasRef","canvasRef2","mapoffset","celloffset","cursorcurrent","lmousedown","rmousedown","is_updating","drawcache","_this4","current","resizeCanvas","addEventListener","setTimeout","updateCanvas","getCursorPosition","event","rect","clientX","left","clientY","top","pos","getCurrentCell","moveMap","end","drawMap","isupdate","_this5","newCanvas","imageData","ImageData","Uint8ClampedArray","bctx","getContext","putImageData","drawImage","Date","now","_canvas$getBoundingCl2","ctx","alpha","clearRect","fillStyle","fillRect","mapoffset_x","mapoffset_y","doFill","chunkbufferoffset","beginPath","lineWidth","moveTo","lineTo","c","stroke","_this6","_this$map_grid$getVal","linestosend","forEach","_canvas$getBoundingCl3","_window","_window$devicePixelRa","devicePixelRatio","ratio","context","drawCellAtMouse","currentpos","_this$map_grid$getChu","dataindex","moveCursor","newcursorcurrent","newcurrentcell","drawLine","_this7","thisdraw","blockid","_this8","getCursor","ref","cursor","onContextMenu","preventDefault","onMouseDown","button","_this8$map_grid$getCh","onMouseUp","onMouseMove","onMouseLeave","onWheel","newscale","deltaY","oldscale","_React$Component3","_this9","handleChange","_this10","map","backgroundColor","concat","App"],"sources":["/Users/alex/Programming/web_development/map_dev_server/client/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { createRef } from 'react';\nimport { createImageData } from 'canvas';\n\n\nconst CHUNKSIZE = 16;\n\nconst LOWESTSCALE = 3;\n\nconst DRAWTOOL = 0;\nconst EYEDROPTOOL = 1;\nconst MOVETOOL = 2;\n  \n// const blocks = [\n//     {\n//         blockid: '0',\n//         blockname: '1',\n//         imagesrc: '#ffffff'\n//     },\n//     {\n//         blockid: '1',\n//         blockname: '2',\n//         imagesrc: '#d1e7dc'\n//     },\n//     {\n//         blockid: '2',\n//         blockname: '3',\n//         imagesrc: '#c4d4e1'\n//     },\n//     {\n//         blockid: '3',\n//         blockname: '4',\n//         imagesrc: '#bcb5d3'\n//     },\n//     {\n//         blockid: '4',\n//         blockname: '5',\n//         imagesrc: '#f5dbe2'\n//     },\n//     {\n//         blockid: '5',\n//         blockname: '6',\n//         imagesrc: '#eeb6c9'\n//     },\n//     {\n//         blockid: '6',\n//         blockname: '7',\n//         imagesrc: '#c49abf'\n//     },\n//     {\n//         blockid: '7',\n//         blockname: '8',\n//         imagesrc: '#bada55'\n//     },\n//     {\n//         blockid: '8',\n//         blockname: '9',\n//         imagesrc: '#ffd700'\n//     },\n//     {\n//         blockid: '9',\n//         blockname: '10',\n//         imagesrc: '#f47b79'\n//     },\n//     {\n//         blockid: 'a',\n//         blockname: '11',\n//         imagesrc: '#c6e2d4'\n//     },\n//     {\n//         blockid: 'b',\n//         blockname: '12',\n//         imagesrc: '#b6d3c2'\n//     },\n//     {\n//         blockid: 'c',\n//         blockname: '13',\n//         imagesrc: '#e0b1cb'\n//     },\n//     {\n//         blockid: 'd',\n//         blockname: '14',\n//         imagesrc: '#d0a7b7'\n//     },\n//     {\n//         blockid: 'e',\n//         blockname: '15',\n//         imagesrc: '#f3d1d3'\n//     },\n//     {\n//         blockid: 'f',\n//         blockname: '16',\n//         imagesrc: '#e9b8c8'\n//     }\n// ];\n\nconst colors = [\n    \"#000000\", // Black\n    \"#FFFFFF\", // White\n    \"#FF0000\", // Red\n    \"#00FF00\", // Green\n    \"#0000FF\", // Blue\n    \"#FFFF00\", // Yellow\n    \"#FF00FF\", // Magenta\n    \"#00FFFF\", // Cyan\n    \"#800000\", // Maroon\n    \"#008000\", // Olive\n    \"#000080\", // Navy\n    \"#808000\", // Olive Drab\n    \"#800080\", // Purple\n    \"#008080\", // Teal\n    \"#808080\", // Gray\n    \"#C0C0C0\", // Silver\n    \"#FFC0CB\", // Pink\n    \"#FFA07A\", // Light Salmon\n    \"#FF7F50\", // Coral\n    \"#FF6347\", // Tomato\n    \"#FF4500\", // Orange Red\n    \"#FF8C00\", // Dark Orange\n    \"#FFD700\", // Gold\n    \"#FFFFE0\", // Light Yellow\n    \"#EEE8AA\", // Pale Goldenrod\n    \"#ADFF2F\", // Green Yellow\n    \"#32CD32\", // Lime Green\n    \"#00FA9A\", // Medium Spring Green\n    \"#00CED1\", // Dark Turquoise\n    \"#6A5ACD\", // Slate Blue\n    \"#7B68EE\", // Medium Slate Blue\n    \"#FF69B4\", // Hot Pink\n    \"#8B4513\" // Saddle Brown\n  ];\n  \n\n\nfunction plotLineLow(x0, y0, x1, y1, drawFunc) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    let yi = 1;\n    if (dy < 0) {\n        yi = -1;\n        dy = -dy;\n    }\n    let D = (2 * dy) - dx;\n    let y = y0;\n\n    for (let x = x0;x<x1+1;x++) {\n        drawFunc(x, y);\n        if (D > 0) {\n            y = y + yi;\n            D = D + (2 * (dy - dx));\n        } else {\n            D = D + 2*dy;\n        }\n    }\n}\nfunction plotLineHigh(x0, y0, x1, y1, drawFunc) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    let xi = 1;\n    if (dx < 0) {\n        xi = -1;\n        dx = -dx;\n    }\n    let D = (2 * dx) - dy;\n    let x = x0;\n\n    for (let y = y0;y<y1+1;y++) {\n        drawFunc(x, y);\n        if (D > 0) {\n            x = x + xi;\n            D = D + (2 * (dx - dy));\n        } else {\n            D = D + 2*dx;\n        }\n    }\n}\n\nfunction plotLine(p1, p2, offset, drawFunc) {\n    \n    let x0 = p1.x+offset.x;\n    let y0 = p1.y+offset.y;\n    \n    let x1 = p2.x+offset.x;\n    let y1 = p2.y+offset.y;\n\n    if (x0===x1 && y0===y1) drawFunc(x0,y0);\n\n\n    if (Math.abs(y1 - y0) < Math.abs(x1 - x0)) {\n        if (x0 > x1) plotLineLow(x1, y1, x0, y0, drawFunc);\n        else plotLineLow(x0, y0, x1, y1, drawFunc);\n    }\n    else {\n        if (y0 > y1) plotLineHigh(x1, y1, x0, y0, drawFunc);\n        else plotLineHigh(x0, y0, x1, y1, drawFunc);\n    }\n}\n\n\nfunction colorTo32Uint(colorstring) {\n    return parseInt(colorstring.substring(1), 16);\n}\nfunction colorToString(colornum) {\n    return \"#\" + (colornum & 0x00FFFFFF).toString(16).padStart(6, '0');\n}\n\nclass Vector2D {\n    constructor(x,y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    transform(x,y) {\n        this.x += x;\n        this.y += y;\n    }\n\n    setTo(x,y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isEqualTo(othervector) {\n        return (this.x===othervector.x && this.y===othervector.y);\n    }\n    notEqualTo(othervector) {\n        return (this.x!==othervector.x || this.y!==othervector.y);\n    }\n\n    positive() {\n        return (this.x >= 0 && this.y >=0);\n    }\n\n    multipliedby(number) {\n        return new Vector2D(this.x*number,this.y*number);\n    }\n    transformedby(x,y) {\n        return new Vector2D(this.x+x,this.y+y);\n    }\n}\n\n\nclass Map {\n    constructor() {\n        // this.canvasdimensions = new Vector2D(w,h); // establishing at start means no resizing canvas element\n        this.data = null;\n        this.dataview = null;\n        this.numchunks = null;\n    }\n\n    getValues(canvas, offset, scale) {\n        let chunkpixels = CHUNKSIZE*scale;\n\n        let numchunks = new Vector2D(0,0);\n        let startpoint = new Vector2D(0,0);\n\n        startpoint.x = (offset.x === 0) ? 0 : Math.floor((-1*offset.x)/chunkpixels);\n        startpoint.y = (offset.y === 0) ? 0 : Math.floor((-1*offset.y)/chunkpixels);\n\n        const { width, height } = canvas.getBoundingClientRect();\n\n        numchunks.x = Math.ceil(width/chunkpixels)+1; // bit cheaty - should probs optimise\n        numchunks.y = Math.ceil(height/chunkpixels)+1;\n\n        return {startpoint, numchunks};\n    }\n\n    setMatrix(dimn, start, lines) {\n\n        let coords = [];\n        let map_grid = this;\n\n        for (let i=0;i<dimn.x;i++) {\n            for (let j=0;j<dimn.y;j++) {\n                let coordsobj = { x: start.x+i, y: start.y+j };\n                coords.push(coordsobj);    \n            }\n        }\n        return new Promise(function(resolve, reject) {\n            fetch('/getchunks',{\n                method: 'POST',\n                headers: {'Accept': 'application/octet-stream', 'Content-Type': 'application/json'},\n                body: JSON.stringify({coords:coords, lines:lines})\n            }).then((data)=>{\n                return data.arrayBuffer();\n            }).then((chunkbuffer) => {\n                // console.log([...new Uint8Array(chunkbuffer)].map(x => x.toString(16).padStart(2, '0')));\n                // map_grid.data = chunkbuffer;\n                // map_grid.dataview = new Uint32Array(map_grid.data);\n                map_grid.numchunks = dimn;\n\n\n                const cellsize = 10;\n                map_grid.data = new ArrayBuffer(chunkbuffer.byteLength*cellsize*cellsize);\n                map_grid.dataview = new Uint32Array(map_grid.data);\n\n                // let tempArrayBuffer = new ArrayBuffer(chunkbuffer);\n                let Uint32data = new Uint32Array(chunkbuffer);\n                console.log(new Uint8Array(chunkbuffer));\n                \n                console.log(chunkbuffer.byteLength, chunkbuffer.byteLength*cellsize*cellsize);\n                console.log(\"total arraybuffer dimesniosns: \", chunkbuffer.byteLength*cellsize*cellsize/(map_grid.numchunks.x*cellsize), chunkbuffer.byteLength*cellsize*cellsize/(map_grid.numchunks.y*cellsize));\n\n                for (let i=0;i<map_grid.numchunks.x;i++) {\n                    for (let j=0;j<map_grid.numchunks.y;j++) {\n                        for (let k=0;k<CHUNKSIZE;k++) {\n                            for (let l=0;l<CHUNKSIZE;l++) {\n                                let bmp_index = i*CHUNKSIZE*cellsize+j*map_grid.numchunks.x*(CHUNKSIZE*CHUNKSIZE)*cellsize*cellsize+k*cellsize+l*map_grid.numchunks.y*CHUNKSIZE*cellsize*cellsize;\n                                let alex_index = map_grid.getDataIndex(i,j,k,l);\n                                // map_grid.dataview[bmp_index] = Uint32data[alex_index];\n                                for (let a=0;a<cellsize;a++) {\n                                    for (let b=0;b<cellsize;b++) {\n                                        if (a==1&&b==1) bmp_index+=a+b*map_grid.numchunks.x*CHUNKSIZE*cellsize;\n                                        // bmp_index += a + b*map_grid.numchunks.x*cellsize*cellsize;\n                                        // let bmp_index = i*CHUNKSIZE*cellsize+j*map_grid.numchunks.x*(CHUNKSIZE*CHUNKSIZE)*cellsize*cellsize+(k*cellsize+a)+(l*cellsize*cellsize+b)*map_grid.numchunks.x*CHUNKSIZE;\n                                        map_grid.dataview[bmp_index] = Uint32data[alex_index];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n\n\n\n\n                resolve();\n            });\n        });\n    }\n\n    getChunkPosOffset(currentcell, startpoint) {\n        const i = Math.floor((currentcell.x/CHUNKSIZE))-startpoint.x;\n        const k = currentcell.x - (i+startpoint.x)*CHUNKSIZE;\n\n        const j = Math.floor((currentcell.y/CHUNKSIZE))-startpoint.y;\n        const l = currentcell.y - (j+startpoint.y)*CHUNKSIZE;\n\n\n        return {i, j, k, l};\n    }\n\n    addCell(index,colorhex) {\n        this.dataview[index] = colorhex;\n        // console.log(data[index], colorhex);\n    }\n    getDataIndex(i,j,k,l) {\n        return i*(this.numchunks.y)*(CHUNKSIZE*CHUNKSIZE)+j*(CHUNKSIZE*CHUNKSIZE)+k*CHUNKSIZE+l;\n    }\n}\n\n\nclass AppWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tool_mode: MOVETOOL,\n            debug_mode: false,\n            show_stats: true,\n            color_selected: 1672153, \n            update: {\n                time: 0,\n                tot_time: 0,\n                num_updates: 1\n            },\n            draw: {\n                time: 0,\n                tot_time: 0,\n                num_updates: 1\n            },\n            cursorx: 0,\n            cursory: 0,\n            offsetx: 0,\n            offsety: 0,\n            chunkx: 0,\n            chunky: 0,\n\n            cxstart:0,\n            cystart:0,\n            cxend:0,\n            cyend:0\n        };\n\n        this.getColorSelected = () => {return this.state.color_selected};\n        this.getDebugMode = () => {return this.state.debug_mode};\n        this.getToolMode = () => {return this.state.tool_mode};\n\n        this.changeToolMode = (change_to) => {\n            this.setState({tool_mode: change_to});\n        }\n\n        this.changeColor = (color) => {\n            if (typeof color === 'string') {\n                let out_num = colorTo32Uint(color);\n                this.setState({color_selected: out_num});\n            }\n            else if (typeof color === 'number') {\n                this.setState({color_selected: color});\n            }\n            this.changeToolMode(DRAWTOOL);\n        };\n        this.isSelected = (color) => {\n            if (typeof color === 'string') {\n                let out_num = colorTo32Uint(color);\n                return (out_num===this.state.color_selected);\n            }\n            else if (typeof color === 'number') {\n                return (color===this.state.color_selected);\n            }\n        };\n\n        this.changeUpdateTime = (new_time) => {\n            this.setState({update:{\n                time: new_time, \n                tot_time: this.state.update.tot_time+new_time, \n                num_updates: this.state.update.num_updates+1\n            }});\n        }\n        this.changeDrawTime = (new_time) => {\n            this.setState({draw:{\n                time: new_time, \n                tot_time: this.state.draw.tot_time+new_time, \n                num_updates: this.state.draw.num_updates+1\n            }});\n        }\n        this.changeCursorLoc = (vector) => {\n            this.setState({cursorx: vector.x,cursory: vector.y});\n        }\n        this.changeOffsetLoc = (vector) => {\n            this.setState({offsetx: vector.x,offsety: vector.y});\n        }\n        this.changeChunkLoc = (x,y) => {\n            this.setState({chunkx: x,chunky: y});\n        }\n    }\n\n    componentDidMount() {\n        document.body.style.overflow = \"hidden\"; // stops user from scrolling the page\n    }\n\n    mapDownload() {\n        let filename;\n        let coordsobj = {x1:this.state.cxstart,y1:this.state.cystart,x2:this.state.cxend,y2:this.state.cyend};\n        if (coordsobj.x1===coordsobj.x2 || coordsobj.y1===coordsobj.y2 || coordsobj.x1>coordsobj.x2 || coordsobj.y1>coordsobj.y2) return;\n\n        fetch('/getimage',{\n            method: 'POST',\n            headers: {'Accept': 'application/octet-stream', 'Content-Type': 'application/json'},\n            body: JSON.stringify(coordsobj)\n        }).then((response) => {\n            filename = response.headers.get('Content-Disposition').split('\"')[1];\n            return response.blob()\n        })\n        .then((pngblob) => {\n            const url = window.URL.createObjectURL(pngblob);\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download',filename);\n            document.body.appendChild(link);\n            link.click();\n            link.parentNode.removeChild(link);\n        });\n    }\n\n    render() {\n        return (\n            <div className='App-wrapper'>\n                <MapCanvas \n                    toolmode={this.state.tool_mode}\n                    getToolMode={this.getToolMode}\n                    changeToolMode={this.changeToolMode}\n                    getDebugMode={this.getDebugMode}\n                    changeUpdateTime={this.changeUpdateTime}\n                    changeDrawTime={this.changeDrawTime}\n                    getColorSelected={this.getColorSelected}\n                    changeCursorLoc={this.changeCursorLoc}\n                    changeOffsetLoc={this.changeOffsetLoc}\n                    changeChunkLoc={this.changeChunkLoc}\n                    changeColor={this.changeColor}\n                />\n                <Palette isSelected={this.isSelected} changeColor={this.changeColor} color={this.state.color_selected}/>\n                <div className='drawer primary'>\n                    {(this.state.show_stats)?(<div style={{position: `absolute`,right:`0.8vw`}}>\n                        ({this.state.update.time}ms, avg: {Math.round(this.state.update.tot_time/this.state.update.num_updates)}ms, {this.state.update.num_updates} updates)\n                        <br/>({this.state.draw.time}ms, avg: {Math.round(this.state.draw.tot_time/this.state.draw.num_updates)}ms, {this.state.draw.num_updates} draws)\n                        <br/>Cursor: ({this.state.cursorx},{this.state.cursory})\n                        <br/>Offset: ({this.state.offsetx},{this.state.offsety})\n                        <br/>Chunk: ({this.state.chunkx},{this.state.chunky})\n                    </div>):null}\n\n                    <div\n                        className={`toolbutton` + (this.getToolMode()===DRAWTOOL ? \"selected\" : \"\")+ ` blockbutton` + (this.getToolMode()===DRAWTOOL ? \"selected\" : \"\")}\n                        onClick={() => {this.changeToolMode(DRAWTOOL)}}\n                    >draw</div>\n                    <div\n                        className={`toolbutton` + (this.getToolMode()===EYEDROPTOOL ? \"selected\" : \"\")+ ` blockbutton` + (this.getToolMode()===EYEDROPTOOL ? \"selected\" : \"\")}\n                        onClick={() => {this.changeToolMode(EYEDROPTOOL)}}\n                    >eyedrop</div>\n                    <div\n                        className={`toolbutton` + (this.getToolMode()===MOVETOOL ? \"selected\" : \"\")+ ` blockbutton` + (this.getToolMode()===MOVETOOL ? \"selected\" : \"\")}\n                        onClick={() => {this.changeToolMode(MOVETOOL)}}\n                    >move</div>\n                    \n\n                    <input checked={this.state.debug_mode} type={\"checkbox\"} onChange={()=>{this.setState({debug_mode:!this.state.debug_mode})}}></input> Debug Mode&ensp;\n                    <input checked={this.state.show_stats} type={\"checkbox\"} onChange={()=>{this.setState({show_stats:!this.state.show_stats})}}></input> Stats\n                    <table\n                        className={`download-wrapper`}\n                        // onClick={() => this.fileDownload()}\n                    ><tbody>\n                        <tr>\n                            <td>\n                                <p>from:&nbsp;</p><input defaultValue={\"0\"} type={\"number\"} style={{width:\"35px\"}} onChange={(e)=>this.setState({cxstart:parseInt(e.target.value)})}></input>\n                                <input defaultValue={\"0\"} type={\"number\"} style={{width:\"35px\"}} onChange={(e)=>this.setState({cystart:parseInt(e.target.value)})}></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <p>to:&nbsp;</p><input defaultValue={\"0\"} type={\"number\"} style={{width:\"35px\"}} onChange={(e)=>this.setState({cxend:parseInt(e.target.value)})}></input>\n                                <input defaultValue={\"0\"} type={\"number\"} style={{width:\"35px\"}} onChange={(e)=>this.setState({cyend:parseInt(e.target.value)})}></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <p >Save PNG:</p>\n                                <div className={`download-button`} onClick={() => this.mapDownload()}><img src='save.png' alt='save'/></div>\n                            </td>\n                        </tr>\n                    </tbody></table>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass MapCanvas extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.drawLines = [];\n\n        this.lastdraw = 0;\n\n        this.scale = 16;\n        this.tempscale = this.scale;\n\n        this.cellpos = {i:0,j:0,k:0,l:0};\n\n        this.map_grid = null;\n        this.canvasRef = createRef();\n        this.canvasRef2 = createRef();\n    \n        this.mapoffset = new Vector2D(0,0);\n        this.celloffset = new Vector2D(0,0);\n        this.currentcell = new Vector2D(0,0);\n        this.startpoint = new Vector2D(0,0);\n\n        this.cursorcurrent = new Vector2D(0,0);\n        this.lmousedown = false;\n        this.rmousedown = false;\n\n        this.canvas = null;\n\n        this.is_updating = false;\n        this.drawcache = [];\n    }\n\n\n    //Called after element's initialisation\n    componentDidMount() { \n        this.canvas = this.canvasRef.current;\n        this.map_grid = new Map();\n        this.resizeCanvas(this.canvas);\n        window.addEventListener('resize', ()=>this.resizeCanvas(this.canvas));\n        setTimeout(this.updateCanvas(), 1000);\n    }\n\n    getCursorPosition(event, canvas) {\n        const rect = canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        const pos = new Vector2D(x,y);\n        return pos;\n    }\n\n    getCurrentCell() {\n        let x = Math.floor((this.cursorcurrent.x-this.mapoffset.x*this.scale)/(this.scale));\n        let y = Math.floor((this.cursorcurrent.y-this.mapoffset.y*this.scale)/(this.scale));\n        const pos = new Vector2D(x,y);\n        return pos;\n    }\n\n    moveMap(start, end) {\n        let x = (end.x-start.x)/this.scale;\n        let y = (end.y-start.y)/this.scale;\n        this.mapoffset.transform(x,y);\n        this.celloffset.setTo(Math.floor(this.mapoffset.x),Math.floor(this.mapoffset.y));\n        this.props.changeOffsetLoc(this.celloffset);\n    }\n\n    drawMap (canvas, startpoint, isupdate) {\n\n        // let blob = new Blob([this.map_grid.data]);\n        // console.log(blob);\n\n        var newCanvas = this.canvasRef2.current;\n\n        let imageData = new ImageData(new Uint8ClampedArray(this.map_grid.data), this.map_grid.numchunks.x*CHUNKSIZE*10);\n        // let imageData = createImageData(new Uint8ClampedArray(this.map_grid.data), this.map_grid.numchunks.x*CHUNKSIZE*CHUNKSIZE);\n        console.log(imageData);\n        const bctx = canvas.getContext(\"2d\");\n        // bctx.transferFromImageData(bitmap);\n        newCanvas.getContext(\"2d\").putImageData(imageData, 0, 0);\n        // bctx.scale(1.1,1.1);\n        bctx.drawImage(newCanvas, 100, 100);        \n        return;\n\n\n        let start =  Date.now();\n\n        // if (start < (this.lastdraw + 1000/60)) return; // Only drawing every 1/60th of a second\n        this.lastdraw = start;\n\n        const { width, height } = canvas.getBoundingClientRect();\n        const ctx = canvas.getContext(\"2d\", { alpha: false });\n        \n        ctx.clearRect(0, 0, width, height)\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fillRect(0, 0, width, height);\n\n\n        // finding location in terms of iterators of current cell\n        // let {cell_i, cell_j, cell_k, cell_l} = this.map_grid.getChunkPosOffset(this.currentcell, startpoint);\n\n        let colornum;\n        let x;\n        let y;\n\n        let mapoffset_x = Math.floor(this.mapoffset.x*this.scale);\n        let mapoffset_y = Math.floor(this.mapoffset.y*this.scale);\n        // let mapoffset_x = this.mapoffset.x;\n        // let mapoffset_y = this.mapoffset.y;\n\n        let doFill = (i,j,k,l) => {\n\n            x = (((i+startpoint.x)*CHUNKSIZE+k))*(this.scale)+mapoffset_x;\n            y = (((j+startpoint.y)*CHUNKSIZE+l))*(this.scale)+mapoffset_y;\n            if (x%1!==0||y%1!==0||this.scale%1!==0) console.log(\"ALERT:\", x, y, this.scale);\n            ctx.fillRect(x, y, this.scale, this.scale);\n            // console.log(x,y,cellapparentsize);\n        }\n        if (this.map_grid.data === null) return;\n        // for map\n\n\n        let chunkbufferoffset = 0;\n\n        if (this.props.getDebugMode()) ctx.beginPath();\n        for (let i=0;i<this.map_grid.numchunks.x;i++) {\n            for (let j=0;j<this.map_grid.numchunks.y;j++) {\n                // for each chunk\n                if (this.props.getDebugMode()) {\n                    x = (((i+startpoint.x)*CHUNKSIZE))*(this.scale)+mapoffset_x;\n                    y = (((j+startpoint.y)*CHUNKSIZE))*(this.scale)+mapoffset_y;\n\n                    ctx.fillStyle = \"#000000\";\n                    ctx.lineWidth = 0.01*Math.floor(this.scale);\n                    ctx.moveTo(x, 0);\n                    ctx.lineTo(x, height);\n                    // ctx.stroke();\n                    ctx.moveTo(0, y);\n                    ctx.lineTo(width, y);\n                }\n                for (let c=0;c<(CHUNKSIZE*CHUNKSIZE);c++) {\n                    let k = Math.floor(c/CHUNKSIZE);\n                    let l = c-(k*CHUNKSIZE);\n                    \n                    colornum = this.map_grid.dataview[chunkbufferoffset+c];\n\n                    if (colornum!==16777215){\n                        ctx.fillStyle = colorToString(colornum);\n                        doFill(i,j,k,l);\n                    }\n                }\n                chunkbufferoffset += (CHUNKSIZE*CHUNKSIZE);\n            }\n        }\n        if (this.props.getDebugMode()) ctx.stroke();\n\n        if (this.props.toolmode===DRAWTOOL) {\n            ctx.fillStyle = colorToString(this.props.getColorSelected())+\"ff\";\n            doFill(this.cellpos.i,this.cellpos.j,this.cellpos.k,this.cellpos.l);\n        }\n        this.props.changeDrawTime(Date.now()-start);\n    }\n\n    updateCanvas() {\n        let start = Date.now(); // time testing\n\n        let {startpoint, numchunks} = this.map_grid.getValues(this.canvas, this.mapoffset.multipliedby(this.scale), this.scale);\n        let linestosend = this.drawLines;\n        this.drawLines = [];\n        this.is_updating = true;\n        this.map_grid.setMatrix(numchunks, startpoint, linestosend)\n        .then(()=>{\n            this.drawMap(this.canvas, startpoint, true);\n            this.startpoint = startpoint;\n            this.props.changeUpdateTime(Date.now()-start);\n            this.is_updating = false;\n        }).then(()=>{\n            this.drawcache.forEach((draw) => {draw()});\n        });\n\n        setTimeout(()=>{this.updateCanvas()}, 1000);\n    }\n\n    // stolen code lmao\n    resizeCanvas(canvas) {\n        const { width, height } = canvas.getBoundingClientRect();\n        \n        if (canvas.width !== width || canvas.height !== height) {\n          const { devicePixelRatio:ratio=1 } = window;\n          const context = canvas.getContext('2d');\n          canvas.width = (1*width*ratio);\n          canvas.height = (1*height*ratio);\n          context.scale(ratio, ratio);\n        //   canvas.style.width = `${width}px`;\n        //   canvas.style.height = `${height}px`;\n          return true;\n        }\n    \n        return false\n    }\n\n    drawCellAtMouse(x,y) {\n        const currentpos = new Vector2D(x-this.celloffset.x,y-this.celloffset.y);\n\n        let {i, j, k, l} = this.map_grid.getChunkPosOffset(currentpos, this.startpoint);\n        let dataindex = this.map_grid.getDataIndex(i,j,k,l);\n        if (dataindex < this.map_grid.data.byteLength/4) this.map_grid.addCell(dataindex, this.props.getColorSelected());\n    }\n\n    moveCursor(event) {\n        let update = false;\n        let newcursorcurrent = this.getCursorPosition(event, this.canvas);\n        if (this.rmousedown) {\n            this.moveMap(this.cursorcurrent, newcursorcurrent);\n            update = true;\n        }\n        this.cursorcurrent = newcursorcurrent;\n        let newcurrentcell = this.getCurrentCell();\n        // Drawing line and updating stats\n        if (!this.currentcell.isEqualTo(newcurrentcell)) {\n            if (this.lmousedown) this.drawLine(this.currentcell,newcurrentcell);\n            this.currentcell = newcurrentcell;\n            this.cellpos = this.map_grid.getChunkPosOffset(this.currentcell, this.startpoint);\n            this.props.changeCursorLoc(this.currentcell);\n            this.props.changeChunkLoc(this.cellpos.i+this.startpoint.x,this.cellpos.j+this.startpoint.y);\n            update = true;\n        }\n        return update;\n    }\n\n    drawLine(p1,p2) {\n        let thisdraw = ()=>{plotLine(p1, p2, this.celloffset, (x,y)=>this.drawCellAtMouse(x,y))};\n        thisdraw();\n        if (this.is_updating) {this.drawcache.push(thisdraw)};\n        this.drawLines.push({p1:p1,p2:p2,offset:this.celloffset,blockid:this.props.getColorSelected()});\n    }\n\n    render() {\n        let getCursor = ()=>{\n            switch (this.props.toolmode) {\n                case EYEDROPTOOL:\n                    return \"crosshair\";\n                case MOVETOOL:\n                    return \"move\";\n                default:\n                    return \"default\";\n            }\n        }\n        return (<div>\n            <canvas ref={this.canvasRef2}></canvas>\n            <canvas \n                ref={this.canvasRef}\n                className='map-canvas primary'\n                style={{cursor:getCursor()}}\n                onContextMenu={(e) => {\n                    e.preventDefault();\n                }}\n                onMouseDown={(e) => {\n                    e.preventDefault();\n                    if (e.button === 0) {\n                        switch (this.props.toolmode) {\n                            case EYEDROPTOOL:\n                                console.log(\"eyedroptool used\");\n                                let {i,j,k,l} = this.map_grid.getChunkPosOffset(this.currentcell, this.startpoint);\n                                let dataindex = this.map_grid.getDataIndex(i,j,k,l);\n                                this.props.changeColor(this.map_grid.dataview[dataindex]);\n                                // this.props.changeToolMode(DRAWTOOL);\n                                break;\n                            case MOVETOOL:\n                                this.rmousedown=true;\n                                break;\n                            default:\n                                this.lmousedown=true;\n                                this.drawLine(this.currentcell,this.currentcell);\n                                this.drawMap(this.canvas, this.startpoint);\n                                break;\n                        }\n                    }\n                    else if (e.button === 2) {\n                        this.rmousedown=true;\n                    }\n                }}\n                onMouseUp={(e) => {\n                    this.lmousedown=false;\n                    this.rmousedown=false;\n                    this.drawMap(this.canvas, this.startpoint);\n                }}\n                onMouseMove={(e) => {\n                    if (this.moveCursor(e)) this.drawMap(this.canvas, this.startpoint);\n                }}\n                onMouseLeave={(e) => {\n                    this.moveCursor(e);\n                    this.lmousedown=false;\n                    this.rmousedown=false;\n                    this.drawMap(this.canvas, this.startpoint);\n                }}\n                onWheel={(e) => {\n                    let newscale = this.tempscale - Math.floor(e.deltaY)/1000;\n                    // console.log(this.scale, this.tempscale);\n                    if (newscale>LOWESTSCALE) this.tempscale = newscale;\n                    else this.tempscale = LOWESTSCALE;\n                    let oldscale = this.scale;\n                    this.scale = Math.floor(this.tempscale);\n                    \n                    if (oldscale!==this.scale) this.drawMap(this.canvas, this.startpoint);\n                }}\n            ></canvas></div>\n        )\n    }\n}\n\n// needs to be fixed up - maybe add useEffect()\nclass Palette extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = (e) => {\n            this.props.changeColor(e.target.value);\n        }\n    }\n\n    render() {\n        return (\n            <div className='palette primary'>\n                {\n                    colors.map((color,index) => (\n                        <div \n                            key={index} \n                            style={{backgroundColor: `${color}`}} \n                            className={`blockbutton` + (this.props.isSelected(color) ? \"selected\" : \"\")}\n                            onClick={() => {this.props.changeColor(color);}}\n                            //onClick={() => {console.log(button.blockid)}}\n                            ></div>\n                    ))\n                }\n                <input value={this.props.color} type={\"color\"} onChange={this.handleChange} ></input>\n                {/* <input type={\"submit\"} value={\"Apply\"}></input> */}\n        </div>\n        )\n    }\n\n}\n\n\n\n\nfunction App() {\n  return (\n    <AppWrapper/>\n  );\n}\n\nexport default App;\n"],"mappings":";;;;;;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,eAAe,QAAQ,QAAQ;AAGxC,IAAMC,SAAS,GAAG,EAAE;AAEpB,IAAMC,WAAW,GAAG,CAAC;AAErB,IAAMC,QAAQ,GAAG,CAAC;AAClB,IAAMC,WAAW,GAAG,CAAC;AACrB,IAAMC,QAAQ,GAAG,CAAC;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,MAAM,GAAG,CACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS;AAAE;AACX,SAAS,CAAC;AAAA,CACX;;AAIH,SAASC,WAAWA,CAACC,EAAE,EAAEC,EAAE,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"},"metadata":{},"sourceType":"module"}