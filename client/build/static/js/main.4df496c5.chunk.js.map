{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["DRAWTOOL","MOVETOOL","blocks","blockid","blockname","imagesrc","plotLineLow","x0","y0","x1","y1","drawFunc","dx","dy","yi","D","y","x","plotLineHigh","xi","Vector2D","_classCallCheck","this","_createClass","key","value","othervector","number","Map","data","dataview","numchunks","canvas","offset","scale","chunkpixels","startpoint","Math","floor","_canvas$getBoundingCl","getBoundingClientRect","width","height","ceil","dimn","start","lines","coords","map_grid","i","j","coordsobj","push","Promise","resolve","reject","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","arrayBuffer","chunkbuffer","Uint32Array","currentcell","k","l","index","colorhex","AppWrapper","_React$Component","props","_this","_possibleConstructorReturn","_getPrototypeOf","call","state","tool_mode","debug_mode","show_stats","color_selected","update","time","tot_time","num_updates","draw","cursorx","cursory","offsetx","offsety","chunkx","chunky","cxstart","cystart","cxend","cyend","getColorSelected","getDebugMode","getToolMode","changeToolMode","change_to","setState","changeColor","out_num","parseInt","substring","console","log","isSelected","changeUpdateTime","new_time","changeDrawTime","changeCursorLoc","vector","changeOffsetLoc","changeChunkLoc","_inherits","document","style","overflow","filename","x2","y2","response","get","split","blob","pngblob","url","window","URL","createObjectURL","link","createElement","href","setAttribute","appendChild","click","parentNode","removeChild","_this2","React","className","MapCanvas","toolmode","Palette","position","right","round","onClick","checked","type","onChange","defaultValue","e","target","mapDownload","src","Component","_React$Component2","_this3","drawLines","lastdraw","tempscale","cellpos","canvasRef","createRef","mapoffset","celloffset","cursorcurrent","lmousedown","rmousedown","current","setTimeout","updateCanvas","event","rect","clientX","left","clientY","top","end","transform","setTo","_this4","Date","now","resizeCanvas","_canvas$getBoundingCl2","ctx","getContext","clearRect","fillStyle","fillRect","mapoffset_x","mapoffset_y","doFill","chunkbufferoffset","beginPath","lineWidth","moveTo","lineTo","c","CHUNKSIZE","toString","padStart","stroke","_this5","_this$map_grid$getVal","getValues","multipliedby","linestosend","setMatrix","drawMap","_canvas$getBoundingCl3","_window$devicePixelRa","devicePixelRatio","ratio","context","currentpos","_this$map_grid$getChu","getChunkPosOffset","dataindex","getDataIndex","byteLength","addCell","newcursorcurrent","getCursorPosition","moveMap","newcurrentcell","getCurrentCell","isEqualTo","drawLine","p1","p2","_this6","abs","plotLine","drawCellAtMouse","_this7","ref","cursor","getCursor","onContextMenu","preventDefault","onMouseDown","button","_this7$map_grid$getCh","onMouseUp","onMouseMove","moveCursor","onMouseLeave","onWheel","newscale","deltaY","oldscale","_React$Component3","_this8","handleChange","_this9","map","backgroundColor","concat","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4df496c5.chunk.js","sourcesContent":["import './App.css';\nimport React, { createRef } from 'react';\n\n\nconst CHUNKSIZE = 16;\n\nconst LOWESTSCALE = 3;\n\nconst DRAWTOOL = 0;\nconst EYEDROPTOOL = 1;\nconst MOVETOOL = 2;\n  \nconst blocks = [\n    {\n        blockid: '0',\n        blockname: '1',\n        imagesrc: '#ffffff'\n    },\n    {\n        blockid: '1',\n        blockname: '2',\n        imagesrc: '#d1e7dc'\n    },\n    {\n        blockid: '2',\n        blockname: '3',\n        imagesrc: '#c4d4e1'\n    },\n    {\n        blockid: '3',\n        blockname: '4',\n        imagesrc: '#bcb5d3'\n    },\n    {\n        blockid: '4',\n        blockname: '5',\n        imagesrc: '#f5dbe2'\n    },\n    {\n        blockid: '5',\n        blockname: '6',\n        imagesrc: '#eeb6c9'\n    },\n    {\n        blockid: '6',\n        blockname: '7',\n        imagesrc: '#c49abf'\n    },\n    {\n        blockid: '7',\n        blockname: '8',\n        imagesrc: '#bada55'\n    },\n    {\n        blockid: '8',\n        blockname: '9',\n        imagesrc: '#ffd700'\n    },\n    {\n        blockid: '9',\n        blockname: '10',\n        imagesrc: '#f47b79'\n    },\n    {\n        blockid: 'a',\n        blockname: '11',\n        imagesrc: '#c6e2d4'\n    },\n    {\n        blockid: 'b',\n        blockname: '12',\n        imagesrc: '#b6d3c2'\n    },\n    {\n        blockid: 'c',\n        blockname: '13',\n        imagesrc: '#e0b1cb'\n    },\n    {\n        blockid: 'd',\n        blockname: '14',\n        imagesrc: '#d0a7b7'\n    },\n    {\n        blockid: 'e',\n        blockname: '15',\n        imagesrc: '#f3d1d3'\n    },\n    {\n        blockid: 'f',\n        blockname: '16',\n        imagesrc: '#e9b8c8'\n    }\n];\n\n  \n\nfunction plotLineLow(x0, y0, x1, y1, drawFunc) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    let yi = 1;\n    if (dy < 0) {\n        yi = -1;\n        dy = -dy;\n    }\n    let D = (2 * dy) - dx;\n    let y = y0;\n\n    for (let x = x0;x<x1+1;x++) {\n        drawFunc(x, y);\n        if (D > 0) {\n            y = y + yi;\n            D = D + (2 * (dy - dx));\n        } else {\n            D = D + 2*dy;\n        }\n    }\n}\nfunction plotLineHigh(x0, y0, x1, y1, drawFunc) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    let xi = 1;\n    if (dx < 0) {\n        xi = -1;\n        dx = -dx;\n    }\n    let D = (2 * dx) - dy;\n    let x = x0;\n\n    for (let y = y0;y<y1+1;y++) {\n        drawFunc(x, y);\n        if (D > 0) {\n            x = x + xi;\n            D = D + (2 * (dx - dy));\n        } else {\n            D = D + 2*dx;\n        }\n    }\n}\n\nfunction plotLine(p1, p2, offset, drawFunc) {\n    \n    let x0 = p1.x+offset.x;\n    let y0 = p1.y+offset.y;\n    \n    let x1 = p2.x+offset.x;\n    let y1 = p2.y+offset.y;\n\n    if (x0===x1 && y0===y1) drawFunc(x0,y0);\n\n\n    if (Math.abs(y1 - y0) < Math.abs(x1 - x0)) {\n        if (x0 > x1) plotLineLow(x1, y1, x0, y0, drawFunc);\n        else plotLineLow(x0, y0, x1, y1, drawFunc);\n    }\n    else {\n        if (y0 > y1) plotLineHigh(x1, y1, x0, y0, drawFunc);\n        else plotLineHigh(x0, y0, x1, y1, drawFunc);\n    }\n}\n\n\nclass Vector2D {\n    constructor(x,y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    transform(x,y) {\n        this.x += x;\n        this.y += y;\n    }\n\n    setTo(x,y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isEqualTo(othervector) {\n        return (this.x===othervector.x && this.y===othervector.y);\n    }\n    notEqualTo(othervector) {\n        return (this.x!==othervector.x || this.y!==othervector.y);\n    }\n\n    positive() {\n        return (this.x >= 0 && this.y >=0);\n    }\n\n    multipliedby(number) {\n        return new Vector2D(this.x*number,this.y*number);\n    }\n    transformedby(x,y) {\n        return new Vector2D(this.x+x,this.y+y);\n    }\n}\n\n\nclass Map {\n    constructor() {\n        // this.canvasdimensions = new Vector2D(w,h); // establishing at start means no resizing canvas element\n        this.data = null;\n        this.dataview = null;\n        this.numchunks = null;\n    }\n\n    getValues(canvas, offset, scale) {\n        let chunkpixels = CHUNKSIZE*scale;\n\n        let numchunks = new Vector2D(0,0);\n        let startpoint = new Vector2D(0,0);\n\n        startpoint.x = (offset.x === 0) ? 0 : Math.floor((-1*offset.x)/chunkpixels);\n        startpoint.y = (offset.y === 0) ? 0 : Math.floor((-1*offset.y)/chunkpixels);\n\n        const { width, height } = canvas.getBoundingClientRect();\n\n        numchunks.x = Math.ceil(width/chunkpixels)+1; // bit cheaty - should probs optimise\n        numchunks.y = Math.ceil(height/chunkpixels)+1;\n\n        return {startpoint, numchunks};\n    }\n\n    setMatrix(dimn, start, lines) {\n\n        let coords = [];\n        let map_grid = this;\n\n        for (let i=0;i<dimn.x;i++) {\n            for (let j=0;j<dimn.y;j++) {\n                let coordsobj = { x: start.x+i, y: start.y+j };\n                coords.push(coordsobj);    \n            }\n        }\n        return new Promise(function(resolve, reject) {\n            fetch('/getchunks',{\n                method: 'POST',\n                headers: {'Accept': 'application/octet-stream', 'Content-Type': 'application/json'},\n                body: JSON.stringify({coords:coords, lines:lines})\n            }).then((data)=>{\n                return data.arrayBuffer();\n            }).then((chunkbuffer) => {\n                // console.log([...new Uint8Array(chunkbuffer)].map(x => x.toString(16).padStart(2, '0')));\n                map_grid.data = chunkbuffer;\n                map_grid.dataview = new Uint32Array(map_grid.data);\n                map_grid.numchunks = dimn;\n                resolve();\n            });\n        });\n    }\n\n    getChunkPosOffset(currentcell, startpoint) {\n        const i = Math.floor((currentcell.x/CHUNKSIZE))-startpoint.x;\n        const k = currentcell.x - (i+startpoint.x)*CHUNKSIZE;\n\n        const j = Math.floor((currentcell.y/CHUNKSIZE))-startpoint.y;\n        const l = currentcell.y - (j+startpoint.y)*CHUNKSIZE;\n\n\n        return {i, j, k, l};\n    }\n\n    addCell(index,colorhex) {\n        this.dataview[index] = colorhex;\n        // console.log(data[index], colorhex);\n    }\n    getDataIndex(i,j,k,l) {\n        return i*(this.numchunks.y)*(CHUNKSIZE*CHUNKSIZE)+j*(CHUNKSIZE*CHUNKSIZE)+k*CHUNKSIZE+l;\n    }\n}\n\n\nclass AppWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tool_mode: MOVETOOL,\n            debug_mode: false,\n            show_stats: true,\n            color_selected: 1672153, \n            update: {\n                time: 0,\n                tot_time: 0,\n                num_updates: 1\n            },\n            draw: {\n                time: 0,\n                tot_time: 0,\n                num_updates: 1\n            },\n            cursorx: 0,\n            cursory: 0,\n            offsetx: 0,\n            offsety: 0,\n            chunkx: 0,\n            chunky: 0,\n\n            cxstart:0,\n            cystart:0,\n            cxend:0,\n            cyend:0\n        };\n\n        this.getColorSelected = () => {return this.state.color_selected};\n        this.getDebugMode = () => {return this.state.debug_mode};\n        this.getToolMode = () => {return this.state.tool_mode};\n\n        this.changeToolMode = (change_to) => {\n            this.setState({tool_mode: change_to});\n        }\n\n        this.changeColor = (blockid) => {\n            if (typeof blockid === 'string') {\n                let out_num = parseInt(blockid.substring(1), 16);\n                console.log(blockid.substring(1));\n                console.log(out_num);\n                this.setState({color_selected: out_num});\n            }\n            else if (typeof blockid === 'number') {\n                this.setState({color_selected: blockid});\n            }\n            this.changeToolMode(DRAWTOOL);\n        };\n        this.isSelected = (blockid) => {\n            if (typeof blockid === 'string') {\n                let out_num = parseInt(blockid.substring(1), 16);\n                return (out_num===this.state.color_selected);\n            }\n            else if (typeof blockid === 'number') {\n                return (blockid===this.state.color_selected)\n            }\n        };\n\n        this.changeUpdateTime = (new_time) => {\n            this.setState({update:{\n                time: new_time, \n                tot_time: this.state.update.tot_time+new_time, \n                num_updates: this.state.update.num_updates+1\n            }});\n        }\n        this.changeDrawTime = (new_time) => {\n            this.setState({draw:{\n                time: new_time, \n                tot_time: this.state.draw.tot_time+new_time, \n                num_updates: this.state.draw.num_updates+1\n            }});\n        }\n        this.changeCursorLoc = (vector) => {\n            this.setState({cursorx: vector.x,cursory: vector.y});\n        }\n        this.changeOffsetLoc = (vector) => {\n            this.setState({offsetx: vector.x,offsety: vector.y});\n        }\n        this.changeChunkLoc = (x,y) => {\n            this.setState({chunkx: x,chunky: y});\n        }\n    }\n\n    componentDidMount() {\n        document.body.style.overflow = \"hidden\"; // stops user from scrolling the page\n    }\n\n    mapDownload() {\n        let filename;\n        let coordsobj = {x1:this.state.cxstart,y1:this.state.cystart,x2:this.state.cxend,y2:this.state.cyend};\n        if (coordsobj.x1===coordsobj.x2 || coordsobj.y1===coordsobj.y2 || coordsobj.x1>coordsobj.x2 || coordsobj.y1>coordsobj.y2) return;\n\n        fetch('/getimage',{\n            method: 'POST',\n            headers: {'Accept': 'application/octet-stream', 'Content-Type': 'application/json'},\n            body: JSON.stringify(coordsobj)\n        }).then((response) => {\n            filename = response.headers.get('Content-Disposition').split('\"')[1];\n            return response.blob()\n        })\n        .then((pngblob) => {\n            const url = window.URL.createObjectURL(pngblob);\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download',filename);\n            document.body.appendChild(link);\n            link.click();\n            link.parentNode.removeChild(link);\n        });\n    }\n\n    render() {\n        return (\n            <div className='App-wrapper'>\n                <MapCanvas \n                    toolmode={this.state.tool_mode}\n                    getToolMode={this.getToolMode}\n                    changeToolMode={this.changeToolMode}\n                    getDebugMode={this.getDebugMode}\n                    changeUpdateTime={this.changeUpdateTime}\n                    changeDrawTime={this.changeDrawTime}\n                    getColorSelected={this.getColorSelected}\n                    changeCursorLoc={this.changeCursorLoc}\n                    changeOffsetLoc={this.changeOffsetLoc}\n                    changeChunkLoc={this.changeChunkLoc}\n                    changeColor={this.changeColor}\n                />\n                <Palette isSelected={this.isSelected} changeColor={this.changeColor}/>\n                <div className='drawer primary'>\n                    {(this.state.show_stats)?(<div style={{position: `absolute`,right:`0.8vw`}}>\n                        ({this.state.update.time}ms, avg: {Math.round(this.state.update.tot_time/this.state.update.num_updates)}ms, {this.state.update.num_updates} updates)\n                        <br/>({this.state.draw.time}ms, avg: {Math.round(this.state.draw.tot_time/this.state.draw.num_updates)}ms, {this.state.draw.num_updates} draws)\n                        <br/>Cursor: ({this.state.cursorx},{this.state.cursory})\n                        <br/>Offset: ({this.state.offsetx},{this.state.offsety})\n                        <br/>Chunk: ({this.state.chunkx},{this.state.chunky})\n                    </div>):null}\n\n                    <div\n                        className={`toolbutton` + (this.getToolMode()===DRAWTOOL ? \"selected\" : \"\")+ ` blockbutton` + (this.getToolMode()===DRAWTOOL ? \"selected\" : \"\")}\n                        onClick={() => {this.changeToolMode(DRAWTOOL)}}\n                    >draw</div>\n                    <div\n                        className={`toolbutton` + (this.getToolMode()===EYEDROPTOOL ? \"selected\" : \"\")+ ` blockbutton` + (this.getToolMode()===EYEDROPTOOL ? \"selected\" : \"\")}\n                        onClick={() => {this.changeToolMode(EYEDROPTOOL)}}\n                    >eyedrop</div>\n                    <div\n                        className={`toolbutton` + (this.getToolMode()===MOVETOOL ? \"selected\" : \"\")+ ` blockbutton` + (this.getToolMode()===MOVETOOL ? \"selected\" : \"\")}\n                        onClick={() => {this.changeToolMode(MOVETOOL)}}\n                    >move</div>\n                    \n\n                    <input checked={this.state.debug_mode} type={\"checkbox\"} onChange={()=>{this.setState({debug_mode:!this.state.debug_mode})}}></input> Debug Mode&ensp;\n                    <input checked={this.state.show_stats} type={\"checkbox\"} onChange={()=>{this.setState({show_stats:!this.state.show_stats})}}></input> Stats\n                    <table\n                        className={`download-wrapper`}\n                        // onClick={() => this.fileDownload()}\n                    >\n                        <tr>\n                            <p>from:&nbsp;</p><input defaultValue={\"0\"} type={\"number\"} style={{width:\"35px\"}} onChange={(e)=>this.setState({cxstart:parseInt(e.target.value)})}></input>\n                            <input defaultValue={\"0\"} type={\"number\"} style={{width:\"35px\"}} onChange={(e)=>this.setState({cystart:parseInt(e.target.value)})}></input>\n                        </tr>\n                        <tr>\n                            <p>to:&nbsp;</p><input defaultValue={\"0\"} type={\"number\"} style={{width:\"35px\"}} onChange={(e)=>this.setState({cxend:parseInt(e.target.value)})}></input>\n                            <input defaultValue={\"0\"} type={\"number\"} style={{width:\"35px\"}} onChange={(e)=>this.setState({cyend:parseInt(e.target.value)})}></input>\n                        </tr>\n                        <tr>\n                            <p >Save PNG:</p>\n                            <div className={`download-button`} onClick={() => this.mapDownload()}><img src='save.png'/></div>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass MapCanvas extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.drawLines = [];\n\n        this.lastdraw = 0;\n\n        this.scale = 16;\n        this.tempscale = this.scale;\n\n        this.cellpos = {i:0,j:0,k:0,l:0};\n\n        this.map_grid = null;\n        this.canvasRef = createRef();\n    \n        this.mapoffset = new Vector2D(0,0);\n        this.celloffset = new Vector2D(0,0);\n        this.currentcell = new Vector2D(0,0);\n        this.startpoint = new Vector2D(0,0);\n\n        this.cursorcurrent = new Vector2D(0,0);\n        this.lmousedown = false;\n        this.rmousedown = false;\n\n        this.canvas = null;\n    }\n\n    //Called after element's initialisation\n    componentDidMount() { \n        this.canvas = this.canvasRef.current;\n        this.map_grid = new Map();\n        setTimeout(this.updateCanvas(), 1000);\n    }\n\n    getCursorPosition(event, canvas) {\n        const rect = canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        const pos = new Vector2D(x,y);\n        return pos;\n    }\n\n    getCurrentCell() {\n        let x = Math.floor((this.cursorcurrent.x-this.mapoffset.x*this.scale)/(this.scale));\n        let y = Math.floor((this.cursorcurrent.y-this.mapoffset.y*this.scale)/(this.scale));\n        const pos = new Vector2D(x,y);\n        return pos;\n    }\n\n    moveMap(start, end) {\n        let x = (end.x-start.x)/this.scale;\n        let y = (end.y-start.y)/this.scale;\n        this.mapoffset.transform(x,y);\n        this.celloffset.setTo(Math.floor(this.mapoffset.x),Math.floor(this.mapoffset.y));\n        this.props.changeOffsetLoc(this.celloffset);\n    }\n\n    drawMap (canvas, startpoint) {\n        let start =  Date.now();\n\n        // if (start < (this.lastdraw + 1000/60)) return; // Only drawing every 1/60th of a second\n        this.lastdraw = start;\n\n        this.resizeCanvas(canvas);\n        const { width, height } = canvas.getBoundingClientRect();\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, width, height)\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fillRect(0, 0, width, height);\n\n        // finding location in terms of iterators of current cell\n        // let {cell_i, cell_j, cell_k, cell_l} = this.map_grid.getChunkPosOffset(this.currentcell, startpoint);\n\n        let blockid;\n        let x;\n        let y;\n\n        let mapoffset_x = Math.floor(this.mapoffset.x*this.scale);\n        let mapoffset_y = Math.floor(this.mapoffset.y*this.scale);\n        // let mapoffset_x = this.mapoffset.x;\n        // let mapoffset_y = this.mapoffset.y;\n\n        let doFill = (i,j,k,l) => {\n\n            x = (((i+startpoint.x)*CHUNKSIZE+k))*(this.scale)+mapoffset_x;\n            y = (((j+startpoint.y)*CHUNKSIZE+l))*(this.scale)+mapoffset_y;\n            if (x%1!==0||y%1!==0||this.scale%1!==0) console.log(\"ALERT:\", x, y, this.scale);\n            ctx.fillRect(x, y, this.scale, this.scale);\n            // console.log(x,y,cellapparentsize);\n        }\n        if (this.map_grid.data === null) return;\n        // for map\n\n\n        let chunkbufferoffset = 0;\n\n        if (this.props.getDebugMode()) ctx.beginPath();\n        for (let i=0;i<this.map_grid.numchunks.x;i++) {\n            for (let j=0;j<this.map_grid.numchunks.y;j++) {\n                // for each chunk\n                if (this.props.getDebugMode()) {\n                    x = (((i+startpoint.x)*CHUNKSIZE))*(this.scale)+mapoffset_x;\n                    y = (((j+startpoint.y)*CHUNKSIZE))*(this.scale)+mapoffset_y;\n\n                    ctx.fillStyle = \"#000000\";\n                    ctx.lineWidth = 0.01*Math.floor(this.scale);\n                    ctx.moveTo(x, 0);\n                    ctx.lineTo(x, height);\n                    // ctx.stroke();\n                    ctx.moveTo(0, y);\n                    ctx.lineTo(width, y);\n                }\n                for (let c=0;c<(CHUNKSIZE*CHUNKSIZE);c++) {\n                    let k = Math.floor(c/CHUNKSIZE);\n                    let l = c-(k*CHUNKSIZE);\n                    \n                    blockid = this.map_grid.dataview[chunkbufferoffset+c];\n\n                    if (blockid!==16777215){\n                        // ctx.fillStyle = blockid.toString(16);\n                        ctx.fillStyle = \"#\" + (blockid & 0x00FFFFFF).toString(16).padStart(6, '0');\n                        // if (c===0) console.log((blockid & 0x00FFFFFF).toString(16).padStart(6, '0'))\n                        doFill(i,j,k,l,blockid);\n                    }\n                }\n                chunkbufferoffset += (CHUNKSIZE*CHUNKSIZE);\n            }\n        }\n        if (this.props.getDebugMode()) ctx.stroke();\n\n        if (this.props.toolmode===DRAWTOOL) {\n            ctx.fillStyle = \"#\"+(this.props.getColorSelected() & 0x00FFFFFF).toString(16).padStart(6, '0')+\"ff\";\n            doFill(this.cellpos.i,this.cellpos.j,this.cellpos.k,this.cellpos.l);\n        }\n        this.props.changeDrawTime(Date.now()-start);\n    }\n\n    updateCanvas() {\n        let start = Date.now(); // time testing\n\n        let {startpoint, numchunks} = this.map_grid.getValues(this.canvas, this.mapoffset.multipliedby(this.scale), this.scale);\n        let linestosend = this.drawLines;\n        this.drawLines = [];\n        this.map_grid.setMatrix(numchunks, startpoint, linestosend)\n        .then(()=>{\n            this.drawMap(this.canvas, startpoint);\n            this.startpoint = startpoint;\n            this.props.changeUpdateTime(Date.now()-start);\n        });\n\n        setTimeout(()=>{this.updateCanvas()}, 1000);\n    }\n\n    // stolen code lmao\n    resizeCanvas(canvas) {\n        const { width, height } = canvas.getBoundingClientRect();\n        \n        if (canvas.width !== width || canvas.height !== height) {\n          const { devicePixelRatio:ratio=1 } = window;\n          const context = canvas.getContext('2d');\n          canvas.width = (1*width*ratio);\n          canvas.height = (1*height*ratio);\n          context.scale(ratio, ratio);\n          return true;\n        }\n    \n        return false\n    }\n\n    drawCellAtMouse(x,y) {\n        const currentpos = new Vector2D(x-this.celloffset.x,y-this.celloffset.y);\n\n        let {i, j, k, l} = this.map_grid.getChunkPosOffset(currentpos, this.startpoint);\n        let dataindex = this.map_grid.getDataIndex(i,j,k,l);\n        if (dataindex < this.map_grid.data.byteLength/4) this.map_grid.addCell(dataindex, this.props.getColorSelected());\n    }\n\n    moveCursor(event) {\n        let update = false;\n        let newcursorcurrent = this.getCursorPosition(event, this.canvas);\n        if (this.rmousedown) {\n            this.moveMap(this.cursorcurrent, newcursorcurrent);\n            update = true;\n        }\n        this.cursorcurrent = newcursorcurrent;\n        let newcurrentcell = this.getCurrentCell();\n        // Drawing line and updating stats\n        if (!this.currentcell.isEqualTo(newcurrentcell)) {\n            if (this.lmousedown) this.drawLine(this.currentcell,newcurrentcell);\n            this.currentcell = newcurrentcell;\n            this.cellpos = this.map_grid.getChunkPosOffset(this.currentcell, this.startpoint);\n            this.props.changeCursorLoc(this.currentcell);\n            this.props.changeChunkLoc(this.cellpos.i+this.startpoint.x,this.cellpos.j+this.startpoint.y);\n            update = true;\n        }\n        return update;\n    }\n\n    drawLine(p1,p2) {\n        plotLine(p1, p2, this.celloffset, (x,y)=>this.drawCellAtMouse(x,y));\n        this.drawLines.push({p1:p1,p2:p2,offset:this.celloffset,blockid:this.props.getColorSelected()});\n    }\n\n    render() {\n        let getCursor = ()=>{\n            switch (this.props.toolmode) {\n                case EYEDROPTOOL:\n                    return \"crosshair\";\n                case MOVETOOL:\n                    return \"move\";\n                default:\n                    return \"default\";\n            }\n        }\n        return (\n            <canvas \n                ref={this.canvasRef}\n                className='map-canvas primary'\n                style={{cursor:getCursor()}}\n                onContextMenu={(e) => {\n                    e.preventDefault();\n                }}\n                onMouseDown={(e) => {\n                    e.preventDefault();\n                    if (e.button === 0) {\n                        switch (this.props.toolmode) {\n                            case EYEDROPTOOL:\n                                console.log(\"eyedroptool used\");\n                                let {i,j,k,l} = this.map_grid.getChunkPosOffset(this.currentcell, this.startpoint);\n                                let dataindex = this.map_grid.getDataIndex(i,j,k,l);\n                                this.props.changeColor(this.map_grid.dataview[dataindex]);\n                                // this.props.changeToolMode(DRAWTOOL);\n                                break;\n                            case MOVETOOL:\n                                this.rmousedown=true;\n                                break;\n                            default:\n                                this.lmousedown=true;\n                                this.drawLine(this.currentcell,this.currentcell);\n                                this.drawMap(this.canvas, this.startpoint);\n                                break;\n                        }\n                    }\n                    else if (e.button === 2) {\n                        this.rmousedown=true;\n                    }\n                }}\n                onMouseUp={(e) => {\n                    this.lmousedown=false;\n                    this.rmousedown=false;\n                    this.drawMap(this.canvas, this.startpoint);\n                }}\n                onMouseMove={(e) => {\n                    if (this.moveCursor(e)) this.drawMap(this.canvas, this.startpoint);\n                }}\n                onMouseLeave={(e) => {\n                    this.moveCursor(e);\n                    this.lmousedown=false;\n                    this.rmousedown=false;\n                    this.drawMap(this.canvas, this.startpoint);\n                }}\n                onWheel={(e) => {\n                    let newscale = this.tempscale - Math.floor(e.deltaY)/1000;\n                    // console.log(this.scale, this.tempscale);\n                    if (newscale>LOWESTSCALE) this.tempscale = newscale;\n                    else this.tempscale = LOWESTSCALE;\n                    let oldscale = this.scale;\n                    this.scale = Math.floor(this.tempscale);\n                    \n                    if (oldscale!==this.scale) this.drawMap(this.canvas, this.startpoint);\n                }}\n            ></canvas>\n        )\n    }\n}\n\n// needs to be fixed up - maybe add useEffect()\nclass Palette extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = (e) => {\n            this.props.changeColor(e.target.value);\n        }\n    }\n\n    render() {\n        return (\n            <div className='palette primary'>\n                {\n                    blocks.map(button => (\n                        <div \n                            key={button.blockid} \n                            style={{backgroundColor: `${button.imagesrc}`}} \n                            className={`blockbutton` + (this.props.isSelected(button.imagesrc) ? \"selected\" : \"\")}\n                            onClick={() => {this.props.changeColor(button.imagesrc)}}\n                            //onClick={() => {console.log(button.blockid)}}\n                            ></div>\n                    ))\n                }\n                <input type={\"color\"} onChange={this.handleChange}></input>\n                {/* <input type={\"submit\"} value={\"Apply\"}></input> */}\n        </div>\n        )\n    }\n\n}\n\n\n\n\nfunction App() {\n  return (\n    <AppWrapper/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}